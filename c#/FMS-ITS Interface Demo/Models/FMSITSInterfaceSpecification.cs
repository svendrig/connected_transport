// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: FMS_ITS_Interface_Specification.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Fmsitsinterface {

  /// <summary>Holder for reflection information generated from FMS_ITS_Interface_Specification.proto</summary>
  public static partial class FMSITSInterfaceSpecificationReflection {

    #region Descriptor
    /// <summary>File descriptor for FMS_ITS_Interface_Specification.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FMSITSInterfaceSpecificationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVGTVNfSVRTX0ludGVyZmFjZV9TcGVjaWZpY2F0aW9uLnByb3RvEg9mbXNp",
            "dHNpbnRlcmZhY2UaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i",
            "jAEKDUZtc0l0c01lc3NhZ2USMgoMbWVzc2FnZV90eXBlGAEgASgOMhwuZm1z",
            "aXRzaW50ZXJmYWNlLk1lc3NhZ2VUeXBlEhIKCnZlaGljbGVfaWQYAiABKAkS",
            "MwoJY29udGFpbmVyGAMgASgLMiAuZm1zaXRzaW50ZXJmYWNlLkZtc0l0c0Nv",
            "bnRhaW5lciK6AgoPRm1zSXRzQ29udGFpbmVyEjwKEXRpbWVzdGFtcF9tZXNz",
            "YWdlGAEgASgLMiEuZm1zaXRzaW50ZXJmYWNlLlRpbWVzdGFtcE1lc3NhZ2US",
            "NgoOaW5mb19jb250YWluZXIYAiABKAsyHi5mbXNpdHNpbnRlcmZhY2UuSW5m",
            "b0NvbnRhaW5lchI8ChFjb250ZW50X2NvbnRhaW5lchgDIAEoCzIhLmZtc2l0",
            "c2ludGVyZmFjZS5Db250ZW50Q29udGFpbmVyEj0KD2xvY2F0aW9uX3VwZGF0",
            "ZRgEIAEoCzIkLmZtc2l0c2ludGVyZmFjZS5Mb2NhdGlvblVwZGF0ZUV2ZW50",
            "EjQKDWVycm9yX21lc3NhZ2UYBSABKAsyHS5mbXNpdHNpbnRlcmZhY2UuRXJy",
            "b3JNZXNzYWdlIsIBCgxFcnJvck1lc3NhZ2USLgoKZXJyb3JfdHlwZRgBIAEo",
            "DjIaLmZtc2l0c2ludGVyZmFjZS5FcnJvclR5cGUSFQoNZXJyb3JfbWVzc2Fn",
            "ZRgCIAEoCRIVCg1yZWxhdGVkX2ZpZWxkGAMgASgJEjcKD3JlbGF0ZWRfbWVz",
            "c2FnZRgEIAEoCzIeLmZtc2l0c2ludGVyZmFjZS5GbXNJdHNNZXNzYWdlEhsK",
            "E3JlbGF0ZWRfcmF3X21lc3NhZ2UYBSABKAwivgEKEFRpbWVzdGFtcE1lc3Nh",
            "Z2USOAoUcmVxdWVzdF90cmFuc21pc3Npb24YASABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEjUKEXJlcXVlc3RfcmVjZXB0aW9uGAIgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI5ChVyZXNwb25zZV90cmFuc21p",
            "c3Npb24YAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIlAKD01l",
            "YXN1cmVtZW50VHlwZRINCgV2YWx1ZRgBIAEoBRIuCgR1bml0GAIgASgOMiAu",
            "Zm1zaXRzaW50ZXJmYWNlLk1lYXN1cmVtZW50VW5pdCKhAgoNSW5mb0NvbnRh",
            "aW5lchIOCgZhdXRob3IYASABKAkSEAoIZXZlbnRfaWQYAiABKAkSQAoMbWVz",
            "c2FnZV90eXBlGAMgASgOMiouZm1zaXRzaW50ZXJmYWNlLkluZm9Db250YWlu",
            "ZXIuTWVzc2FnZVR5cGUSFQoNZXZlbnRfdmVyc2lvbhgEIAEoBRIxCg1jcmVh",
            "dGlvbl90aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIY",
            "ChBkZXNpcmVkX2ludGVydmFsGAYgASgFIkgKC01lc3NhZ2VUeXBlEhgKFFVO",
            "S05PV05fTUVTU0FHRV9UWVBFEAASBwoDTkVXEAESCgoGVVBEQVRFEAISCgoG",
            "REVMRVRFEAMieQoQQ29udGVudENvbnRhaW5lchI1Cg5pdHNfZXZlbnRfY29k",
            "ZRgBIAEoDjIdLmZtc2l0c2ludGVyZmFjZS5JdHNFdmVudENvZGUSLgoKZXZl",
            "bnRfaW5mbxgCIAEoCzIaLmZtc2l0c2ludGVyZmFjZS5FdmVudEluZm8i2AEK",
            "CUV2ZW50SW5mbxISCgpldmVudF90ZXh0GAEgASgJEisKCGxvY2F0aW9uGAIg",
            "ASgLMhkuZm1zaXRzaW50ZXJmYWNlLkxvY2F0aW9uEkMKFXN0YXRpY19ldmVu",
            "dF9tZXRhZGF0YRgDIAEoCzIkLmZtc2l0c2ludGVyZmFjZS5TdGF0aWNFdmVu",
            "dE1ldGFkYXRhEkUKFmR5bmFtaWNfZXZlbnRfbWV0YWRhdGEYBCABKAsyJS5m",
            "bXNpdHNpbnRlcmZhY2UuRHluYW1pY0V2ZW50TWV0YWRhdGEiLAoFUG9pbnQS",
            "EAoIbGF0aXR1ZGUYASABKAISEQoJbG9uZ2l0dWRlGAIgASgCIokCCghMb2Nh",
            "dGlvbhIrCgtjb29yZGluYXRlcxgBIAMoCzIWLmZtc2l0c2ludGVyZmFjZS5Q",
            "b2ludBJDChBjb29yZGluYXRlc190eXBlGAIgASgOMikuZm1zaXRzaW50ZXJm",
            "YWNlLkxvY2F0aW9uLkNvb3JkaW5hdGVzVHlwZRIxCgdoZWFkaW5nGAMgASgL",
            "MiAuZm1zaXRzaW50ZXJmYWNlLk1lYXN1cmVtZW50VHlwZSJYCg9Db29yZGlu",
            "YXRlc1R5cGUSHAoYVU5LTk9XTl9DT09SRElOQVRFU19UWVBFEAASDwoLTElO",
            "RV9TVFJJTkcQARIJCgVQT0lOVBACEgsKB1BPTFlHT04QAyK6BAoTU3RhdGlj",
            "RXZlbnRNZXRhZGF0YRJSChJ3ZWF0aGVyX2NvbmRpdGlvbnMYASABKA4yNi5m",
            "bXNpdHNpbnRlcmZhY2UuU3RhdGljRXZlbnRNZXRhZGF0YS5XZWF0aGVyQ29u",
            "ZGl0aW9ucxI+ChJyb2FkX2NvbmZpZ3VyYXRpb24YAiABKAsyIi5mbXNpdHNp",
            "bnRlcmZhY2UuUm9hZENvbmZpZ3VyYXRpb24SLgoKc3BlZWRfaW5mbxgDIAEo",
            "CzIaLmZtc2l0c2ludGVyZmFjZS5TcGVlZEluZm8SNgoOaXZyaV9jb250YWlu",
            "ZXIYBCABKAsyHi5mbXNpdHNpbnRlcmZhY2UuSXZyaUNvbnRhaW5lchIsCgls",
            "YW5lX2luZm8YBSABKAsyGS5mbXNpdHNpbnRlcmZhY2UuTGFuZUluZm8SMAoL",
            "c2Vuc29yX2luZm8YBiABKAsyGy5mbXNpdHNpbnRlcmZhY2UuU2Vuc29ySW5m",
            "bxI4Cg9vdmVydGFraW5nX2luZm8YByABKAsyHy5mbXNpdHNpbnRlcmZhY2Uu",
            "T3ZlcnRha2luZ0luZm8ijAEKEVdlYXRoZXJDb25kaXRpb25zEh0KGVVOS05P",
            "V05fV0VBVEhFUl9DT05ESVRJT04QABIOCgpIRUFWWV9SQUlOEAESEQoNU0xJ",
            "UFBFUllfUk9BRBACEgcKA0ZPRxADEg4KCkhFQVZZX1dJTkQQBBISCg5IRUFW",
            "WV9TTk9XRkFMTBAFEggKBEhBSUwQBiLLBAoRUm9hZENvbmZpZ3VyYXRpb24S",
            "TwoScm9hZF9jb25maWdfc3RhdHVzGAEgASgOMjMuZm1zaXRzaW50ZXJmYWNl",
            "LlJvYWRDb25maWd1cmF0aW9uLlJvYWRDb25maWdTdGF0dXMSMwoJbWF4X3Nw",
            "ZWVkGAIgASgLMiAuZm1zaXRzaW50ZXJmYWNlLk1lYXN1cmVtZW50VHlwZRJT",
            "ChRyb2FkX2NvbmZpZ19sb2NhdGlvbhgDIAEoDjI1LmZtc2l0c2ludGVyZmFj",
            "ZS5Sb2FkQ29uZmlndXJhdGlvbi5Sb2FkQ29uZmlnTG9jYXRpb24SEAoIZmxh",
            "c2hpbmcYBCABKAgSEgoKcmVkX2JvcmRlchgFIAEoCCLYAQoQUm9hZENvbmZp",
            "Z1N0YXR1cxIeChpVTktOT1dOX1JPQURfQ09ORklHX1NUQVRVUxAAEggKBE9Q",
            "RU4QARIKCgZDTE9TRUQQAhIaChZDTE9TRURfRk9SX0FMTF9UUkFGRklDEAIS",
            "DwoLTUVSR0VfUklHSFQQAxIOCgpNRVJHRV9MRUZUEAQSFwoTRU5EX09GX1JF",
            "U1RSSUNUSU9OUxAFEhIKDkNMT1NFRF9GT1JfWU9VEAYSFQoRQ0hBTkdFRF9N",
            "QVhfU1BFRUQQBxIJCgVCTEFOSxAIGgIQASJaChJSb2FkQ29uZmlnTG9jYXRp",
            "b24SFAoQVU5LTk9XTl9MT0NBVElPThAAEhcKE0xPQ0FUSU9OX0RPV05TVFJF",
            "QU0QARIVChFMT0NBVElPTl9VUFNUUkVBTRACIqACCg5PdmVydGFraW5nSW5m",
            "bxJNCg5hcHBsaWNhYmxlX2ZvchgBIAMoDjI1LmZtc2l0c2ludGVyZmFjZS5P",
            "dmVydGFraW5nSW5mby5BcHBsaWNhYmxlVmVoaWNsZVR5cGUSSQoKZXhjZXB0",
            "X2ZvchgCIAMoDjI1LmZtc2l0c2ludGVyZmFjZS5PdmVydGFraW5nSW5mby5B",
            "cHBsaWNhYmxlVmVoaWNsZVR5cGUidAoVQXBwbGljYWJsZVZlaGljbGVUeXBl",
            "EiMKH1VOS05PV05fQVBQTElDQUJMRV9WRUhJQ0xFX1RZUEUQABIRCg1BTExf",
            "TU9UT1JJWkVEEAESBwoDSEdWEAISDwoLQUdSSUNVTFRVUkUQAxIJCgVNT1BF",
            "RBAEInsKCVNwZWVkSW5mbxIbChNtYXhpbXVtX3NwZWVkX2xpbWl0GAEgASgF",
            "EhUKDW9wdGltYWxfc3BlZWQYAiABKAUSOgoQc3BlZWRfbGltaXRfdW5pdBgD",
            "IAEoDjIgLmZtc2l0c2ludGVyZmFjZS5NZWFzdXJlbWVudFVuaXQizwIKDUl2",
            "cmlDb250YWluZXISPgoScHJpb3JpdHlfY29udGFpbmVyGAEgASgLMiIuZm1z",
            "aXRzaW50ZXJmYWNlLlByaW9yaXR5Q29udGFpbmVyElYKH3RyYWZmaWNfbGln",
            "aHRfc3RhdGVfaW5mb3JtYXRpb24YAiABKAsyLS5mbXNpdHNpbnRlcmZhY2Uu",
            "VHJhZmZpY0xpZ2h0U3RhdGVJbmZvcm1hdGlvbhJYCiB0cmFmZmljX2xpZ2h0",
            "X3RpbWluZ19pbmZvcm1hdGlvbhgDIAEoCzIuLmZtc2l0c2ludGVyZmFjZS5U",
            "cmFmZmljTGlnaHRUaW1pbmdJbmZvcm1hdGlvbhJMChp0cmFmZmljX2xpZ2h0",
            "X3NwZWVkX2FkdmljZRgEIAEoCzIoLmZtc2l0c2ludGVyZmFjZS5UcmFmZmlj",
            "TGlnaHRTcGVlZEFkdmljZSJhChFQcmlvcml0eUNvbnRhaW5lchIOCgZzdGF0",
            "dXMYASABKAkSKwoIbWFuZXV2ZXIYAiABKAsyGS5mbXNpdHNpbnRlcmZhY2Uu",
            "TWFuZXV2ZXISDwoHbGFuZV9pZBgDIAEoBSKeBAocVHJhZmZpY0xpZ2h0U3Rh",
            "dGVJbmZvcm1hdGlvbhJRCg1jdXJyZW50X3N0YXRlGAEgASgOMjouZm1zaXRz",
            "aW50ZXJmYWNlLlRyYWZmaWNMaWdodFN0YXRlSW5mb3JtYXRpb24uQ3VycmVu",
            "dFN0YXRlEkIKBWFycm93GAIgASgOMjMuZm1zaXRzaW50ZXJmYWNlLlRyYWZm",
            "aWNMaWdodFN0YXRlSW5mb3JtYXRpb24uQXJyb3cSSAoIbW92ZW1lbnQYAyAB",
            "KA4yNi5mbXNpdHNpbnRlcmZhY2UuVHJhZmZpY0xpZ2h0U3RhdGVJbmZvcm1h",
            "dGlvbi5Nb3ZlbWVudCJ7CgxDdXJyZW50U3RhdGUSHwobVU5LTk9XTl9UUkFG",
            "RklDX0xJR0hUX1NUQVRFEAASBwoDUkVEEAESCQoFQU1CRVIQAhIJCgVHUkVF",
            "ThADEhMKD09SQU5HRV9GTEFTSElORxAEEggKBERBUksQBRIMCghOT19MSUdI",
            "VBAGIl8KBUFycm93EhEKDVVOS05PV05fQVJST1cQABIOCgpBUlJPV19OT05F",
            "EAESDgoKQVJST1dfTEVGVBACEg8KC0FSUk9XX1JJR0hUEAMSEgoOQVJST1df",
            "U1RSQUlHSFQQBCI/CghNb3ZlbWVudBIUChBVTktOT1dOX01PVkVNRU5UEAAS",
            "DQoJUFJPVEVDVEVEEAESDgoKUEVSTUlTU0lWRRACIrQBCh1UcmFmZmljTGln",
            "aHRUaW1pbmdJbmZvcm1hdGlvbhIwCgxtaW5fZW5kX3RpbWUYASABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEjAKDG1heF9lbmRfdGltZRgCIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLwoLbGlrZWx5X3RpbWUY",
            "AyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIj4KF1RyYWZmaWNM",
            "aWdodFNwZWVkQWR2aWNlEg4KBmFkdmljZRgBIAEoCRITCgthZHZpY2VfdHlw",
            "ZRgCIAEoCSJeCghMYW5lSW5mbxITCgttYXhfbGFuZV9pZBgBIAEoBRIPCgds",
            "YW5lX2lkGAIgASgFEiwKCW1hbmV1dmVycxgDIAMoCzIZLmZtc2l0c2ludGVy",
            "ZmFjZS5NYW5ldXZlciK8AQoITWFuZXV2ZXISNgoJZGlyZWN0aW9uGAEgAygO",
            "MiMuZm1zaXRzaW50ZXJmYWNlLk1hbmV1dmVyLkRpcmVjdGlvbhIUCgxhbHdh",
            "eXNfeWllbGQYAiABKAgiYgoJRGlyZWN0aW9uEhUKEVVOS05PV05fRElSRUNU",
            "SU9OEAASDAoIU1RSQUlHSFQQARIICgRMRUZUEAISCQoFUklHSFQQAxIKCgZV",
            "X1RVUk4QBBIPCgtVTlNQRUNJRklFRBAFIrQBCgpTZW5zb3JJbmZvEjQKDXRp",
            "cmVfcHJlc3N1cmUYASABKAsyHS5mbXNpdHNpbnRlcmZhY2UuVGlyZVByZXNz",
            "dXJlEjYKDnZlaGljbGVfd2VpZ2h0GAIgASgLMh4uZm1zaXRzaW50ZXJmYWNl",
            "LlZlaGljbGVXZWlnaHQSOAoOdmVoaWNsZV9oZWlnaHQYAyABKAsyIC5mbXNp",
            "dHNpbnRlcmZhY2UuTWVhc3VyZW1lbnRUeXBlIvIBCgxUaXJlUHJlc3N1cmUS",
            "RwoGc3RhdHVzGAEgASgOMjcuZm1zaXRzaW50ZXJmYWNlLlRpcmVQcmVzc3Vy",
            "ZS5WZWhpY2xlVGlyZVByZXNzdXJlU3RhdHVzEhIKCmF4bGVfY291bnQYAiAB",
            "KAUSLQoJYW5vbWFsaWVzGAMgAygLMhouZm1zaXRzaW50ZXJmYWNlLkFub21h",
            "bGllcyJWChlWZWhpY2xlVGlyZVByZXNzdXJlU3RhdHVzEhIKDlVOS05PV05f",
            "U1RBVFVTEAASBgoCT0sQARIPCgtOT0tfU1VTUEVDVBACEgwKCE5PS19GTEFU",
            "EAMi7AEKCUFub21hbGllcxIMCgRheGxlGAEgASgFEi0KBHNpZGUYAiABKA4y",
            "Hy5mbXNpdHNpbnRlcmZhY2UuQW5vbWFsaWVzLlNpZGUSOgoLbWVhc3VyZW1l",
            "bnQYAyABKA4yJS5mbXNpdHNpbnRlcmZhY2UuQW5vbWFsaWVzLlRpcmVTdGF0",
            "dXMiLQoEU2lkZRIQCgxVTktOT1dOX1NJREUQABIICgRMRUZUEAESCQoFUklH",
            "SFQQAiI3CgpUaXJlU3RhdHVzEhIKDlVOS05PV05fU1RBVFVTEAASCAoERkxB",
            "VBABEgsKB1NVU1BFQ1QQAiJlCg1WZWhpY2xlV2VpZ2h0EhIKCmF4bGVfY291",
            "bnQYASABKAUSQAoTd2VpZ2h0X21lYXN1cmVtZW50cxgCIAMoCzIjLmZtc2l0",
            "c2ludGVyZmFjZS5XZWlnaHRNZWFzdXJlbWVudHMiVAoSV2VpZ2h0TWVhc3Vy",
            "ZW1lbnRzEgwKBGF4bGUYASABKAUSMAoGd2VpZ2h0GAIgASgLMiAuZm1zaXRz",
            "aW50ZXJmYWNlLk1lYXN1cmVtZW50VHlwZSKGAQoURHluYW1pY0V2ZW50TWV0",
            "YWRhdGESNQoLZXZlbnRfc3BlZWQYASABKAsyIC5mbXNpdHNpbnRlcmZhY2Uu",
            "TWVhc3VyZW1lbnRUeXBlEjcKDWV2ZW50X2hlYWRpbmcYAiABKAsyIC5mbXNp",
            "dHNpbnRlcmZhY2UuTWVhc3VyZW1lbnRUeXBlIv0EChNMb2NhdGlvblVwZGF0",
            "ZUV2ZW50EgoKAmlkGAEgASgJEjEKDWNyZWF0aW9uX2RhdGUYAiABKAsyGi5n",
            "b29nbGUucHJvdG9idWYuVGltZXN0YW1wEkgKDWdlb19yZWZlcmVuY2UYAyAB",
            "KAsyMS5mbXNpdHNpbnRlcmZhY2UuTG9jYXRpb25VcGRhdGVFdmVudC5HZW9S",
            "ZWZlcmVuY2USLwoFc3BlZWQYBCABKAsyIC5mbXNpdHNpbnRlcmZhY2UuTWVh",
            "c3VyZW1lbnRUeXBlEjEKB2hlYWRpbmcYBSABKAsyIC5mbXNpdHNpbnRlcmZh",
            "Y2UuTWVhc3VyZW1lbnRUeXBlEkEKCWxpZmVjeWNsZRgGIAEoDjIuLmZtc2l0",
            "c2ludGVyZmFjZS5Mb2NhdGlvblVwZGF0ZUV2ZW50LkxpZmVDeWNsZRIvCgtk",
            "ZXZpY2VfZGF0ZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAS",
            "EwoLZ3BzX3F1YWxpdHkYCCABKAIabQoMR2VvUmVmZXJlbmNlEgsKA2xhdBgB",
            "IAEoARILCgNsb24YAiABKAESQwoEdHlwZRgDIAEoDjI1LmZtc2l0c2ludGVy",
            "ZmFjZS5Mb2NhdGlvblVwZGF0ZUV2ZW50Lkdlb1JlZmVyZW5jZVR5cGUiUQoQ",
            "R2VvUmVmZXJlbmNlVHlwZRIcChhHRU9SRUZFUkVOQ0VUWVBFX1VOS05PV04Q",
            "ABIfChtMQVRfTE9OX1BPSU5UX0dFT19SRUZFUkVOQ0UQASIuCglMaWZlQ3lj",
            "bGUSFQoRTElGRUNZQ0xFX1VOS05PV04QABIKCgZBQ1RVQUwQASp4CgtNZXNz",
            "YWdlVHlwZRIXChNNRVNTQUdFVFlQRV9VTktOT1dOEAASFQoRVElNRVNUQU1Q",
            "X01FU1NBR0UQARITCg9MT0NBVElPTl9VUERBVEUQAhIRCg1FVkVOVF9NRVNT",
            "QUdFEAMSEQoNRVJST1JfTUVTU0FHRRAEKroBCglFcnJvclR5cGUSFQoRRVJS",
            "T1JUWVBFX1VOS05PV04QABIRCg1NSVNTSU5HX0ZJRUxEEAESEQoNSU5WQUxJ",
            "RF9GSUVMRBACEhkKFVBSRV9DT05ESVRJT05fTk9UX01FVBADEhMKD0RBVEFf",
            "UkFURV9FUlJPUhAEEhcKE05PX1RJTUVTVEFNUF9BTlNXRVIQBRIUChBUSU1F",
            "RElGRl9UT09fQklHEAYSEQoNSU5WQUxJRF9QUk9UTxAHKsIBCg9NZWFzdXJl",
            "bWVudFVuaXQSCwoHVU5LTk9XThAAEhcKE0tJTE9NRVRFUlNfUEVSX0hPVVIQ",
            "ChIVChFNRVRFUlNfUEVSX1NFQ09ORBALEgwKCEtJTE9HUkFNEBQSCQoFUE9V",
            "TkQQFRIJCgVNRVRFUhAeEg4KCkNFTlRJTUVURVIQHxIPCgtNSUxMSVNFQ09O",
            "RBAoEgoKBlNFQ09ORBApEgoKBk1JTlVURRAqEggKBEhPVVIQKxILCgdERUdS",
            "RUVTEDIqmgUKDEl0c0V2ZW50Q29kZRIaChZVTktOT1dOX0lUU19FVkVOVF9D",
            "T0RFEAASHQoZQ0hBTkdFRF9GUkVRVUVOQ1lfUkVRVUVTVBABEhEKDU1BWElN",
            "VU1fU1BFRUQQZRIYChRBRFZJU09SWV9TUEVFRF9MSU1JVBBmEhIKDk9WRVJU",
            "QUtJTkdfQkFOEGcSFgoSTEFORV9DT05GSUdVUkFUSU9OEGgSDwoKUk9BRF9X",
            "T1JLUxDJARILCgZFVkVOVFMQygESEAoLUExBQ0VIT0xERVIQywESEAoLVFJB",
            "RkZJQ19KQU0QzAESFwoSU1RBVElPTkFSWV9WRUhJQ0xFEM0BEg0KCElOQ0lE",
            "RU5UEM4BEhcKEldFQVRIRVJfQ09ORElUSU9OUxDPARIUCg9PQkpFQ1RTX09O",
            "X1JPQUQQ0AESIgodRU1FUkdFTkNZX1ZFSElDTEVfQVBQUk9BQ0hJTkcQ0QES",
            "EwoOUk9BRF9JTlNQRUNUT1IQ0gESEwoOQlJJREdFX09QRU5JTkcQ0wESGQoU",
            "R0hPU1RfRFJJVkVSX1dBUk5JTkcQ1AESDQoIUFJJT1JJVFkQrQISFQoQU0VM",
            "RUNUSVZFX0FDQ0VTUxCuAhIZChRUUkFGRklDX0xJR0hUX1NUQVRVUxCRAxIZ",
            "ChRUUkFGRklDX0xJR0hUX1RJTUlORxCSAxITCg5BRFZJU09SWV9TUEVFRBCT",
            "AxIZChRSQUlMX0NST1NTSU5HX1NUQVRVUxCUAxIYChNUSVJFX1BSRVNTVVJF",
            "X0dBVUdFEPUDEg4KCUFMVElNRVRFUhD2AxILCgZXRUlHSFQQ9wMSFwoSUEFS",
            "S0lOR19PQ0NVUEFUSU9OEPgDEhgKE1BBUktJTkdfUkVTRVJWQVRJT04Q+QNC",
            "AlABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Fmsitsinterface.MessageType), typeof(global::Fmsitsinterface.ErrorType), typeof(global::Fmsitsinterface.MeasurementUnit), typeof(global::Fmsitsinterface.ItsEventCode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.FmsItsMessage), global::Fmsitsinterface.FmsItsMessage.Parser, new[]{ "MessageType", "VehicleId", "Container" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.FmsItsContainer), global::Fmsitsinterface.FmsItsContainer.Parser, new[]{ "TimestampMessage", "InfoContainer", "ContentContainer", "LocationUpdate", "ErrorMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.ErrorMessage), global::Fmsitsinterface.ErrorMessage.Parser, new[]{ "ErrorType", "ErrorMessage_", "RelatedField", "RelatedMessage", "RelatedRawMessage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.TimestampMessage), global::Fmsitsinterface.TimestampMessage.Parser, new[]{ "RequestTransmission", "RequestReception", "ResponseTransmission" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.MeasurementType), global::Fmsitsinterface.MeasurementType.Parser, new[]{ "Value", "Unit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.InfoContainer), global::Fmsitsinterface.InfoContainer.Parser, new[]{ "Author", "EventId", "MessageType", "EventVersion", "CreationTime", "DesiredInterval" }, null, new[]{ typeof(global::Fmsitsinterface.InfoContainer.Types.MessageType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.ContentContainer), global::Fmsitsinterface.ContentContainer.Parser, new[]{ "ItsEventCode", "EventInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.EventInfo), global::Fmsitsinterface.EventInfo.Parser, new[]{ "EventText", "Location", "StaticEventMetadata", "DynamicEventMetadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.Point), global::Fmsitsinterface.Point.Parser, new[]{ "Latitude", "Longitude" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.Location), global::Fmsitsinterface.Location.Parser, new[]{ "Coordinates", "CoordinatesType", "Heading" }, null, new[]{ typeof(global::Fmsitsinterface.Location.Types.CoordinatesType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.StaticEventMetadata), global::Fmsitsinterface.StaticEventMetadata.Parser, new[]{ "WeatherConditions", "RoadConfiguration", "SpeedInfo", "IvriContainer", "LaneInfo", "SensorInfo", "OvertakingInfo" }, null, new[]{ typeof(global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.RoadConfiguration), global::Fmsitsinterface.RoadConfiguration.Parser, new[]{ "RoadConfigStatus", "MaxSpeed", "RoadConfigLocation", "Flashing", "RedBorder" }, null, new[]{ typeof(global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus), typeof(global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.OvertakingInfo), global::Fmsitsinterface.OvertakingInfo.Parser, new[]{ "ApplicableFor", "ExceptFor" }, null, new[]{ typeof(global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.SpeedInfo), global::Fmsitsinterface.SpeedInfo.Parser, new[]{ "MaximumSpeedLimit", "OptimalSpeed", "SpeedLimitUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.IvriContainer), global::Fmsitsinterface.IvriContainer.Parser, new[]{ "PriorityContainer", "TrafficLightStateInformation", "TrafficLightTimingInformation", "TrafficLightSpeedAdvice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.PriorityContainer), global::Fmsitsinterface.PriorityContainer.Parser, new[]{ "Status", "Maneuver", "LaneId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.TrafficLightStateInformation), global::Fmsitsinterface.TrafficLightStateInformation.Parser, new[]{ "CurrentState", "Arrow", "Movement" }, null, new[]{ typeof(global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState), typeof(global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow), typeof(global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.TrafficLightTimingInformation), global::Fmsitsinterface.TrafficLightTimingInformation.Parser, new[]{ "MinEndTime", "MaxEndTime", "LikelyTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.TrafficLightSpeedAdvice), global::Fmsitsinterface.TrafficLightSpeedAdvice.Parser, new[]{ "Advice", "AdviceType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.LaneInfo), global::Fmsitsinterface.LaneInfo.Parser, new[]{ "MaxLaneId", "LaneId", "Maneuvers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.Maneuver), global::Fmsitsinterface.Maneuver.Parser, new[]{ "Direction", "AlwaysYield" }, null, new[]{ typeof(global::Fmsitsinterface.Maneuver.Types.Direction) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.SensorInfo), global::Fmsitsinterface.SensorInfo.Parser, new[]{ "TirePressure", "VehicleWeight", "VehicleHeight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.TirePressure), global::Fmsitsinterface.TirePressure.Parser, new[]{ "Status", "AxleCount", "Anomalies" }, null, new[]{ typeof(global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.Anomalies), global::Fmsitsinterface.Anomalies.Parser, new[]{ "Axle", "Side", "Measurement" }, null, new[]{ typeof(global::Fmsitsinterface.Anomalies.Types.Side), typeof(global::Fmsitsinterface.Anomalies.Types.TireStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.VehicleWeight), global::Fmsitsinterface.VehicleWeight.Parser, new[]{ "AxleCount", "WeightMeasurements" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.WeightMeasurements), global::Fmsitsinterface.WeightMeasurements.Parser, new[]{ "Axle", "Weight" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.DynamicEventMetadata), global::Fmsitsinterface.DynamicEventMetadata.Parser, new[]{ "EventSpeed", "EventHeading" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.LocationUpdateEvent), global::Fmsitsinterface.LocationUpdateEvent.Parser, new[]{ "Id", "CreationDate", "GeoReference", "Speed", "Heading", "Lifecycle", "DeviceDate", "GpsQuality" }, null, new[]{ typeof(global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType), typeof(global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReference), global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReference.Parser, new[]{ "Lat", "Lon", "Type" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("MESSAGETYPE_UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("TIMESTAMP_MESSAGE")] TimestampMessage = 1,
    [pbr::OriginalName("LOCATION_UPDATE")] LocationUpdate = 2,
    /// <summary>
    /// both the InfoContainer as well as the ContentContainer are present
    /// </summary>
    [pbr::OriginalName("EVENT_MESSAGE")] EventMessage = 3,
    [pbr::OriginalName("ERROR_MESSAGE")] ErrorMessage = 4,
  }

  public enum ErrorType {
    [pbr::OriginalName("ERRORTYPE_UNKNOWN")] Unknown = 0,
    /// <summary>
    /// an expected field is missing
    /// </summary>
    [pbr::OriginalName("MISSING_FIELD")] MissingField = 1,
    /// <summary>
    /// a field has an invalid/unsupported value
    /// </summary>
    [pbr::OriginalName("INVALID_FIELD")] InvalidField = 2,
    /// <summary>
    /// e.g. the required information via the API was not provided
    /// </summary>
    [pbr::OriginalName("PRE_CONDITION_NOT_MET")] PreConditionNotMet = 3,
    /// <summary>
    /// locationUpdateEvents are not being received according to specification
    /// </summary>
    [pbr::OriginalName("DATA_RATE_ERROR")] DataRateError = 4,
    /// <summary>
    /// a timestamp response was not received within the expected timeframe
    /// </summary>
    [pbr::OriginalName("NO_TIMESTAMP_ANSWER")] NoTimestampAnswer = 5,
    /// <summary>
    /// difference between clocks of FMS and CSP is too big
    /// </summary>
    [pbr::OriginalName("TIMEDIFF_TOO_BIG")] TimediffTooBig = 6,
    /// <summary>
    /// proto message could not be decoded
    /// </summary>
    [pbr::OriginalName("INVALID_PROTO")] InvalidProto = 7,
  }

  public enum MeasurementUnit {
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    /// speed units
    /// </summary>
    [pbr::OriginalName("KILOMETERS_PER_HOUR")] KilometersPerHour = 10,
    [pbr::OriginalName("METERS_PER_SECOND")] MetersPerSecond = 11,
    /// <summary>
    /// mass units
    /// </summary>
    [pbr::OriginalName("KILOGRAM")] Kilogram = 20,
    [pbr::OriginalName("POUND")] Pound = 21,
    /// <summary>
    /// length / height units
    /// </summary>
    [pbr::OriginalName("METER")] Meter = 30,
    [pbr::OriginalName("CENTIMETER")] Centimeter = 31,
    /// <summary>
    /// time units
    /// </summary>
    [pbr::OriginalName("MILLISECOND")] Millisecond = 40,
    [pbr::OriginalName("SECOND")] Second = 41,
    [pbr::OriginalName("MINUTE")] Minute = 42,
    [pbr::OriginalName("HOUR")] Hour = 43,
    /// <summary>
    /// heading / bearing units
    /// </summary>
    [pbr::OriginalName("DEGREES")] Degrees = 50,
  }

  public enum ItsEventCode {
    /// <summary>
    /// Category 0    Special messages
    /// </summary>
    [pbr::OriginalName("UNKNOWN_ITS_EVENT_CODE")] UnknownItsEventCode = 0,
    /// <summary>
    /// Frequency requested to change to X Hz
    /// </summary>
    [pbr::OriginalName("CHANGED_FREQUENCY_REQUEST")] ChangedFrequencyRequest = 1,
    /// <summary>
    /// Category 1    Signaling and speed advice
    /// </summary>
    [pbr::OriginalName("MAXIMUM_SPEED")] MaximumSpeed = 101,
    /// <summary>
    /// Advised speed of x km/h
    /// </summary>
    [pbr::OriginalName("ADVISORY_SPEED_LIMIT")] AdvisorySpeedLimit = 102,
    /// <summary>
    /// Overtaking prohibited
    /// </summary>
    [pbr::OriginalName("OVERTAKING_BAN")] OvertakingBan = 103,
    /// <summary>
    /// Lane configuration changed
    /// </summary>
    [pbr::OriginalName("LANE_CONFIGURATION")] LaneConfiguration = 104,
    /// <summary>
    /// Category 2    Information about dangerous situations
    /// </summary>
    [pbr::OriginalName("ROAD_WORKS")] RoadWorks = 201,
    /// <summary>
    /// Event ahead
    /// </summary>
    [pbr::OriginalName("EVENTS")] Events = 202,
    /// <summary>
    /// Rail Level crossings, Placeholder
    /// </summary>
    [pbr::OriginalName("PLACEHOLDER")] Placeholder = 203,
    /// <summary>
    /// Start of traffic jam, Traffic jam ahead
    /// </summary>
    [pbr::OriginalName("TRAFFIC_JAM")] TrafficJam = 204,
    /// <summary>
    /// Stationary vehicle ahead
    /// </summary>
    [pbr::OriginalName("STATIONARY_VEHICLE")] StationaryVehicle = 205,
    /// <summary>
    /// Incident ahead
    /// </summary>
    [pbr::OriginalName("INCIDENT")] Incident = 206,
    /// <summary>
    /// Bad weather conditions ahead
    /// </summary>
    [pbr::OriginalName("WEATHER_CONDITIONS")] WeatherConditions = 207,
    /// <summary>
    /// Objects/cargo on the road
    /// </summary>
    [pbr::OriginalName("OBJECTS_ON_ROAD")] ObjectsOnRoad = 208,
    /// <summary>
    /// Approaching emergency services (early warning)
    /// </summary>
    [pbr::OriginalName("EMERGENCY_VEHICLE_APPROACHING")] EmergencyVehicleApproaching = 209,
    /// <summary>
    /// Road inspector on the road
    /// </summary>
    [pbr::OriginalName("ROAD_INSPECTOR")] RoadInspector = 210,
    /// <summary>
    /// Open bridge ahead
    /// </summary>
    [pbr::OriginalName("BRIDGE_OPENING")] BridgeOpening = 211,
    /// <summary>
    /// Ghost driver approaching
    /// </summary>
    [pbr::OriginalName("GHOST_DRIVER_WARNING")] GhostDriverWarning = 212,
    /// <summary>
    /// Category 3    Priority with iVRI
    /// </summary>
    [pbr::OriginalName("PRIORITY")] Priority = 301,
    /// <summary>
    /// Selective access systems (bollards, etc.), placeholder
    /// </summary>
    [pbr::OriginalName("SELECTIVE_ACCESS")] SelectiveAccess = 302,
    /// <summary>
    /// Category 4    Current information iVRI
    /// </summary>
    [pbr::OriginalName("TRAFFIC_LIGHT_STATUS")] TrafficLightStatus = 401,
    /// <summary>
    /// Time to green and time to red, traffic light timing update
    /// </summary>
    [pbr::OriginalName("TRAFFIC_LIGHT_TIMING")] TrafficLightTiming = 402,
    /// <summary>
    /// Traffic light optimal speed advice
    /// </summary>
    [pbr::OriginalName("ADVISORY_SPEED")] AdvisorySpeed = 403,
    /// <summary>
    /// Rail Level crossing time to open, placeholder
    /// </summary>
    [pbr::OriginalName("RAIL_CROSSING_STATUS")] RailCrossingStatus = 404,
    /// <summary>
    /// Category 5    Sensor data
    /// </summary>
    [pbr::OriginalName("TIRE_PRESSURE_GAUGE")] TirePressureGauge = 501,
    /// <summary>
    /// Vehicle height information
    /// </summary>
    [pbr::OriginalName("ALTIMETER")] Altimeter = 502,
    /// <summary>
    /// Vehicle weight information
    /// </summary>
    [pbr::OriginalName("WEIGHT")] Weight = 503,
    /// <summary>
    /// Parking + loading/unloading area (occupation), placeholder
    /// </summary>
    [pbr::OriginalName("PARKING_OCCUPATION")] ParkingOccupation = 504,
    /// <summary>
    /// Parking + loading/unloading area (reservation), placeholder
    /// </summary>
    [pbr::OriginalName("PARKING_RESERVATION")] ParkingReservation = 505,
  }

  #endregion

  #region Messages
  public sealed partial class FmsItsMessage : pb::IMessage<FmsItsMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FmsItsMessage> _parser = new pb::MessageParser<FmsItsMessage>(() => new FmsItsMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FmsItsMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FmsItsMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FmsItsMessage(FmsItsMessage other) : this() {
      messageType_ = other.messageType_;
      vehicleId_ = other.vehicleId_;
      container_ = other.container_ != null ? other.container_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FmsItsMessage Clone() {
      return new FmsItsMessage(this);
    }

    /// <summary>Field number for the "message_type" field.</summary>
    public const int MessageTypeFieldNumber = 1;
    private global::Fmsitsinterface.MessageType messageType_ = global::Fmsitsinterface.MessageType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "vehicle_id" field.</summary>
    public const int VehicleIdFieldNumber = 2;
    private string vehicleId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string VehicleId {
      get { return vehicleId_; }
      set {
        vehicleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "container" field.</summary>
    public const int ContainerFieldNumber = 3;
    private global::Fmsitsinterface.FmsItsContainer container_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.FmsItsContainer Container {
      get { return container_; }
      set {
        container_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FmsItsMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FmsItsMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MessageType != other.MessageType) return false;
      if (VehicleId != other.VehicleId) return false;
      if (!object.Equals(Container, other.Container)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MessageType != global::Fmsitsinterface.MessageType.Unknown) hash ^= MessageType.GetHashCode();
      if (VehicleId.Length != 0) hash ^= VehicleId.GetHashCode();
      if (container_ != null) hash ^= Container.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MessageType != global::Fmsitsinterface.MessageType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (VehicleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VehicleId);
      }
      if (container_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Container);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MessageType != global::Fmsitsinterface.MessageType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) MessageType);
      }
      if (VehicleId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VehicleId);
      }
      if (container_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Container);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MessageType != global::Fmsitsinterface.MessageType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (VehicleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VehicleId);
      }
      if (container_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Container);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FmsItsMessage other) {
      if (other == null) {
        return;
      }
      if (other.MessageType != global::Fmsitsinterface.MessageType.Unknown) {
        MessageType = other.MessageType;
      }
      if (other.VehicleId.Length != 0) {
        VehicleId = other.VehicleId;
      }
      if (other.container_ != null) {
        if (container_ == null) {
          Container = new global::Fmsitsinterface.FmsItsContainer();
        }
        Container.MergeFrom(other.Container);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MessageType = (global::Fmsitsinterface.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            VehicleId = input.ReadString();
            break;
          }
          case 26: {
            if (container_ == null) {
              Container = new global::Fmsitsinterface.FmsItsContainer();
            }
            input.ReadMessage(Container);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MessageType = (global::Fmsitsinterface.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            VehicleId = input.ReadString();
            break;
          }
          case 26: {
            if (container_ == null) {
              Container = new global::Fmsitsinterface.FmsItsContainer();
            }
            input.ReadMessage(Container);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FmsItsContainer : pb::IMessage<FmsItsContainer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FmsItsContainer> _parser = new pb::MessageParser<FmsItsContainer>(() => new FmsItsContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FmsItsContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FmsItsContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FmsItsContainer(FmsItsContainer other) : this() {
      timestampMessage_ = other.timestampMessage_ != null ? other.timestampMessage_.Clone() : null;
      infoContainer_ = other.infoContainer_ != null ? other.infoContainer_.Clone() : null;
      contentContainer_ = other.contentContainer_ != null ? other.contentContainer_.Clone() : null;
      locationUpdate_ = other.locationUpdate_ != null ? other.locationUpdate_.Clone() : null;
      errorMessage_ = other.errorMessage_ != null ? other.errorMessage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FmsItsContainer Clone() {
      return new FmsItsContainer(this);
    }

    /// <summary>Field number for the "timestamp_message" field.</summary>
    public const int TimestampMessageFieldNumber = 1;
    private global::Fmsitsinterface.TimestampMessage timestampMessage_;
    /// <summary>
    /// Request/response message to check time synchronisation between 2 systems
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TimestampMessage TimestampMessage {
      get { return timestampMessage_; }
      set {
        timestampMessage_ = value;
      }
    }

    /// <summary>Field number for the "info_container" field.</summary>
    public const int InfoContainerFieldNumber = 2;
    private global::Fmsitsinterface.InfoContainer infoContainer_;
    /// <summary>
    /// CSP to Vehicle: General information about the message not related to the event itself.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.InfoContainer InfoContainer {
      get { return infoContainer_; }
      set {
        infoContainer_ = value;
      }
    }

    /// <summary>Field number for the "content_container" field.</summary>
    public const int ContentContainerFieldNumber = 3;
    private global::Fmsitsinterface.ContentContainer contentContainer_;
    /// <summary>
    /// CSP to Vehicle: More information about the content of the event.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.ContentContainer ContentContainer {
      get { return contentContainer_; }
      set {
        contentContainer_ = value;
      }
    }

    /// <summary>Field number for the "location_update" field.</summary>
    public const int LocationUpdateFieldNumber = 4;
    private global::Fmsitsinterface.LocationUpdateEvent locationUpdate_;
    /// <summary>
    /// FMS Vehicle to CSP: container used to convey location updates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.LocationUpdateEvent LocationUpdate {
      get { return locationUpdate_; }
      set {
        locationUpdate_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessageFieldNumber = 5;
    private global::Fmsitsinterface.ErrorMessage errorMessage_;
    /// <summary>
    /// In case messages cannot be handled, this message is used to inform the original sender
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.ErrorMessage ErrorMessage {
      get { return errorMessage_; }
      set {
        errorMessage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FmsItsContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FmsItsContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimestampMessage, other.TimestampMessage)) return false;
      if (!object.Equals(InfoContainer, other.InfoContainer)) return false;
      if (!object.Equals(ContentContainer, other.ContentContainer)) return false;
      if (!object.Equals(LocationUpdate, other.LocationUpdate)) return false;
      if (!object.Equals(ErrorMessage, other.ErrorMessage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (timestampMessage_ != null) hash ^= TimestampMessage.GetHashCode();
      if (infoContainer_ != null) hash ^= InfoContainer.GetHashCode();
      if (contentContainer_ != null) hash ^= ContentContainer.GetHashCode();
      if (locationUpdate_ != null) hash ^= LocationUpdate.GetHashCode();
      if (errorMessage_ != null) hash ^= ErrorMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (timestampMessage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimestampMessage);
      }
      if (infoContainer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InfoContainer);
      }
      if (contentContainer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContentContainer);
      }
      if (locationUpdate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocationUpdate);
      }
      if (errorMessage_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (timestampMessage_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimestampMessage);
      }
      if (infoContainer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(InfoContainer);
      }
      if (contentContainer_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ContentContainer);
      }
      if (locationUpdate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LocationUpdate);
      }
      if (errorMessage_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ErrorMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (timestampMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimestampMessage);
      }
      if (infoContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InfoContainer);
      }
      if (contentContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContentContainer);
      }
      if (locationUpdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocationUpdate);
      }
      if (errorMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FmsItsContainer other) {
      if (other == null) {
        return;
      }
      if (other.timestampMessage_ != null) {
        if (timestampMessage_ == null) {
          TimestampMessage = new global::Fmsitsinterface.TimestampMessage();
        }
        TimestampMessage.MergeFrom(other.TimestampMessage);
      }
      if (other.infoContainer_ != null) {
        if (infoContainer_ == null) {
          InfoContainer = new global::Fmsitsinterface.InfoContainer();
        }
        InfoContainer.MergeFrom(other.InfoContainer);
      }
      if (other.contentContainer_ != null) {
        if (contentContainer_ == null) {
          ContentContainer = new global::Fmsitsinterface.ContentContainer();
        }
        ContentContainer.MergeFrom(other.ContentContainer);
      }
      if (other.locationUpdate_ != null) {
        if (locationUpdate_ == null) {
          LocationUpdate = new global::Fmsitsinterface.LocationUpdateEvent();
        }
        LocationUpdate.MergeFrom(other.LocationUpdate);
      }
      if (other.errorMessage_ != null) {
        if (errorMessage_ == null) {
          ErrorMessage = new global::Fmsitsinterface.ErrorMessage();
        }
        ErrorMessage.MergeFrom(other.ErrorMessage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestampMessage_ == null) {
              TimestampMessage = new global::Fmsitsinterface.TimestampMessage();
            }
            input.ReadMessage(TimestampMessage);
            break;
          }
          case 18: {
            if (infoContainer_ == null) {
              InfoContainer = new global::Fmsitsinterface.InfoContainer();
            }
            input.ReadMessage(InfoContainer);
            break;
          }
          case 26: {
            if (contentContainer_ == null) {
              ContentContainer = new global::Fmsitsinterface.ContentContainer();
            }
            input.ReadMessage(ContentContainer);
            break;
          }
          case 34: {
            if (locationUpdate_ == null) {
              LocationUpdate = new global::Fmsitsinterface.LocationUpdateEvent();
            }
            input.ReadMessage(LocationUpdate);
            break;
          }
          case 42: {
            if (errorMessage_ == null) {
              ErrorMessage = new global::Fmsitsinterface.ErrorMessage();
            }
            input.ReadMessage(ErrorMessage);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (timestampMessage_ == null) {
              TimestampMessage = new global::Fmsitsinterface.TimestampMessage();
            }
            input.ReadMessage(TimestampMessage);
            break;
          }
          case 18: {
            if (infoContainer_ == null) {
              InfoContainer = new global::Fmsitsinterface.InfoContainer();
            }
            input.ReadMessage(InfoContainer);
            break;
          }
          case 26: {
            if (contentContainer_ == null) {
              ContentContainer = new global::Fmsitsinterface.ContentContainer();
            }
            input.ReadMessage(ContentContainer);
            break;
          }
          case 34: {
            if (locationUpdate_ == null) {
              LocationUpdate = new global::Fmsitsinterface.LocationUpdateEvent();
            }
            input.ReadMessage(LocationUpdate);
            break;
          }
          case 42: {
            if (errorMessage_ == null) {
              ErrorMessage = new global::Fmsitsinterface.ErrorMessage();
            }
            input.ReadMessage(ErrorMessage);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ErrorMessage : pb::IMessage<ErrorMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ErrorMessage> _parser = new pb::MessageParser<ErrorMessage>(() => new ErrorMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ErrorMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorMessage(ErrorMessage other) : this() {
      errorType_ = other.errorType_;
      errorMessage_ = other.errorMessage_;
      relatedField_ = other.relatedField_;
      relatedMessage_ = other.relatedMessage_ != null ? other.relatedMessage_.Clone() : null;
      relatedRawMessage_ = other.relatedRawMessage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ErrorMessage Clone() {
      return new ErrorMessage(this);
    }

    /// <summary>Field number for the "error_type" field.</summary>
    public const int ErrorTypeFieldNumber = 1;
    private global::Fmsitsinterface.ErrorType errorType_ = global::Fmsitsinterface.ErrorType.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.ErrorType ErrorType {
      get { return errorType_; }
      set {
        errorType_ = value;
      }
    }

    /// <summary>Field number for the "error_message" field.</summary>
    public const int ErrorMessage_FieldNumber = 2;
    private string errorMessage_ = "";
    /// <summary>
    /// details of the error
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorMessage_ {
      get { return errorMessage_; }
      set {
        errorMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "related_field" field.</summary>
    public const int RelatedFieldFieldNumber = 3;
    private string relatedField_ = "";
    /// <summary>
    /// if the error relates to a specific field, the name of the field is added
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelatedField {
      get { return relatedField_; }
      set {
        relatedField_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "related_message" field.</summary>
    public const int RelatedMessageFieldNumber = 4;
    private global::Fmsitsinterface.FmsItsMessage relatedMessage_;
    /// <summary>
    /// the original input message the error is related to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.FmsItsMessage RelatedMessage {
      get { return relatedMessage_; }
      set {
        relatedMessage_ = value;
      }
    }

    /// <summary>Field number for the "related_raw_message" field.</summary>
    public const int RelatedRawMessageFieldNumber = 5;
    private pb::ByteString relatedRawMessage_ = pb::ByteString.Empty;
    /// <summary>
    /// in case the original message could not be parsed, it is returned as raw byte array
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString RelatedRawMessage {
      get { return relatedRawMessage_; }
      set {
        relatedRawMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ErrorMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ErrorMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorType != other.ErrorType) return false;
      if (ErrorMessage_ != other.ErrorMessage_) return false;
      if (RelatedField != other.RelatedField) return false;
      if (!object.Equals(RelatedMessage, other.RelatedMessage)) return false;
      if (RelatedRawMessage != other.RelatedRawMessage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorType != global::Fmsitsinterface.ErrorType.Unknown) hash ^= ErrorType.GetHashCode();
      if (ErrorMessage_.Length != 0) hash ^= ErrorMessage_.GetHashCode();
      if (RelatedField.Length != 0) hash ^= RelatedField.GetHashCode();
      if (relatedMessage_ != null) hash ^= RelatedMessage.GetHashCode();
      if (RelatedRawMessage.Length != 0) hash ^= RelatedRawMessage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorType != global::Fmsitsinterface.ErrorType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorType);
      }
      if (ErrorMessage_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage_);
      }
      if (RelatedField.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RelatedField);
      }
      if (relatedMessage_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RelatedMessage);
      }
      if (RelatedRawMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(RelatedRawMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorType != global::Fmsitsinterface.ErrorType.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ErrorType);
      }
      if (ErrorMessage_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorMessage_);
      }
      if (RelatedField.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RelatedField);
      }
      if (relatedMessage_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RelatedMessage);
      }
      if (RelatedRawMessage.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(RelatedRawMessage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ErrorType != global::Fmsitsinterface.ErrorType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ErrorType);
      }
      if (ErrorMessage_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorMessage_);
      }
      if (RelatedField.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelatedField);
      }
      if (relatedMessage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelatedMessage);
      }
      if (RelatedRawMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RelatedRawMessage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ErrorMessage other) {
      if (other == null) {
        return;
      }
      if (other.ErrorType != global::Fmsitsinterface.ErrorType.Unknown) {
        ErrorType = other.ErrorType;
      }
      if (other.ErrorMessage_.Length != 0) {
        ErrorMessage_ = other.ErrorMessage_;
      }
      if (other.RelatedField.Length != 0) {
        RelatedField = other.RelatedField;
      }
      if (other.relatedMessage_ != null) {
        if (relatedMessage_ == null) {
          RelatedMessage = new global::Fmsitsinterface.FmsItsMessage();
        }
        RelatedMessage.MergeFrom(other.RelatedMessage);
      }
      if (other.RelatedRawMessage.Length != 0) {
        RelatedRawMessage = other.RelatedRawMessage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorType = (global::Fmsitsinterface.ErrorType) input.ReadEnum();
            break;
          }
          case 18: {
            ErrorMessage_ = input.ReadString();
            break;
          }
          case 26: {
            RelatedField = input.ReadString();
            break;
          }
          case 34: {
            if (relatedMessage_ == null) {
              RelatedMessage = new global::Fmsitsinterface.FmsItsMessage();
            }
            input.ReadMessage(RelatedMessage);
            break;
          }
          case 42: {
            RelatedRawMessage = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorType = (global::Fmsitsinterface.ErrorType) input.ReadEnum();
            break;
          }
          case 18: {
            ErrorMessage_ = input.ReadString();
            break;
          }
          case 26: {
            RelatedField = input.ReadString();
            break;
          }
          case 34: {
            if (relatedMessage_ == null) {
              RelatedMessage = new global::Fmsitsinterface.FmsItsMessage();
            }
            input.ReadMessage(RelatedMessage);
            break;
          }
          case 42: {
            RelatedRawMessage = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TimestampMessage : pb::IMessage<TimestampMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TimestampMessage> _parser = new pb::MessageParser<TimestampMessage>(() => new TimestampMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TimestampMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimestampMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimestampMessage(TimestampMessage other) : this() {
      requestTransmission_ = other.requestTransmission_ != null ? other.requestTransmission_.Clone() : null;
      requestReception_ = other.requestReception_ != null ? other.requestReception_.Clone() : null;
      responseTransmission_ = other.responseTransmission_ != null ? other.responseTransmission_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TimestampMessage Clone() {
      return new TimestampMessage(this);
    }

    /// <summary>Field number for the "request_transmission" field.</summary>
    public const int RequestTransmissionFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp requestTransmission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RequestTransmission {
      get { return requestTransmission_; }
      set {
        requestTransmission_ = value;
      }
    }

    /// <summary>Field number for the "request_reception" field.</summary>
    public const int RequestReceptionFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp requestReception_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RequestReception {
      get { return requestReception_; }
      set {
        requestReception_ = value;
      }
    }

    /// <summary>Field number for the "response_transmission" field.</summary>
    public const int ResponseTransmissionFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp responseTransmission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ResponseTransmission {
      get { return responseTransmission_; }
      set {
        responseTransmission_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TimestampMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TimestampMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestTransmission, other.RequestTransmission)) return false;
      if (!object.Equals(RequestReception, other.RequestReception)) return false;
      if (!object.Equals(ResponseTransmission, other.ResponseTransmission)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (requestTransmission_ != null) hash ^= RequestTransmission.GetHashCode();
      if (requestReception_ != null) hash ^= RequestReception.GetHashCode();
      if (responseTransmission_ != null) hash ^= ResponseTransmission.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (requestTransmission_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestTransmission);
      }
      if (requestReception_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestReception);
      }
      if (responseTransmission_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseTransmission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (requestTransmission_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestTransmission);
      }
      if (requestReception_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestReception);
      }
      if (responseTransmission_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseTransmission);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (requestTransmission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTransmission);
      }
      if (requestReception_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestReception);
      }
      if (responseTransmission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseTransmission);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TimestampMessage other) {
      if (other == null) {
        return;
      }
      if (other.requestTransmission_ != null) {
        if (requestTransmission_ == null) {
          RequestTransmission = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RequestTransmission.MergeFrom(other.RequestTransmission);
      }
      if (other.requestReception_ != null) {
        if (requestReception_ == null) {
          RequestReception = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RequestReception.MergeFrom(other.RequestReception);
      }
      if (other.responseTransmission_ != null) {
        if (responseTransmission_ == null) {
          ResponseTransmission = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ResponseTransmission.MergeFrom(other.ResponseTransmission);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (requestTransmission_ == null) {
              RequestTransmission = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RequestTransmission);
            break;
          }
          case 18: {
            if (requestReception_ == null) {
              RequestReception = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RequestReception);
            break;
          }
          case 26: {
            if (responseTransmission_ == null) {
              ResponseTransmission = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ResponseTransmission);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (requestTransmission_ == null) {
              RequestTransmission = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RequestTransmission);
            break;
          }
          case 18: {
            if (requestReception_ == null) {
              RequestReception = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RequestReception);
            break;
          }
          case 26: {
            if (responseTransmission_ == null) {
              ResponseTransmission = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ResponseTransmission);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MeasurementType : pb::IMessage<MeasurementType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MeasurementType> _parser = new pb::MessageParser<MeasurementType>(() => new MeasurementType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MeasurementType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementType(MeasurementType other) : this() {
      value_ = other.value_;
      unit_ = other.unit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementType Clone() {
      return new MeasurementType(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 2;
    private global::Fmsitsinterface.MeasurementUnit unit_ = global::Fmsitsinterface.MeasurementUnit.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementUnit Unit {
      get { return unit_; }
      set {
        unit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MeasurementType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MeasurementType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (Unit != other.Unit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0) hash ^= Value.GetHashCode();
      if (Unit != global::Fmsitsinterface.MeasurementUnit.Unknown) hash ^= Unit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
      if (Unit != global::Fmsitsinterface.MeasurementUnit.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Value);
      }
      if (Unit != global::Fmsitsinterface.MeasurementUnit.Unknown) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (Unit != global::Fmsitsinterface.MeasurementUnit.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Unit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MeasurementType other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      if (other.Unit != global::Fmsitsinterface.MeasurementUnit.Unknown) {
        Unit = other.Unit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
          case 16: {
            Unit = (global::Fmsitsinterface.MeasurementUnit) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Value = input.ReadInt32();
            break;
          }
          case 16: {
            Unit = (global::Fmsitsinterface.MeasurementUnit) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// General information about the message not related to the event itself.
  /// </summary>
  public sealed partial class InfoContainer : pb::IMessage<InfoContainer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoContainer> _parser = new pb::MessageParser<InfoContainer>(() => new InfoContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InfoContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoContainer(InfoContainer other) : this() {
      author_ = other.author_;
      eventId_ = other.eventId_;
      messageType_ = other.messageType_;
      eventVersion_ = other.eventVersion_;
      creationTime_ = other.creationTime_ != null ? other.creationTime_.Clone() : null;
      desiredInterval_ = other.desiredInterval_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoContainer Clone() {
      return new InfoContainer(this);
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 1;
    private string author_ = "";
    /// <summary>
    /// The CSP that created the message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "event_id" field.</summary>
    public const int EventIdFieldNumber = 2;
    private string eventId_ = "";
    /// <summary>
    /// Unique ID generated by the CSP. Be careful that the eventID is not guaranteed to be unique across different CSPs, but has to be unique within the set of events of a single CSP.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventId {
      get { return eventId_; }
      set {
        eventId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message_type" field.</summary>
    public const int MessageTypeFieldNumber = 3;
    private global::Fmsitsinterface.InfoContainer.Types.MessageType messageType_ = global::Fmsitsinterface.InfoContainer.Types.MessageType.UnknownMessageType;
    /// <summary>
    /// messageType indicates the status of the message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.InfoContainer.Types.MessageType MessageType {
      get { return messageType_; }
      set {
        messageType_ = value;
      }
    }

    /// <summary>Field number for the "event_version" field.</summary>
    public const int EventVersionFieldNumber = 4;
    private int eventVersion_;
    /// <summary>
    /// eventVersion indicates the version of the message with a unique eventId.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int EventVersion {
      get { return eventVersion_; }
      set {
        eventVersion_ = value;
      }
    }

    /// <summary>Field number for the "creation_time" field.</summary>
    public const int CreationTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp creationTime_;
    /// <summary>
    /// time of sending of the message (UTC+00:00).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreationTime {
      get { return creationTime_; }
      set {
        creationTime_ = value;
      }
    }

    /// <summary>Field number for the "desired_interval" field.</summary>
    public const int DesiredIntervalFieldNumber = 6;
    private int desiredInterval_;
    /// <summary>
    /// the requested interval sampling rate of GPS samples in order to facilitate a usecase. Unit of value is second. If filled in, location container has to contain a polygon where the higher frequency is required
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DesiredInterval {
      get { return desiredInterval_; }
      set {
        desiredInterval_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InfoContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InfoContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Author != other.Author) return false;
      if (EventId != other.EventId) return false;
      if (MessageType != other.MessageType) return false;
      if (EventVersion != other.EventVersion) return false;
      if (!object.Equals(CreationTime, other.CreationTime)) return false;
      if (DesiredInterval != other.DesiredInterval) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      if (EventId.Length != 0) hash ^= EventId.GetHashCode();
      if (MessageType != global::Fmsitsinterface.InfoContainer.Types.MessageType.UnknownMessageType) hash ^= MessageType.GetHashCode();
      if (EventVersion != 0) hash ^= EventVersion.GetHashCode();
      if (creationTime_ != null) hash ^= CreationTime.GetHashCode();
      if (DesiredInterval != 0) hash ^= DesiredInterval.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Author.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Author);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EventId);
      }
      if (MessageType != global::Fmsitsinterface.InfoContainer.Types.MessageType.UnknownMessageType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MessageType);
      }
      if (EventVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventVersion);
      }
      if (creationTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreationTime);
      }
      if (DesiredInterval != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DesiredInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Author.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Author);
      }
      if (EventId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EventId);
      }
      if (MessageType != global::Fmsitsinterface.InfoContainer.Types.MessageType.UnknownMessageType) {
        output.WriteRawTag(24);
        output.WriteEnum((int) MessageType);
      }
      if (EventVersion != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EventVersion);
      }
      if (creationTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CreationTime);
      }
      if (DesiredInterval != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(DesiredInterval);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      if (EventId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventId);
      }
      if (MessageType != global::Fmsitsinterface.InfoContainer.Types.MessageType.UnknownMessageType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MessageType);
      }
      if (EventVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EventVersion);
      }
      if (creationTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreationTime);
      }
      if (DesiredInterval != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DesiredInterval);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InfoContainer other) {
      if (other == null) {
        return;
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      if (other.EventId.Length != 0) {
        EventId = other.EventId;
      }
      if (other.MessageType != global::Fmsitsinterface.InfoContainer.Types.MessageType.UnknownMessageType) {
        MessageType = other.MessageType;
      }
      if (other.EventVersion != 0) {
        EventVersion = other.EventVersion;
      }
      if (other.creationTime_ != null) {
        if (creationTime_ == null) {
          CreationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreationTime.MergeFrom(other.CreationTime);
      }
      if (other.DesiredInterval != 0) {
        DesiredInterval = other.DesiredInterval;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Author = input.ReadString();
            break;
          }
          case 18: {
            EventId = input.ReadString();
            break;
          }
          case 24: {
            MessageType = (global::Fmsitsinterface.InfoContainer.Types.MessageType) input.ReadEnum();
            break;
          }
          case 32: {
            EventVersion = input.ReadInt32();
            break;
          }
          case 42: {
            if (creationTime_ == null) {
              CreationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationTime);
            break;
          }
          case 48: {
            DesiredInterval = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Author = input.ReadString();
            break;
          }
          case 18: {
            EventId = input.ReadString();
            break;
          }
          case 24: {
            MessageType = (global::Fmsitsinterface.InfoContainer.Types.MessageType) input.ReadEnum();
            break;
          }
          case 32: {
            EventVersion = input.ReadInt32();
            break;
          }
          case 42: {
            if (creationTime_ == null) {
              CreationTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationTime);
            break;
          }
          case 48: {
            DesiredInterval = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the InfoContainer message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum MessageType {
        /// <summary>
        /// Unknown message type
        /// </summary>
        [pbr::OriginalName("UNKNOWN_MESSAGE_TYPE")] UnknownMessageType = 0,
        /// <summary>
        /// Newly created message
        /// </summary>
        [pbr::OriginalName("NEW")] New = 1,
        /// <summary>
        /// Update of an existing message
        /// </summary>
        [pbr::OriginalName("UPDATE")] Update = 2,
        /// <summary>
        /// Deletion of an existing message.
        /// </summary>
        [pbr::OriginalName("DELETE")] Delete = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// More information about the content of the event.
  /// </summary>
  public sealed partial class ContentContainer : pb::IMessage<ContentContainer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ContentContainer> _parser = new pb::MessageParser<ContentContainer>(() => new ContentContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ContentContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContentContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContentContainer(ContentContainer other) : this() {
      itsEventCode_ = other.itsEventCode_;
      eventInfo_ = other.eventInfo_ != null ? other.eventInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ContentContainer Clone() {
      return new ContentContainer(this);
    }

    /// <summary>Field number for the "its_event_code" field.</summary>
    public const int ItsEventCodeFieldNumber = 1;
    private global::Fmsitsinterface.ItsEventCode itsEventCode_ = global::Fmsitsinterface.ItsEventCode.UnknownItsEventCode;
    /// <summary>
    /// ITSEventCode is an integer referring to the usecase at hand.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.ItsEventCode ItsEventCode {
      get { return itsEventCode_; }
      set {
        itsEventCode_ = value;
      }
    }

    /// <summary>Field number for the "event_info" field.</summary>
    public const int EventInfoFieldNumber = 2;
    private global::Fmsitsinterface.EventInfo eventInfo_;
    /// <summary>
    /// container for event details
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.EventInfo EventInfo {
      get { return eventInfo_; }
      set {
        eventInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ContentContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ContentContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItsEventCode != other.ItsEventCode) return false;
      if (!object.Equals(EventInfo, other.EventInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ItsEventCode != global::Fmsitsinterface.ItsEventCode.UnknownItsEventCode) hash ^= ItsEventCode.GetHashCode();
      if (eventInfo_ != null) hash ^= EventInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItsEventCode != global::Fmsitsinterface.ItsEventCode.UnknownItsEventCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItsEventCode);
      }
      if (eventInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItsEventCode != global::Fmsitsinterface.ItsEventCode.UnknownItsEventCode) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItsEventCode);
      }
      if (eventInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ItsEventCode != global::Fmsitsinterface.ItsEventCode.UnknownItsEventCode) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItsEventCode);
      }
      if (eventInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ContentContainer other) {
      if (other == null) {
        return;
      }
      if (other.ItsEventCode != global::Fmsitsinterface.ItsEventCode.UnknownItsEventCode) {
        ItsEventCode = other.ItsEventCode;
      }
      if (other.eventInfo_ != null) {
        if (eventInfo_ == null) {
          EventInfo = new global::Fmsitsinterface.EventInfo();
        }
        EventInfo.MergeFrom(other.EventInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItsEventCode = (global::Fmsitsinterface.ItsEventCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (eventInfo_ == null) {
              EventInfo = new global::Fmsitsinterface.EventInfo();
            }
            input.ReadMessage(EventInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItsEventCode = (global::Fmsitsinterface.ItsEventCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (eventInfo_ == null) {
              EventInfo = new global::Fmsitsinterface.EventInfo();
            }
            input.ReadMessage(EventInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class EventInfo : pb::IMessage<EventInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EventInfo> _parser = new pb::MessageParser<EventInfo>(() => new EventInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EventInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventInfo(EventInfo other) : this() {
      eventText_ = other.eventText_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      staticEventMetadata_ = other.staticEventMetadata_ != null ? other.staticEventMetadata_.Clone() : null;
      dynamicEventMetadata_ = other.dynamicEventMetadata_ != null ? other.dynamicEventMetadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EventInfo Clone() {
      return new EventInfo(this);
    }

    /// <summary>Field number for the "event_text" field.</summary>
    public const int EventTextFieldNumber = 1;
    private string eventText_ = "";
    /// <summary>
    /// Textual representation of ITSEventCode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EventText {
      get { return eventText_; }
      set {
        eventText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::Fmsitsinterface.Location location_;
    /// <summary>
    /// container for location details, compliant with EPSG 4326
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.Location Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "static_event_metadata" field.</summary>
    public const int StaticEventMetadataFieldNumber = 3;
    private global::Fmsitsinterface.StaticEventMetadata staticEventMetadata_;
    /// <summary>
    /// Contains other containers for static events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.StaticEventMetadata StaticEventMetadata {
      get { return staticEventMetadata_; }
      set {
        staticEventMetadata_ = value;
      }
    }

    /// <summary>Field number for the "dynamic_event_metadata" field.</summary>
    public const int DynamicEventMetadataFieldNumber = 4;
    private global::Fmsitsinterface.DynamicEventMetadata dynamicEventMetadata_;
    /// <summary>
    /// Contains other containers for dynamic events, its_event_code EMERGENCY_VEHICLE_APPROACHING, ROAD_INSPECTOR or GHOST_DRIVER_WARNING
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.DynamicEventMetadata DynamicEventMetadata {
      get { return dynamicEventMetadata_; }
      set {
        dynamicEventMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EventInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EventInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventText != other.EventText) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(StaticEventMetadata, other.StaticEventMetadata)) return false;
      if (!object.Equals(DynamicEventMetadata, other.DynamicEventMetadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (EventText.Length != 0) hash ^= EventText.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (staticEventMetadata_ != null) hash ^= StaticEventMetadata.GetHashCode();
      if (dynamicEventMetadata_ != null) hash ^= DynamicEventMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (EventText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventText);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (staticEventMetadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StaticEventMetadata);
      }
      if (dynamicEventMetadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DynamicEventMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (EventText.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EventText);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (staticEventMetadata_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StaticEventMetadata);
      }
      if (dynamicEventMetadata_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DynamicEventMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (EventText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EventText);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (staticEventMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StaticEventMetadata);
      }
      if (dynamicEventMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicEventMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EventInfo other) {
      if (other == null) {
        return;
      }
      if (other.EventText.Length != 0) {
        EventText = other.EventText;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::Fmsitsinterface.Location();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.staticEventMetadata_ != null) {
        if (staticEventMetadata_ == null) {
          StaticEventMetadata = new global::Fmsitsinterface.StaticEventMetadata();
        }
        StaticEventMetadata.MergeFrom(other.StaticEventMetadata);
      }
      if (other.dynamicEventMetadata_ != null) {
        if (dynamicEventMetadata_ == null) {
          DynamicEventMetadata = new global::Fmsitsinterface.DynamicEventMetadata();
        }
        DynamicEventMetadata.MergeFrom(other.DynamicEventMetadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EventText = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Fmsitsinterface.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            if (staticEventMetadata_ == null) {
              StaticEventMetadata = new global::Fmsitsinterface.StaticEventMetadata();
            }
            input.ReadMessage(StaticEventMetadata);
            break;
          }
          case 34: {
            if (dynamicEventMetadata_ == null) {
              DynamicEventMetadata = new global::Fmsitsinterface.DynamicEventMetadata();
            }
            input.ReadMessage(DynamicEventMetadata);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            EventText = input.ReadString();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::Fmsitsinterface.Location();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            if (staticEventMetadata_ == null) {
              StaticEventMetadata = new global::Fmsitsinterface.StaticEventMetadata();
            }
            input.ReadMessage(StaticEventMetadata);
            break;
          }
          case 34: {
            if (dynamicEventMetadata_ == null) {
              DynamicEventMetadata = new global::Fmsitsinterface.DynamicEventMetadata();
            }
            input.ReadMessage(DynamicEventMetadata);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Point : pb::IMessage<Point>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Point> _parser = new pb::MessageParser<Point>(() => new Point());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Point> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Point() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Point(Point other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Point Clone() {
      return new Point(this);
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private float latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private float longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Point);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Point other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Longitude);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Latitude != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Latitude);
      }
      if (Longitude != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Longitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Latitude != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Latitude);
      }
      if (Longitude != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Longitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0F) {
        size += 1 + 4;
      }
      if (Longitude != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Point other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0F) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0F) {
        Longitude = other.Longitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Latitude = input.ReadFloat();
            break;
          }
          case 21: {
            Longitude = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Latitude = input.ReadFloat();
            break;
          }
          case 21: {
            Longitude = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location(Location other) : this() {
      coordinates_ = other.coordinates_.Clone();
      coordinatesType_ = other.coordinatesType_;
      heading_ = other.heading_ != null ? other.heading_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "coordinates" field.</summary>
    public const int CoordinatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Fmsitsinterface.Point> _repeated_coordinates_codec
        = pb::FieldCodec.ForMessage(10, global::Fmsitsinterface.Point.Parser);
    private readonly pbc::RepeatedField<global::Fmsitsinterface.Point> coordinates_ = new pbc::RepeatedField<global::Fmsitsinterface.Point>();
    /// <summary>
    /// list of coordinates to represent location of event or desired frequency zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Fmsitsinterface.Point> Coordinates {
      get { return coordinates_; }
    }

    /// <summary>Field number for the "coordinates_type" field.</summary>
    public const int CoordinatesTypeFieldNumber = 2;
    private global::Fmsitsinterface.Location.Types.CoordinatesType coordinatesType_ = global::Fmsitsinterface.Location.Types.CoordinatesType.UnknownCoordinatesType;
    /// <summary>
    /// type of coordinates field
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.Location.Types.CoordinatesType CoordinatesType {
      get { return coordinatesType_; }
      set {
        coordinatesType_ = value;
      }
    }

    /// <summary>Field number for the "heading" field.</summary>
    public const int HeadingFieldNumber = 3;
    private global::Fmsitsinterface.MeasurementType heading_;
    /// <summary>
    /// driving direction for which the event is relevant. If relevant for all directions, this field is unused
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementType Heading {
      get { return heading_; }
      set {
        heading_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!coordinates_.Equals(other.coordinates_)) return false;
      if (CoordinatesType != other.CoordinatesType) return false;
      if (!object.Equals(Heading, other.Heading)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= coordinates_.GetHashCode();
      if (CoordinatesType != global::Fmsitsinterface.Location.Types.CoordinatesType.UnknownCoordinatesType) hash ^= CoordinatesType.GetHashCode();
      if (heading_ != null) hash ^= Heading.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      coordinates_.WriteTo(output, _repeated_coordinates_codec);
      if (CoordinatesType != global::Fmsitsinterface.Location.Types.CoordinatesType.UnknownCoordinatesType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CoordinatesType);
      }
      if (heading_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Heading);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      coordinates_.WriteTo(ref output, _repeated_coordinates_codec);
      if (CoordinatesType != global::Fmsitsinterface.Location.Types.CoordinatesType.UnknownCoordinatesType) {
        output.WriteRawTag(16);
        output.WriteEnum((int) CoordinatesType);
      }
      if (heading_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Heading);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += coordinates_.CalculateSize(_repeated_coordinates_codec);
      if (CoordinatesType != global::Fmsitsinterface.Location.Types.CoordinatesType.UnknownCoordinatesType) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CoordinatesType);
      }
      if (heading_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Heading);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      coordinates_.Add(other.coordinates_);
      if (other.CoordinatesType != global::Fmsitsinterface.Location.Types.CoordinatesType.UnknownCoordinatesType) {
        CoordinatesType = other.CoordinatesType;
      }
      if (other.heading_ != null) {
        if (heading_ == null) {
          Heading = new global::Fmsitsinterface.MeasurementType();
        }
        Heading.MergeFrom(other.Heading);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            coordinates_.AddEntriesFrom(input, _repeated_coordinates_codec);
            break;
          }
          case 16: {
            CoordinatesType = (global::Fmsitsinterface.Location.Types.CoordinatesType) input.ReadEnum();
            break;
          }
          case 26: {
            if (heading_ == null) {
              Heading = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(Heading);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            coordinates_.AddEntriesFrom(ref input, _repeated_coordinates_codec);
            break;
          }
          case 16: {
            CoordinatesType = (global::Fmsitsinterface.Location.Types.CoordinatesType) input.ReadEnum();
            break;
          }
          case 26: {
            if (heading_ == null) {
              Heading = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(Heading);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Location message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Can be polygon (2D array), linestring (2D array) or point (1D array) object. Coordinates are expressed in EPSG:4326
      /// </summary>
      public enum CoordinatesType {
        /// <summary>
        /// Unknown coordinates type
        /// </summary>
        [pbr::OriginalName("UNKNOWN_COORDINATES_TYPE")] UnknownCoordinatesType = 0,
        /// <summary>
        /// Line string
        /// </summary>
        [pbr::OriginalName("LINE_STRING")] LineString = 1,
        /// <summary>
        /// Point
        /// </summary>
        [pbr::OriginalName("POINT")] Point = 2,
        /// <summary>
        /// Polygon
        /// </summary>
        [pbr::OriginalName("POLYGON")] Polygon = 3,
      }

    }
    #endregion

  }

  public sealed partial class StaticEventMetadata : pb::IMessage<StaticEventMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StaticEventMetadata> _parser = new pb::MessageParser<StaticEventMetadata>(() => new StaticEventMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<StaticEventMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StaticEventMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StaticEventMetadata(StaticEventMetadata other) : this() {
      weatherConditions_ = other.weatherConditions_;
      roadConfiguration_ = other.roadConfiguration_ != null ? other.roadConfiguration_.Clone() : null;
      speedInfo_ = other.speedInfo_ != null ? other.speedInfo_.Clone() : null;
      ivriContainer_ = other.ivriContainer_ != null ? other.ivriContainer_.Clone() : null;
      laneInfo_ = other.laneInfo_ != null ? other.laneInfo_.Clone() : null;
      sensorInfo_ = other.sensorInfo_ != null ? other.sensorInfo_.Clone() : null;
      overtakingInfo_ = other.overtakingInfo_ != null ? other.overtakingInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StaticEventMetadata Clone() {
      return new StaticEventMetadata(this);
    }

    /// <summary>Field number for the "weather_conditions" field.</summary>
    public const int WeatherConditionsFieldNumber = 1;
    private global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions weatherConditions_ = global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions.UnknownWeatherCondition;
    /// <summary>
    /// indicating weather events, its_event_code WEATHER_CONDITIONS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions WeatherConditions {
      get { return weatherConditions_; }
      set {
        weatherConditions_ = value;
      }
    }

    /// <summary>Field number for the "road_configuration" field.</summary>
    public const int RoadConfigurationFieldNumber = 2;
    private global::Fmsitsinterface.RoadConfiguration roadConfiguration_;
    /// <summary>
    /// object indicating status of road lanes, its_event_code LANE_CONFIGURATION
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.RoadConfiguration RoadConfiguration {
      get { return roadConfiguration_; }
      set {
        roadConfiguration_ = value;
      }
    }

    /// <summary>Field number for the "speed_info" field.</summary>
    public const int SpeedInfoFieldNumber = 3;
    private global::Fmsitsinterface.SpeedInfo speedInfo_;
    /// <summary>
    /// object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.SpeedInfo SpeedInfo {
      get { return speedInfo_; }
      set {
        speedInfo_ = value;
      }
    }

    /// <summary>Field number for the "ivri_container" field.</summary>
    public const int IvriContainerFieldNumber = 4;
    private global::Fmsitsinterface.IvriContainer ivriContainer_;
    /// <summary>
    /// object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.IvriContainer IvriContainer {
      get { return ivriContainer_; }
      set {
        ivriContainer_ = value;
      }
    }

    /// <summary>Field number for the "lane_info" field.</summary>
    public const int LaneInfoFieldNumber = 5;
    private global::Fmsitsinterface.LaneInfo laneInfo_;
    /// <summary>
    /// object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.LaneInfo LaneInfo {
      get { return laneInfo_; }
      set {
        laneInfo_ = value;
      }
    }

    /// <summary>Field number for the "sensor_info" field.</summary>
    public const int SensorInfoFieldNumber = 6;
    private global::Fmsitsinterface.SensorInfo sensorInfo_;
    /// <summary>
    /// object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.SensorInfo SensorInfo {
      get { return sensorInfo_; }
      set {
        sensorInfo_ = value;
      }
    }

    /// <summary>Field number for the "overtaking_info" field.</summary>
    public const int OvertakingInfoFieldNumber = 7;
    private global::Fmsitsinterface.OvertakingInfo overtakingInfo_;
    /// <summary>
    /// object with details for an overtaking ban, its_event_code OVERTAKING_BAN
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.OvertakingInfo OvertakingInfo {
      get { return overtakingInfo_; }
      set {
        overtakingInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as StaticEventMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(StaticEventMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WeatherConditions != other.WeatherConditions) return false;
      if (!object.Equals(RoadConfiguration, other.RoadConfiguration)) return false;
      if (!object.Equals(SpeedInfo, other.SpeedInfo)) return false;
      if (!object.Equals(IvriContainer, other.IvriContainer)) return false;
      if (!object.Equals(LaneInfo, other.LaneInfo)) return false;
      if (!object.Equals(SensorInfo, other.SensorInfo)) return false;
      if (!object.Equals(OvertakingInfo, other.OvertakingInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (WeatherConditions != global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions.UnknownWeatherCondition) hash ^= WeatherConditions.GetHashCode();
      if (roadConfiguration_ != null) hash ^= RoadConfiguration.GetHashCode();
      if (speedInfo_ != null) hash ^= SpeedInfo.GetHashCode();
      if (ivriContainer_ != null) hash ^= IvriContainer.GetHashCode();
      if (laneInfo_ != null) hash ^= LaneInfo.GetHashCode();
      if (sensorInfo_ != null) hash ^= SensorInfo.GetHashCode();
      if (overtakingInfo_ != null) hash ^= OvertakingInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WeatherConditions != global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions.UnknownWeatherCondition) {
        output.WriteRawTag(8);
        output.WriteEnum((int) WeatherConditions);
      }
      if (roadConfiguration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoadConfiguration);
      }
      if (speedInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SpeedInfo);
      }
      if (ivriContainer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(IvriContainer);
      }
      if (laneInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LaneInfo);
      }
      if (sensorInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SensorInfo);
      }
      if (overtakingInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OvertakingInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WeatherConditions != global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions.UnknownWeatherCondition) {
        output.WriteRawTag(8);
        output.WriteEnum((int) WeatherConditions);
      }
      if (roadConfiguration_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RoadConfiguration);
      }
      if (speedInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SpeedInfo);
      }
      if (ivriContainer_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(IvriContainer);
      }
      if (laneInfo_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LaneInfo);
      }
      if (sensorInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SensorInfo);
      }
      if (overtakingInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(OvertakingInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (WeatherConditions != global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions.UnknownWeatherCondition) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WeatherConditions);
      }
      if (roadConfiguration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RoadConfiguration);
      }
      if (speedInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpeedInfo);
      }
      if (ivriContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IvriContainer);
      }
      if (laneInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LaneInfo);
      }
      if (sensorInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SensorInfo);
      }
      if (overtakingInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OvertakingInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(StaticEventMetadata other) {
      if (other == null) {
        return;
      }
      if (other.WeatherConditions != global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions.UnknownWeatherCondition) {
        WeatherConditions = other.WeatherConditions;
      }
      if (other.roadConfiguration_ != null) {
        if (roadConfiguration_ == null) {
          RoadConfiguration = new global::Fmsitsinterface.RoadConfiguration();
        }
        RoadConfiguration.MergeFrom(other.RoadConfiguration);
      }
      if (other.speedInfo_ != null) {
        if (speedInfo_ == null) {
          SpeedInfo = new global::Fmsitsinterface.SpeedInfo();
        }
        SpeedInfo.MergeFrom(other.SpeedInfo);
      }
      if (other.ivriContainer_ != null) {
        if (ivriContainer_ == null) {
          IvriContainer = new global::Fmsitsinterface.IvriContainer();
        }
        IvriContainer.MergeFrom(other.IvriContainer);
      }
      if (other.laneInfo_ != null) {
        if (laneInfo_ == null) {
          LaneInfo = new global::Fmsitsinterface.LaneInfo();
        }
        LaneInfo.MergeFrom(other.LaneInfo);
      }
      if (other.sensorInfo_ != null) {
        if (sensorInfo_ == null) {
          SensorInfo = new global::Fmsitsinterface.SensorInfo();
        }
        SensorInfo.MergeFrom(other.SensorInfo);
      }
      if (other.overtakingInfo_ != null) {
        if (overtakingInfo_ == null) {
          OvertakingInfo = new global::Fmsitsinterface.OvertakingInfo();
        }
        OvertakingInfo.MergeFrom(other.OvertakingInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            WeatherConditions = (global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions) input.ReadEnum();
            break;
          }
          case 18: {
            if (roadConfiguration_ == null) {
              RoadConfiguration = new global::Fmsitsinterface.RoadConfiguration();
            }
            input.ReadMessage(RoadConfiguration);
            break;
          }
          case 26: {
            if (speedInfo_ == null) {
              SpeedInfo = new global::Fmsitsinterface.SpeedInfo();
            }
            input.ReadMessage(SpeedInfo);
            break;
          }
          case 34: {
            if (ivriContainer_ == null) {
              IvriContainer = new global::Fmsitsinterface.IvriContainer();
            }
            input.ReadMessage(IvriContainer);
            break;
          }
          case 42: {
            if (laneInfo_ == null) {
              LaneInfo = new global::Fmsitsinterface.LaneInfo();
            }
            input.ReadMessage(LaneInfo);
            break;
          }
          case 50: {
            if (sensorInfo_ == null) {
              SensorInfo = new global::Fmsitsinterface.SensorInfo();
            }
            input.ReadMessage(SensorInfo);
            break;
          }
          case 58: {
            if (overtakingInfo_ == null) {
              OvertakingInfo = new global::Fmsitsinterface.OvertakingInfo();
            }
            input.ReadMessage(OvertakingInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            WeatherConditions = (global::Fmsitsinterface.StaticEventMetadata.Types.WeatherConditions) input.ReadEnum();
            break;
          }
          case 18: {
            if (roadConfiguration_ == null) {
              RoadConfiguration = new global::Fmsitsinterface.RoadConfiguration();
            }
            input.ReadMessage(RoadConfiguration);
            break;
          }
          case 26: {
            if (speedInfo_ == null) {
              SpeedInfo = new global::Fmsitsinterface.SpeedInfo();
            }
            input.ReadMessage(SpeedInfo);
            break;
          }
          case 34: {
            if (ivriContainer_ == null) {
              IvriContainer = new global::Fmsitsinterface.IvriContainer();
            }
            input.ReadMessage(IvriContainer);
            break;
          }
          case 42: {
            if (laneInfo_ == null) {
              LaneInfo = new global::Fmsitsinterface.LaneInfo();
            }
            input.ReadMessage(LaneInfo);
            break;
          }
          case 50: {
            if (sensorInfo_ == null) {
              SensorInfo = new global::Fmsitsinterface.SensorInfo();
            }
            input.ReadMessage(SensorInfo);
            break;
          }
          case 58: {
            if (overtakingInfo_ == null) {
              OvertakingInfo = new global::Fmsitsinterface.OvertakingInfo();
            }
            input.ReadMessage(OvertakingInfo);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the StaticEventMetadata message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum WeatherConditions {
        /// <summary>
        /// Unknown weather condition
        /// </summary>
        [pbr::OriginalName("UNKNOWN_WEATHER_CONDITION")] UnknownWeatherCondition = 0,
        /// <summary>
        /// Heavy rain
        /// </summary>
        [pbr::OriginalName("HEAVY_RAIN")] HeavyRain = 1,
        /// <summary>
        /// Slippery Road (ice, oil, ...)
        /// </summary>
        [pbr::OriginalName("SLIPPERY_ROAD")] SlipperyRoad = 2,
        /// <summary>
        /// Fog
        /// </summary>
        [pbr::OriginalName("FOG")] Fog = 3,
        /// <summary>
        /// Heavy Wind
        /// </summary>
        [pbr::OriginalName("HEAVY_WIND")] HeavyWind = 4,
        /// <summary>
        /// Heavy Snowfall
        /// </summary>
        [pbr::OriginalName("HEAVY_SNOWFALL")] HeavySnowfall = 5,
        /// <summary>
        /// Hail
        /// </summary>
        [pbr::OriginalName("HAIL")] Hail = 6,
      }

    }
    #endregion

  }

  public sealed partial class RoadConfiguration : pb::IMessage<RoadConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoadConfiguration> _parser = new pb::MessageParser<RoadConfiguration>(() => new RoadConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RoadConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoadConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoadConfiguration(RoadConfiguration other) : this() {
      roadConfigStatus_ = other.roadConfigStatus_;
      maxSpeed_ = other.maxSpeed_ != null ? other.maxSpeed_.Clone() : null;
      roadConfigLocation_ = other.roadConfigLocation_;
      flashing_ = other.flashing_;
      redBorder_ = other.redBorder_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RoadConfiguration Clone() {
      return new RoadConfiguration(this);
    }

    /// <summary>Field number for the "road_config_status" field.</summary>
    public const int RoadConfigStatusFieldNumber = 1;
    private global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus roadConfigStatus_ = global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus.UnknownRoadConfigStatus;
    /// <summary>
    /// Status indicates state of lane defined in container laneInfo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus RoadConfigStatus {
      get { return roadConfigStatus_; }
      set {
        roadConfigStatus_ = value;
      }
    }

    /// <summary>Field number for the "max_speed" field.</summary>
    public const int MaxSpeedFieldNumber = 2;
    private global::Fmsitsinterface.MeasurementType maxSpeed_;
    /// <summary>
    /// optional field in case the status is CHANGED_MAX_SPEED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementType MaxSpeed {
      get { return maxSpeed_; }
      set {
        maxSpeed_ = value;
      }
    }

    /// <summary>Field number for the "road_config_location" field.</summary>
    public const int RoadConfigLocationFieldNumber = 3;
    private global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation roadConfigLocation_ = global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation.UnknownLocation;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation RoadConfigLocation {
      get { return roadConfigLocation_; }
      set {
        roadConfigLocation_ = value;
      }
    }

    /// <summary>Field number for the "flashing" field.</summary>
    public const int FlashingFieldNumber = 4;
    private bool flashing_;
    /// <summary>
    /// are flashing lights present
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Flashing {
      get { return flashing_; }
      set {
        flashing_ = value;
      }
    }

    /// <summary>Field number for the "red_border" field.</summary>
    public const int RedBorderFieldNumber = 5;
    private bool redBorder_;
    /// <summary>
    /// is a red border present
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool RedBorder {
      get { return redBorder_; }
      set {
        redBorder_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RoadConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RoadConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoadConfigStatus != other.RoadConfigStatus) return false;
      if (!object.Equals(MaxSpeed, other.MaxSpeed)) return false;
      if (RoadConfigLocation != other.RoadConfigLocation) return false;
      if (Flashing != other.Flashing) return false;
      if (RedBorder != other.RedBorder) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (RoadConfigStatus != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus.UnknownRoadConfigStatus) hash ^= RoadConfigStatus.GetHashCode();
      if (maxSpeed_ != null) hash ^= MaxSpeed.GetHashCode();
      if (RoadConfigLocation != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation.UnknownLocation) hash ^= RoadConfigLocation.GetHashCode();
      if (Flashing != false) hash ^= Flashing.GetHashCode();
      if (RedBorder != false) hash ^= RedBorder.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoadConfigStatus != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus.UnknownRoadConfigStatus) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RoadConfigStatus);
      }
      if (maxSpeed_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxSpeed);
      }
      if (RoadConfigLocation != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation.UnknownLocation) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoadConfigLocation);
      }
      if (Flashing != false) {
        output.WriteRawTag(32);
        output.WriteBool(Flashing);
      }
      if (RedBorder != false) {
        output.WriteRawTag(40);
        output.WriteBool(RedBorder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoadConfigStatus != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus.UnknownRoadConfigStatus) {
        output.WriteRawTag(8);
        output.WriteEnum((int) RoadConfigStatus);
      }
      if (maxSpeed_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxSpeed);
      }
      if (RoadConfigLocation != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation.UnknownLocation) {
        output.WriteRawTag(24);
        output.WriteEnum((int) RoadConfigLocation);
      }
      if (Flashing != false) {
        output.WriteRawTag(32);
        output.WriteBool(Flashing);
      }
      if (RedBorder != false) {
        output.WriteRawTag(40);
        output.WriteBool(RedBorder);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (RoadConfigStatus != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus.UnknownRoadConfigStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoadConfigStatus);
      }
      if (maxSpeed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxSpeed);
      }
      if (RoadConfigLocation != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation.UnknownLocation) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoadConfigLocation);
      }
      if (Flashing != false) {
        size += 1 + 1;
      }
      if (RedBorder != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RoadConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.RoadConfigStatus != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus.UnknownRoadConfigStatus) {
        RoadConfigStatus = other.RoadConfigStatus;
      }
      if (other.maxSpeed_ != null) {
        if (maxSpeed_ == null) {
          MaxSpeed = new global::Fmsitsinterface.MeasurementType();
        }
        MaxSpeed.MergeFrom(other.MaxSpeed);
      }
      if (other.RoadConfigLocation != global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation.UnknownLocation) {
        RoadConfigLocation = other.RoadConfigLocation;
      }
      if (other.Flashing != false) {
        Flashing = other.Flashing;
      }
      if (other.RedBorder != false) {
        RedBorder = other.RedBorder;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoadConfigStatus = (global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (maxSpeed_ == null) {
              MaxSpeed = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(MaxSpeed);
            break;
          }
          case 24: {
            RoadConfigLocation = (global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation) input.ReadEnum();
            break;
          }
          case 32: {
            Flashing = input.ReadBool();
            break;
          }
          case 40: {
            RedBorder = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoadConfigStatus = (global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigStatus) input.ReadEnum();
            break;
          }
          case 18: {
            if (maxSpeed_ == null) {
              MaxSpeed = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(MaxSpeed);
            break;
          }
          case 24: {
            RoadConfigLocation = (global::Fmsitsinterface.RoadConfiguration.Types.RoadConfigLocation) input.ReadEnum();
            break;
          }
          case 32: {
            Flashing = input.ReadBool();
            break;
          }
          case 40: {
            RedBorder = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RoadConfiguration message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum RoadConfigStatus {
        /// <summary>
        /// Unknown Status
        /// </summary>
        [pbr::OriginalName("UNKNOWN_ROAD_CONFIG_STATUS")] UnknownRoadConfigStatus = 0,
        /// <summary>
        /// Open: 'falling' green arrow
        /// </summary>
        [pbr::OriginalName("OPEN")] Open = 1,
        /// <summary>
        /// Closed for all traffic: red cross 
        /// </summary>
        [pbr::OriginalName("CLOSED")] Closed = 2,
        /// <summary>
        /// Closed for all traffic
        /// </summary>
        [pbr::OriginalName("CLOSED_FOR_ALL_TRAFFIC", PreferredAlias = false)] ClosedForAllTraffic = 2,
        /// <summary>
        /// verdrijfpijl naar rechts
        /// </summary>
        [pbr::OriginalName("MERGE_RIGHT")] MergeRight = 3,
        /// <summary>
        /// verdrijfpijl naar links
        /// </summary>
        [pbr::OriginalName("MERGE_LEFT")] MergeLeft = 4,
        /// <summary>
        /// verkeersbord F08
        /// </summary>
        [pbr::OriginalName("END_OF_RESTRICTIONS")] EndOfRestrictions = 5,
        /// <summary>
        /// You cannot use this lane for your type of vehicle
        /// </summary>
        [pbr::OriginalName("CLOSED_FOR_YOU")] ClosedForYou = 6,
        /// <summary>
        /// temporary change of the maximum speed (matrixborden)
        /// </summary>
        [pbr::OriginalName("CHANGED_MAX_SPEED")] ChangedMaxSpeed = 7,
        /// <summary>
        /// Variable message sign is blank / turned off
        /// </summary>
        [pbr::OriginalName("BLANK")] Blank = 8,
      }

      public enum RoadConfigLocation {
        [pbr::OriginalName("UNKNOWN_LOCATION")] UnknownLocation = 0,
        /// <summary>
        /// object located downstream relative to the vehicle
        /// </summary>
        [pbr::OriginalName("LOCATION_DOWNSTREAM")] LocationDownstream = 1,
        /// <summary>
        /// object located upstream relative to the vehicle
        /// </summary>
        [pbr::OriginalName("LOCATION_UPSTREAM")] LocationUpstream = 2,
      }

    }
    #endregion

  }

  public sealed partial class OvertakingInfo : pb::IMessage<OvertakingInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OvertakingInfo> _parser = new pb::MessageParser<OvertakingInfo>(() => new OvertakingInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OvertakingInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OvertakingInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OvertakingInfo(OvertakingInfo other) : this() {
      applicableFor_ = other.applicableFor_.Clone();
      exceptFor_ = other.exceptFor_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OvertakingInfo Clone() {
      return new OvertakingInfo(this);
    }

    /// <summary>Field number for the "applicable_for" field.</summary>
    public const int ApplicableForFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType> _repeated_applicableFor_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType) x);
    private readonly pbc::RepeatedField<global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType> applicableFor_ = new pbc::RepeatedField<global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType> ApplicableFor {
      get { return applicableFor_; }
    }

    /// <summary>Field number for the "except_for" field.</summary>
    public const int ExceptForFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType> _repeated_exceptFor_codec
        = pb::FieldCodec.ForEnum(18, x => (int) x, x => (global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType) x);
    private readonly pbc::RepeatedField<global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType> exceptFor_ = new pbc::RepeatedField<global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Fmsitsinterface.OvertakingInfo.Types.ApplicableVehicleType> ExceptFor {
      get { return exceptFor_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OvertakingInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OvertakingInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!applicableFor_.Equals(other.applicableFor_)) return false;
      if(!exceptFor_.Equals(other.exceptFor_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= applicableFor_.GetHashCode();
      hash ^= exceptFor_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      applicableFor_.WriteTo(output, _repeated_applicableFor_codec);
      exceptFor_.WriteTo(output, _repeated_exceptFor_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      applicableFor_.WriteTo(ref output, _repeated_applicableFor_codec);
      exceptFor_.WriteTo(ref output, _repeated_exceptFor_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += applicableFor_.CalculateSize(_repeated_applicableFor_codec);
      size += exceptFor_.CalculateSize(_repeated_exceptFor_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OvertakingInfo other) {
      if (other == null) {
        return;
      }
      applicableFor_.Add(other.applicableFor_);
      exceptFor_.Add(other.exceptFor_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            applicableFor_.AddEntriesFrom(input, _repeated_applicableFor_codec);
            break;
          }
          case 18:
          case 16: {
            exceptFor_.AddEntriesFrom(input, _repeated_exceptFor_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            applicableFor_.AddEntriesFrom(ref input, _repeated_applicableFor_codec);
            break;
          }
          case 18:
          case 16: {
            exceptFor_.AddEntriesFrom(ref input, _repeated_exceptFor_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the OvertakingInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum ApplicableVehicleType {
        [pbr::OriginalName("UNKNOWN_APPLICABLE_VEHICLE_TYPE")] UnknownApplicableVehicleType = 0,
        /// <summary>
        /// any kind of motorized vehicle
        /// </summary>
        [pbr::OriginalName("ALL_MOTORIZED")] AllMotorized = 1,
        /// <summary>
        /// all kinds of trucks
        /// </summary>
        [pbr::OriginalName("HGV")] Hgv = 2,
        /// <summary>
        /// agricultural vehicles like tractors
        /// </summary>
        [pbr::OriginalName("AGRICULTURE")] Agriculture = 3,
        [pbr::OriginalName("MOPED")] Moped = 4,
      }

    }
    #endregion

  }

  public sealed partial class SpeedInfo : pb::IMessage<SpeedInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SpeedInfo> _parser = new pb::MessageParser<SpeedInfo>(() => new SpeedInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SpeedInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeedInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeedInfo(SpeedInfo other) : this() {
      maximumSpeedLimit_ = other.maximumSpeedLimit_;
      optimalSpeed_ = other.optimalSpeed_;
      speedLimitUnit_ = other.speedLimitUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SpeedInfo Clone() {
      return new SpeedInfo(this);
    }

    /// <summary>Field number for the "maximum_speed_limit" field.</summary>
    public const int MaximumSpeedLimitFieldNumber = 1;
    private int maximumSpeedLimit_;
    /// <summary>
    /// maximum speed limit, its_event_code MAXIMUM_SPEED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaximumSpeedLimit {
      get { return maximumSpeedLimit_; }
      set {
        maximumSpeedLimit_ = value;
      }
    }

    /// <summary>Field number for the "optimal_speed" field.</summary>
    public const int OptimalSpeedFieldNumber = 2;
    private int optimalSpeed_;
    /// <summary>
    /// optimal speed, its_event_code ADVISORY_SPEED_LIMIT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int OptimalSpeed {
      get { return optimalSpeed_; }
      set {
        optimalSpeed_ = value;
      }
    }

    /// <summary>Field number for the "speed_limit_unit" field.</summary>
    public const int SpeedLimitUnitFieldNumber = 3;
    private global::Fmsitsinterface.MeasurementUnit speedLimitUnit_ = global::Fmsitsinterface.MeasurementUnit.Unknown;
    /// <summary>
    /// units in which maximumSpeedLimit and optimalSpeed are expressed, , its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementUnit SpeedLimitUnit {
      get { return speedLimitUnit_; }
      set {
        speedLimitUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SpeedInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SpeedInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaximumSpeedLimit != other.MaximumSpeedLimit) return false;
      if (OptimalSpeed != other.OptimalSpeed) return false;
      if (SpeedLimitUnit != other.SpeedLimitUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MaximumSpeedLimit != 0) hash ^= MaximumSpeedLimit.GetHashCode();
      if (OptimalSpeed != 0) hash ^= OptimalSpeed.GetHashCode();
      if (SpeedLimitUnit != global::Fmsitsinterface.MeasurementUnit.Unknown) hash ^= SpeedLimitUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaximumSpeedLimit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaximumSpeedLimit);
      }
      if (OptimalSpeed != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OptimalSpeed);
      }
      if (SpeedLimitUnit != global::Fmsitsinterface.MeasurementUnit.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SpeedLimitUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaximumSpeedLimit != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaximumSpeedLimit);
      }
      if (OptimalSpeed != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(OptimalSpeed);
      }
      if (SpeedLimitUnit != global::Fmsitsinterface.MeasurementUnit.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SpeedLimitUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MaximumSpeedLimit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaximumSpeedLimit);
      }
      if (OptimalSpeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OptimalSpeed);
      }
      if (SpeedLimitUnit != global::Fmsitsinterface.MeasurementUnit.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SpeedLimitUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SpeedInfo other) {
      if (other == null) {
        return;
      }
      if (other.MaximumSpeedLimit != 0) {
        MaximumSpeedLimit = other.MaximumSpeedLimit;
      }
      if (other.OptimalSpeed != 0) {
        OptimalSpeed = other.OptimalSpeed;
      }
      if (other.SpeedLimitUnit != global::Fmsitsinterface.MeasurementUnit.Unknown) {
        SpeedLimitUnit = other.SpeedLimitUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaximumSpeedLimit = input.ReadInt32();
            break;
          }
          case 16: {
            OptimalSpeed = input.ReadInt32();
            break;
          }
          case 24: {
            SpeedLimitUnit = (global::Fmsitsinterface.MeasurementUnit) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaximumSpeedLimit = input.ReadInt32();
            break;
          }
          case 16: {
            OptimalSpeed = input.ReadInt32();
            break;
          }
          case 24: {
            SpeedLimitUnit = (global::Fmsitsinterface.MeasurementUnit) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The IvriContainer is transmitted when a significant change occurs in the variables. Without change the message is transmitted every 10 seconds
  /// </summary>
  public sealed partial class IvriContainer : pb::IMessage<IvriContainer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<IvriContainer> _parser = new pb::MessageParser<IvriContainer>(() => new IvriContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<IvriContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IvriContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IvriContainer(IvriContainer other) : this() {
      priorityContainer_ = other.priorityContainer_ != null ? other.priorityContainer_.Clone() : null;
      trafficLightStateInformation_ = other.trafficLightStateInformation_ != null ? other.trafficLightStateInformation_.Clone() : null;
      trafficLightTimingInformation_ = other.trafficLightTimingInformation_ != null ? other.trafficLightTimingInformation_.Clone() : null;
      trafficLightSpeedAdvice_ = other.trafficLightSpeedAdvice_ != null ? other.trafficLightSpeedAdvice_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public IvriContainer Clone() {
      return new IvriContainer(this);
    }

    /// <summary>Field number for the "priority_container" field.</summary>
    public const int PriorityContainerFieldNumber = 1;
    private global::Fmsitsinterface.PriorityContainer priorityContainer_;
    /// <summary>
    /// object containing feedback on priority request, its_event_code PRIORITY
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.PriorityContainer PriorityContainer {
      get { return priorityContainer_; }
      set {
        priorityContainer_ = value;
      }
    }

    /// <summary>Field number for the "traffic_light_state_information" field.</summary>
    public const int TrafficLightStateInformationFieldNumber = 2;
    private global::Fmsitsinterface.TrafficLightStateInformation trafficLightStateInformation_;
    /// <summary>
    /// object containing information on traffic light states, its_event_code TRAFFIC_LIGHT_STATUS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TrafficLightStateInformation TrafficLightStateInformation {
      get { return trafficLightStateInformation_; }
      set {
        trafficLightStateInformation_ = value;
      }
    }

    /// <summary>Field number for the "traffic_light_timing_information" field.</summary>
    public const int TrafficLightTimingInformationFieldNumber = 3;
    private global::Fmsitsinterface.TrafficLightTimingInformation trafficLightTimingInformation_;
    /// <summary>
    /// object containing information on when traffic light state changes are expected, its_event_code TRAFFIC_LIGHT_TIMING
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TrafficLightTimingInformation TrafficLightTimingInformation {
      get { return trafficLightTimingInformation_; }
      set {
        trafficLightTimingInformation_ = value;
      }
    }

    /// <summary>Field number for the "traffic_light_speed_advice" field.</summary>
    public const int TrafficLightSpeedAdviceFieldNumber = 4;
    private global::Fmsitsinterface.TrafficLightSpeedAdvice trafficLightSpeedAdvice_;
    /// <summary>
    /// object containing information on optimal speed to intersection, its_event_code ADVISORY_SPEED
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TrafficLightSpeedAdvice TrafficLightSpeedAdvice {
      get { return trafficLightSpeedAdvice_; }
      set {
        trafficLightSpeedAdvice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as IvriContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(IvriContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PriorityContainer, other.PriorityContainer)) return false;
      if (!object.Equals(TrafficLightStateInformation, other.TrafficLightStateInformation)) return false;
      if (!object.Equals(TrafficLightTimingInformation, other.TrafficLightTimingInformation)) return false;
      if (!object.Equals(TrafficLightSpeedAdvice, other.TrafficLightSpeedAdvice)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (priorityContainer_ != null) hash ^= PriorityContainer.GetHashCode();
      if (trafficLightStateInformation_ != null) hash ^= TrafficLightStateInformation.GetHashCode();
      if (trafficLightTimingInformation_ != null) hash ^= TrafficLightTimingInformation.GetHashCode();
      if (trafficLightSpeedAdvice_ != null) hash ^= TrafficLightSpeedAdvice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (priorityContainer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PriorityContainer);
      }
      if (trafficLightStateInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TrafficLightStateInformation);
      }
      if (trafficLightTimingInformation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TrafficLightTimingInformation);
      }
      if (trafficLightSpeedAdvice_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TrafficLightSpeedAdvice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (priorityContainer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PriorityContainer);
      }
      if (trafficLightStateInformation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TrafficLightStateInformation);
      }
      if (trafficLightTimingInformation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TrafficLightTimingInformation);
      }
      if (trafficLightSpeedAdvice_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TrafficLightSpeedAdvice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (priorityContainer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriorityContainer);
      }
      if (trafficLightStateInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrafficLightStateInformation);
      }
      if (trafficLightTimingInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrafficLightTimingInformation);
      }
      if (trafficLightSpeedAdvice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrafficLightSpeedAdvice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(IvriContainer other) {
      if (other == null) {
        return;
      }
      if (other.priorityContainer_ != null) {
        if (priorityContainer_ == null) {
          PriorityContainer = new global::Fmsitsinterface.PriorityContainer();
        }
        PriorityContainer.MergeFrom(other.PriorityContainer);
      }
      if (other.trafficLightStateInformation_ != null) {
        if (trafficLightStateInformation_ == null) {
          TrafficLightStateInformation = new global::Fmsitsinterface.TrafficLightStateInformation();
        }
        TrafficLightStateInformation.MergeFrom(other.TrafficLightStateInformation);
      }
      if (other.trafficLightTimingInformation_ != null) {
        if (trafficLightTimingInformation_ == null) {
          TrafficLightTimingInformation = new global::Fmsitsinterface.TrafficLightTimingInformation();
        }
        TrafficLightTimingInformation.MergeFrom(other.TrafficLightTimingInformation);
      }
      if (other.trafficLightSpeedAdvice_ != null) {
        if (trafficLightSpeedAdvice_ == null) {
          TrafficLightSpeedAdvice = new global::Fmsitsinterface.TrafficLightSpeedAdvice();
        }
        TrafficLightSpeedAdvice.MergeFrom(other.TrafficLightSpeedAdvice);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (priorityContainer_ == null) {
              PriorityContainer = new global::Fmsitsinterface.PriorityContainer();
            }
            input.ReadMessage(PriorityContainer);
            break;
          }
          case 18: {
            if (trafficLightStateInformation_ == null) {
              TrafficLightStateInformation = new global::Fmsitsinterface.TrafficLightStateInformation();
            }
            input.ReadMessage(TrafficLightStateInformation);
            break;
          }
          case 26: {
            if (trafficLightTimingInformation_ == null) {
              TrafficLightTimingInformation = new global::Fmsitsinterface.TrafficLightTimingInformation();
            }
            input.ReadMessage(TrafficLightTimingInformation);
            break;
          }
          case 34: {
            if (trafficLightSpeedAdvice_ == null) {
              TrafficLightSpeedAdvice = new global::Fmsitsinterface.TrafficLightSpeedAdvice();
            }
            input.ReadMessage(TrafficLightSpeedAdvice);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (priorityContainer_ == null) {
              PriorityContainer = new global::Fmsitsinterface.PriorityContainer();
            }
            input.ReadMessage(PriorityContainer);
            break;
          }
          case 18: {
            if (trafficLightStateInformation_ == null) {
              TrafficLightStateInformation = new global::Fmsitsinterface.TrafficLightStateInformation();
            }
            input.ReadMessage(TrafficLightStateInformation);
            break;
          }
          case 26: {
            if (trafficLightTimingInformation_ == null) {
              TrafficLightTimingInformation = new global::Fmsitsinterface.TrafficLightTimingInformation();
            }
            input.ReadMessage(TrafficLightTimingInformation);
            break;
          }
          case 34: {
            if (trafficLightSpeedAdvice_ == null) {
              TrafficLightSpeedAdvice = new global::Fmsitsinterface.TrafficLightSpeedAdvice();
            }
            input.ReadMessage(TrafficLightSpeedAdvice);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PriorityContainer : pb::IMessage<PriorityContainer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PriorityContainer> _parser = new pb::MessageParser<PriorityContainer>(() => new PriorityContainer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PriorityContainer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriorityContainer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriorityContainer(PriorityContainer other) : this() {
      status_ = other.status_;
      maneuver_ = other.maneuver_ != null ? other.maneuver_.Clone() : null;
      laneId_ = other.laneId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PriorityContainer Clone() {
      return new PriorityContainer(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private string status_ = "";
    /// <summary>
    /// feedback on priority request, its_event_code PRIORITY
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maneuver" field.</summary>
    public const int ManeuverFieldNumber = 2;
    private global::Fmsitsinterface.Maneuver maneuver_;
    /// <summary>
    /// direction for which priority is requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.Maneuver Maneuver {
      get { return maneuver_; }
      set {
        maneuver_ = value;
      }
    }

    /// <summary>Field number for the "lane_id" field.</summary>
    public const int LaneIdFieldNumber = 3;
    private int laneId_;
    /// <summary>
    /// lane for which priority is requested
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LaneId {
      get { return laneId_; }
      set {
        laneId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PriorityContainer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PriorityContainer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (!object.Equals(Maneuver, other.Maneuver)) return false;
      if (LaneId != other.LaneId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (maneuver_ != null) hash ^= Maneuver.GetHashCode();
      if (LaneId != 0) hash ^= LaneId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (maneuver_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Maneuver);
      }
      if (LaneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LaneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Status);
      }
      if (maneuver_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Maneuver);
      }
      if (LaneId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LaneId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (maneuver_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Maneuver);
      }
      if (LaneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LaneId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PriorityContainer other) {
      if (other == null) {
        return;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.maneuver_ != null) {
        if (maneuver_ == null) {
          Maneuver = new global::Fmsitsinterface.Maneuver();
        }
        Maneuver.MergeFrom(other.Maneuver);
      }
      if (other.LaneId != 0) {
        LaneId = other.LaneId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
          case 18: {
            if (maneuver_ == null) {
              Maneuver = new global::Fmsitsinterface.Maneuver();
            }
            input.ReadMessage(Maneuver);
            break;
          }
          case 24: {
            LaneId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Status = input.ReadString();
            break;
          }
          case 18: {
            if (maneuver_ == null) {
              Maneuver = new global::Fmsitsinterface.Maneuver();
            }
            input.ReadMessage(Maneuver);
            break;
          }
          case 24: {
            LaneId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TrafficLightStateInformation : pb::IMessage<TrafficLightStateInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrafficLightStateInformation> _parser = new pb::MessageParser<TrafficLightStateInformation>(() => new TrafficLightStateInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrafficLightStateInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightStateInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightStateInformation(TrafficLightStateInformation other) : this() {
      currentState_ = other.currentState_;
      arrow_ = other.arrow_;
      movement_ = other.movement_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightStateInformation Clone() {
      return new TrafficLightStateInformation(this);
    }

    /// <summary>Field number for the "current_state" field.</summary>
    public const int CurrentStateFieldNumber = 1;
    private global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState currentState_ = global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState.UnknownTrafficLightState;
    /// <summary>
    /// current state of traffic light at lane specified in laneInfo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState CurrentState {
      get { return currentState_; }
      set {
        currentState_ = value;
      }
    }

    /// <summary>Field number for the "arrow" field.</summary>
    public const int ArrowFieldNumber = 2;
    private global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow arrow_ = global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow.UnknownArrow;
    /// <summary>
    /// Direction of the light
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow Arrow {
      get { return arrow_; }
      set {
        arrow_ = value;
      }
    }

    /// <summary>Field number for the "movement" field.</summary>
    public const int MovementFieldNumber = 3;
    private global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement movement_ = global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement.UnknownMovement;
    /// <summary>
    /// Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement Movement {
      get { return movement_; }
      set {
        movement_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrafficLightStateInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrafficLightStateInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentState != other.CurrentState) return false;
      if (Arrow != other.Arrow) return false;
      if (Movement != other.Movement) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentState != global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState.UnknownTrafficLightState) hash ^= CurrentState.GetHashCode();
      if (Arrow != global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow.UnknownArrow) hash ^= Arrow.GetHashCode();
      if (Movement != global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement.UnknownMovement) hash ^= Movement.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentState != global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState.UnknownTrafficLightState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CurrentState);
      }
      if (Arrow != global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow.UnknownArrow) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Arrow);
      }
      if (Movement != global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement.UnknownMovement) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Movement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentState != global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState.UnknownTrafficLightState) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CurrentState);
      }
      if (Arrow != global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow.UnknownArrow) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Arrow);
      }
      if (Movement != global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement.UnknownMovement) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Movement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CurrentState != global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState.UnknownTrafficLightState) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CurrentState);
      }
      if (Arrow != global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow.UnknownArrow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Arrow);
      }
      if (Movement != global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement.UnknownMovement) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Movement);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrafficLightStateInformation other) {
      if (other == null) {
        return;
      }
      if (other.CurrentState != global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState.UnknownTrafficLightState) {
        CurrentState = other.CurrentState;
      }
      if (other.Arrow != global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow.UnknownArrow) {
        Arrow = other.Arrow;
      }
      if (other.Movement != global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement.UnknownMovement) {
        Movement = other.Movement;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentState = (global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState) input.ReadEnum();
            break;
          }
          case 16: {
            Arrow = (global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow) input.ReadEnum();
            break;
          }
          case 24: {
            Movement = (global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrentState = (global::Fmsitsinterface.TrafficLightStateInformation.Types.CurrentState) input.ReadEnum();
            break;
          }
          case 16: {
            Arrow = (global::Fmsitsinterface.TrafficLightStateInformation.Types.Arrow) input.ReadEnum();
            break;
          }
          case 24: {
            Movement = (global::Fmsitsinterface.TrafficLightStateInformation.Types.Movement) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TrafficLightStateInformation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum CurrentState {
        /// <summary>
        /// Unknown traffic light state
        /// </summary>
        [pbr::OriginalName("UNKNOWN_TRAFFIC_LIGHT_STATE")] UnknownTrafficLightState = 0,
        /// <summary>
        /// Red
        /// </summary>
        [pbr::OriginalName("RED")] Red = 1,
        /// <summary>
        /// Amber
        /// </summary>
        [pbr::OriginalName("AMBER")] Amber = 2,
        /// <summary>
        /// Green
        /// </summary>
        [pbr::OriginalName("GREEN")] Green = 3,
        /// <summary>
        /// Orange Flashing
        /// </summary>
        [pbr::OriginalName("ORANGE_FLASHING")] OrangeFlashing = 4,
        /// <summary>
        /// Dark
        /// </summary>
        [pbr::OriginalName("DARK")] Dark = 5,
        /// <summary>
        /// Lane without traffic light
        /// </summary>
        [pbr::OriginalName("NO_LIGHT")] NoLight = 6,
      }

      public enum Arrow {
        /// <summary>
        /// Unknown arrow
        /// </summary>
        [pbr::OriginalName("UNKNOWN_ARROW")] UnknownArrow = 0,
        /// <summary>
        /// No arrow
        /// </summary>
        [pbr::OriginalName("ARROW_NONE")] None = 1,
        /// <summary>
        /// Left arrow
        /// </summary>
        [pbr::OriginalName("ARROW_LEFT")] Left = 2,
        /// <summary>
        /// Right arrow
        /// </summary>
        [pbr::OriginalName("ARROW_RIGHT")] Right = 3,
        /// <summary>
        /// Straight arrow
        /// </summary>
        [pbr::OriginalName("ARROW_STRAIGHT")] Straight = 4,
      }

      public enum Movement {
        /// <summary>
        /// Unknown movement
        /// </summary>
        [pbr::OriginalName("UNKNOWN_MOVEMENT")] UnknownMovement = 0,
        /// <summary>
        /// Protected
        /// </summary>
        [pbr::OriginalName("PROTECTED")] Protected = 1,
        /// <summary>
        /// Permissive
        /// </summary>
        [pbr::OriginalName("PERMISSIVE")] Permissive = 2,
      }

    }
    #endregion

  }

  public sealed partial class TrafficLightTimingInformation : pb::IMessage<TrafficLightTimingInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrafficLightTimingInformation> _parser = new pb::MessageParser<TrafficLightTimingInformation>(() => new TrafficLightTimingInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrafficLightTimingInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightTimingInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightTimingInformation(TrafficLightTimingInformation other) : this() {
      minEndTime_ = other.minEndTime_ != null ? other.minEndTime_.Clone() : null;
      maxEndTime_ = other.maxEndTime_ != null ? other.maxEndTime_.Clone() : null;
      likelyTime_ = other.likelyTime_ != null ? other.likelyTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightTimingInformation Clone() {
      return new TrafficLightTimingInformation(this);
    }

    /// <summary>Field number for the "min_end_time" field.</summary>
    public const int MinEndTimeFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp minEndTime_;
    /// <summary>
    /// The element minEndTime is used to convey the earliest time possible at which the phase could change, except when unpredictable events relating to a pre-emption or priority call disrupt a currently active timing plan. (UTC+00:00).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MinEndTime {
      get { return minEndTime_; }
      set {
        minEndTime_ = value;
      }
    }

    /// <summary>Field number for the "max_end_time" field.</summary>
    public const int MaxEndTimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp maxEndTime_;
    /// <summary>
    /// The element MaxEndTime is used to convey the latest time possible which the phase could change, except when unpredictable events relating to a pre-emption or priority call come into play and disrupt a currently active timing plan. (UTC+00:00)"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MaxEndTime {
      get { return maxEndTime_; }
      set {
        maxEndTime_ = value;
      }
    }

    /// <summary>Field number for the "likely_time" field.</summary>
    public const int LikelyTimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp likelyTime_;
    /// <summary>
    /// The element likelyTime is used to convey the most likely time the phase changes. This occurs between MinEndTime and MaxEndTime and is only relevant for traffic-actuated control programs. (UTC+00:00).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LikelyTime {
      get { return likelyTime_; }
      set {
        likelyTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrafficLightTimingInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrafficLightTimingInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MinEndTime, other.MinEndTime)) return false;
      if (!object.Equals(MaxEndTime, other.MaxEndTime)) return false;
      if (!object.Equals(LikelyTime, other.LikelyTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (minEndTime_ != null) hash ^= MinEndTime.GetHashCode();
      if (maxEndTime_ != null) hash ^= MaxEndTime.GetHashCode();
      if (likelyTime_ != null) hash ^= LikelyTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (minEndTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinEndTime);
      }
      if (maxEndTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxEndTime);
      }
      if (likelyTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LikelyTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (minEndTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MinEndTime);
      }
      if (maxEndTime_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MaxEndTime);
      }
      if (likelyTime_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LikelyTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (minEndTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MinEndTime);
      }
      if (maxEndTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaxEndTime);
      }
      if (likelyTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LikelyTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrafficLightTimingInformation other) {
      if (other == null) {
        return;
      }
      if (other.minEndTime_ != null) {
        if (minEndTime_ == null) {
          MinEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MinEndTime.MergeFrom(other.MinEndTime);
      }
      if (other.maxEndTime_ != null) {
        if (maxEndTime_ == null) {
          MaxEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MaxEndTime.MergeFrom(other.MaxEndTime);
      }
      if (other.likelyTime_ != null) {
        if (likelyTime_ == null) {
          LikelyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LikelyTime.MergeFrom(other.LikelyTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (minEndTime_ == null) {
              MinEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MinEndTime);
            break;
          }
          case 18: {
            if (maxEndTime_ == null) {
              MaxEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MaxEndTime);
            break;
          }
          case 26: {
            if (likelyTime_ == null) {
              LikelyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LikelyTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (minEndTime_ == null) {
              MinEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MinEndTime);
            break;
          }
          case 18: {
            if (maxEndTime_ == null) {
              MaxEndTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MaxEndTime);
            break;
          }
          case 26: {
            if (likelyTime_ == null) {
              LikelyTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LikelyTime);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TrafficLightSpeedAdvice : pb::IMessage<TrafficLightSpeedAdvice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TrafficLightSpeedAdvice> _parser = new pb::MessageParser<TrafficLightSpeedAdvice>(() => new TrafficLightSpeedAdvice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TrafficLightSpeedAdvice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightSpeedAdvice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightSpeedAdvice(TrafficLightSpeedAdvice other) : this() {
      advice_ = other.advice_;
      adviceType_ = other.adviceType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TrafficLightSpeedAdvice Clone() {
      return new TrafficLightSpeedAdvice(this);
    }

    /// <summary>Field number for the "advice" field.</summary>
    public const int AdviceFieldNumber = 1;
    private string advice_ = "";
    /// <summary>
    /// advice on speed, can be quantitative or qualitative
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Advice {
      get { return advice_; }
      set {
        advice_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "advice_type" field.</summary>
    public const int AdviceTypeFieldNumber = 2;
    private string adviceType_ = "";
    /// <summary>
    /// type of advice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AdviceType {
      get { return adviceType_; }
      set {
        adviceType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TrafficLightSpeedAdvice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TrafficLightSpeedAdvice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Advice != other.Advice) return false;
      if (AdviceType != other.AdviceType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Advice.Length != 0) hash ^= Advice.GetHashCode();
      if (AdviceType.Length != 0) hash ^= AdviceType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Advice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Advice);
      }
      if (AdviceType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AdviceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Advice.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Advice);
      }
      if (AdviceType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AdviceType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Advice.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Advice);
      }
      if (AdviceType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AdviceType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TrafficLightSpeedAdvice other) {
      if (other == null) {
        return;
      }
      if (other.Advice.Length != 0) {
        Advice = other.Advice;
      }
      if (other.AdviceType.Length != 0) {
        AdviceType = other.AdviceType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Advice = input.ReadString();
            break;
          }
          case 18: {
            AdviceType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Advice = input.ReadString();
            break;
          }
          case 18: {
            AdviceType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LaneInfo : pb::IMessage<LaneInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LaneInfo> _parser = new pb::MessageParser<LaneInfo>(() => new LaneInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LaneInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaneInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaneInfo(LaneInfo other) : this() {
      maxLaneId_ = other.maxLaneId_;
      laneId_ = other.laneId_;
      maneuvers_ = other.maneuvers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LaneInfo Clone() {
      return new LaneInfo(this);
    }

    /// <summary>Field number for the "max_lane_id" field.</summary>
    public const int MaxLaneIdFieldNumber = 1;
    private int maxLaneId_;
    /// <summary>
    /// total number of lanes at event location, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int MaxLaneId {
      get { return maxLaneId_; }
      set {
        maxLaneId_ = value;
      }
    }

    /// <summary>Field number for the "lane_id" field.</summary>
    public const int LaneIdFieldNumber = 2;
    private int laneId_;
    /// <summary>
    /// indicating the lane at which the event occurs (counting from left to right, starting at 1 till max_lane_id), its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LaneId {
      get { return laneId_; }
      set {
        laneId_ = value;
      }
    }

    /// <summary>Field number for the "maneuvers" field.</summary>
    public const int ManeuversFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Fmsitsinterface.Maneuver> _repeated_maneuvers_codec
        = pb::FieldCodec.ForMessage(26, global::Fmsitsinterface.Maneuver.Parser);
    private readonly pbc::RepeatedField<global::Fmsitsinterface.Maneuver> maneuvers_ = new pbc::RepeatedField<global::Fmsitsinterface.Maneuver>();
    /// <summary>
    /// The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Fmsitsinterface.Maneuver> Maneuvers {
      get { return maneuvers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LaneInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LaneInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxLaneId != other.MaxLaneId) return false;
      if (LaneId != other.LaneId) return false;
      if(!maneuvers_.Equals(other.maneuvers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxLaneId != 0) hash ^= MaxLaneId.GetHashCode();
      if (LaneId != 0) hash ^= LaneId.GetHashCode();
      hash ^= maneuvers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxLaneId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxLaneId);
      }
      if (LaneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LaneId);
      }
      maneuvers_.WriteTo(output, _repeated_maneuvers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxLaneId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxLaneId);
      }
      if (LaneId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LaneId);
      }
      maneuvers_.WriteTo(ref output, _repeated_maneuvers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MaxLaneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxLaneId);
      }
      if (LaneId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LaneId);
      }
      size += maneuvers_.CalculateSize(_repeated_maneuvers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LaneInfo other) {
      if (other == null) {
        return;
      }
      if (other.MaxLaneId != 0) {
        MaxLaneId = other.MaxLaneId;
      }
      if (other.LaneId != 0) {
        LaneId = other.LaneId;
      }
      maneuvers_.Add(other.maneuvers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxLaneId = input.ReadInt32();
            break;
          }
          case 16: {
            LaneId = input.ReadInt32();
            break;
          }
          case 26: {
            maneuvers_.AddEntriesFrom(input, _repeated_maneuvers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxLaneId = input.ReadInt32();
            break;
          }
          case 16: {
            LaneId = input.ReadInt32();
            break;
          }
          case 26: {
            maneuvers_.AddEntriesFrom(ref input, _repeated_maneuvers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Maneuver : pb::IMessage<Maneuver>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Maneuver> _parser = new pb::MessageParser<Maneuver>(() => new Maneuver());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Maneuver> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Maneuver() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Maneuver(Maneuver other) : this() {
      direction_ = other.direction_.Clone();
      alwaysYield_ = other.alwaysYield_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Maneuver Clone() {
      return new Maneuver(this);
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Fmsitsinterface.Maneuver.Types.Direction> _repeated_direction_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Fmsitsinterface.Maneuver.Types.Direction) x);
    private readonly pbc::RepeatedField<global::Fmsitsinterface.Maneuver.Types.Direction> direction_ = new pbc::RepeatedField<global::Fmsitsinterface.Maneuver.Types.Direction>();
    /// <summary>
    /// the list contains integers indicating the possible directions from the traffic light
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Fmsitsinterface.Maneuver.Types.Direction> Direction {
      get { return direction_; }
    }

    /// <summary>Field number for the "always_yield" field.</summary>
    public const int AlwaysYieldFieldNumber = 2;
    private bool alwaysYield_;
    /// <summary>
    /// boolean value indicating whether the road user should always give priority to intersecting traffic (cfr. orange flashing light)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AlwaysYield {
      get { return alwaysYield_; }
      set {
        alwaysYield_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Maneuver);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Maneuver other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!direction_.Equals(other.direction_)) return false;
      if (AlwaysYield != other.AlwaysYield) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= direction_.GetHashCode();
      if (AlwaysYield != false) hash ^= AlwaysYield.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      direction_.WriteTo(output, _repeated_direction_codec);
      if (AlwaysYield != false) {
        output.WriteRawTag(16);
        output.WriteBool(AlwaysYield);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      direction_.WriteTo(ref output, _repeated_direction_codec);
      if (AlwaysYield != false) {
        output.WriteRawTag(16);
        output.WriteBool(AlwaysYield);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += direction_.CalculateSize(_repeated_direction_codec);
      if (AlwaysYield != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Maneuver other) {
      if (other == null) {
        return;
      }
      direction_.Add(other.direction_);
      if (other.AlwaysYield != false) {
        AlwaysYield = other.AlwaysYield;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            direction_.AddEntriesFrom(input, _repeated_direction_codec);
            break;
          }
          case 16: {
            AlwaysYield = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            direction_.AddEntriesFrom(ref input, _repeated_direction_codec);
            break;
          }
          case 16: {
            AlwaysYield = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Maneuver message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Direction {
        /// <summary>
        /// Unknown direction
        /// </summary>
        [pbr::OriginalName("UNKNOWN_DIRECTION")] UnknownDirection = 0,
        /// <summary>
        /// Straight
        /// </summary>
        [pbr::OriginalName("STRAIGHT")] Straight = 1,
        /// <summary>
        /// Left
        /// </summary>
        [pbr::OriginalName("LEFT")] Left = 2,
        /// <summary>
        /// Right
        /// </summary>
        [pbr::OriginalName("RIGHT")] Right = 3,
        /// <summary>
        /// U-Turn
        /// </summary>
        [pbr::OriginalName("U_TURN")] UTurn = 4,
        /// <summary>
        /// Unspecified
        /// </summary>
        [pbr::OriginalName("UNSPECIFIED")] Unspecified = 5,
      }

    }
    #endregion

  }

  public sealed partial class SensorInfo : pb::IMessage<SensorInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SensorInfo> _parser = new pb::MessageParser<SensorInfo>(() => new SensorInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SensorInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorInfo(SensorInfo other) : this() {
      tirePressure_ = other.tirePressure_ != null ? other.tirePressure_.Clone() : null;
      vehicleWeight_ = other.vehicleWeight_ != null ? other.vehicleWeight_.Clone() : null;
      vehicleHeight_ = other.vehicleHeight_ != null ? other.vehicleHeight_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SensorInfo Clone() {
      return new SensorInfo(this);
    }

    /// <summary>Field number for the "tire_pressure" field.</summary>
    public const int TirePressureFieldNumber = 1;
    private global::Fmsitsinterface.TirePressure tirePressure_;
    /// <summary>
    /// object containing information on tire pressures, its_event_code TIRE_PRESSURE_GAUGE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TirePressure TirePressure {
      get { return tirePressure_; }
      set {
        tirePressure_ = value;
      }
    }

    /// <summary>Field number for the "vehicle_weight" field.</summary>
    public const int VehicleWeightFieldNumber = 2;
    private global::Fmsitsinterface.VehicleWeight vehicleWeight_;
    /// <summary>
    /// object containing information on vehicle weight, its_event_code WEIGHT
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.VehicleWeight VehicleWeight {
      get { return vehicleWeight_; }
      set {
        vehicleWeight_ = value;
      }
    }

    /// <summary>Field number for the "vehicle_height" field.</summary>
    public const int VehicleHeightFieldNumber = 3;
    private global::Fmsitsinterface.MeasurementType vehicleHeight_;
    /// <summary>
    /// object containing information on vehicle height, its_event_code ALTIMETE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementType VehicleHeight {
      get { return vehicleHeight_; }
      set {
        vehicleHeight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SensorInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SensorInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TirePressure, other.TirePressure)) return false;
      if (!object.Equals(VehicleWeight, other.VehicleWeight)) return false;
      if (!object.Equals(VehicleHeight, other.VehicleHeight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (tirePressure_ != null) hash ^= TirePressure.GetHashCode();
      if (vehicleWeight_ != null) hash ^= VehicleWeight.GetHashCode();
      if (vehicleHeight_ != null) hash ^= VehicleHeight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (tirePressure_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TirePressure);
      }
      if (vehicleWeight_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VehicleWeight);
      }
      if (vehicleHeight_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VehicleHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (tirePressure_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TirePressure);
      }
      if (vehicleWeight_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(VehicleWeight);
      }
      if (vehicleHeight_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(VehicleHeight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (tirePressure_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TirePressure);
      }
      if (vehicleWeight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VehicleWeight);
      }
      if (vehicleHeight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VehicleHeight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SensorInfo other) {
      if (other == null) {
        return;
      }
      if (other.tirePressure_ != null) {
        if (tirePressure_ == null) {
          TirePressure = new global::Fmsitsinterface.TirePressure();
        }
        TirePressure.MergeFrom(other.TirePressure);
      }
      if (other.vehicleWeight_ != null) {
        if (vehicleWeight_ == null) {
          VehicleWeight = new global::Fmsitsinterface.VehicleWeight();
        }
        VehicleWeight.MergeFrom(other.VehicleWeight);
      }
      if (other.vehicleHeight_ != null) {
        if (vehicleHeight_ == null) {
          VehicleHeight = new global::Fmsitsinterface.MeasurementType();
        }
        VehicleHeight.MergeFrom(other.VehicleHeight);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (tirePressure_ == null) {
              TirePressure = new global::Fmsitsinterface.TirePressure();
            }
            input.ReadMessage(TirePressure);
            break;
          }
          case 18: {
            if (vehicleWeight_ == null) {
              VehicleWeight = new global::Fmsitsinterface.VehicleWeight();
            }
            input.ReadMessage(VehicleWeight);
            break;
          }
          case 26: {
            if (vehicleHeight_ == null) {
              VehicleHeight = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(VehicleHeight);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (tirePressure_ == null) {
              TirePressure = new global::Fmsitsinterface.TirePressure();
            }
            input.ReadMessage(TirePressure);
            break;
          }
          case 18: {
            if (vehicleWeight_ == null) {
              VehicleWeight = new global::Fmsitsinterface.VehicleWeight();
            }
            input.ReadMessage(VehicleWeight);
            break;
          }
          case 26: {
            if (vehicleHeight_ == null) {
              VehicleHeight = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(VehicleHeight);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TirePressure : pb::IMessage<TirePressure>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TirePressure> _parser = new pb::MessageParser<TirePressure>(() => new TirePressure());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TirePressure> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TirePressure() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TirePressure(TirePressure other) : this() {
      status_ = other.status_;
      axleCount_ = other.axleCount_;
      anomalies_ = other.anomalies_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TirePressure Clone() {
      return new TirePressure(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus status_ = global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus.UnknownStatus;
    /// <summary>
    /// indicating overall status of tire pressure of the vehicle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "axle_count" field.</summary>
    public const int AxleCountFieldNumber = 2;
    private int axleCount_;
    /// <summary>
    /// integer indicating total number of axles of the vehicle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AxleCount {
      get { return axleCount_; }
      set {
        axleCount_ = value;
      }
    }

    /// <summary>Field number for the "anomalies" field.</summary>
    public const int AnomaliesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Fmsitsinterface.Anomalies> _repeated_anomalies_codec
        = pb::FieldCodec.ForMessage(26, global::Fmsitsinterface.Anomalies.Parser);
    private readonly pbc::RepeatedField<global::Fmsitsinterface.Anomalies> anomalies_ = new pbc::RepeatedField<global::Fmsitsinterface.Anomalies>();
    /// <summary>
    /// object containing detailed information on pressure of every tire that is not OK
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Fmsitsinterface.Anomalies> Anomalies {
      get { return anomalies_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TirePressure);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TirePressure other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (AxleCount != other.AxleCount) return false;
      if(!anomalies_.Equals(other.anomalies_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus.UnknownStatus) hash ^= Status.GetHashCode();
      if (AxleCount != 0) hash ^= AxleCount.GetHashCode();
      hash ^= anomalies_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus.UnknownStatus) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (AxleCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AxleCount);
      }
      anomalies_.WriteTo(output, _repeated_anomalies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus.UnknownStatus) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
      if (AxleCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AxleCount);
      }
      anomalies_.WriteTo(ref output, _repeated_anomalies_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Status != global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus.UnknownStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (AxleCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AxleCount);
      }
      size += anomalies_.CalculateSize(_repeated_anomalies_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TirePressure other) {
      if (other == null) {
        return;
      }
      if (other.Status != global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus.UnknownStatus) {
        Status = other.Status;
      }
      if (other.AxleCount != 0) {
        AxleCount = other.AxleCount;
      }
      anomalies_.Add(other.anomalies_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = (global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus) input.ReadEnum();
            break;
          }
          case 16: {
            AxleCount = input.ReadInt32();
            break;
          }
          case 26: {
            anomalies_.AddEntriesFrom(input, _repeated_anomalies_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = (global::Fmsitsinterface.TirePressure.Types.VehicleTirePressureStatus) input.ReadEnum();
            break;
          }
          case 16: {
            AxleCount = input.ReadInt32();
            break;
          }
          case 26: {
            anomalies_.AddEntriesFrom(ref input, _repeated_anomalies_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the TirePressure message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum VehicleTirePressureStatus {
        /// <summary>
        /// Unknown status
        /// </summary>
        [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
        /// <summary>
        /// OK: all tires seem to be OK
        /// </summary>
        [pbr::OriginalName("OK")] Ok = 1,
        /// <summary>
        /// Not OK: at least one tire is suspect and none seem to be flat
        /// </summary>
        [pbr::OriginalName("NOK_SUSPECT")] NokSuspect = 2,
        /// <summary>
        /// Not OK: at least one tire seems to be flat
        /// </summary>
        [pbr::OriginalName("NOK_FLAT")] NokFlat = 3,
      }

    }
    #endregion

  }

  public sealed partial class Anomalies : pb::IMessage<Anomalies>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Anomalies> _parser = new pb::MessageParser<Anomalies>(() => new Anomalies());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Anomalies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Anomalies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Anomalies(Anomalies other) : this() {
      axle_ = other.axle_;
      side_ = other.side_;
      measurement_ = other.measurement_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Anomalies Clone() {
      return new Anomalies(this);
    }

    /// <summary>Field number for the "axle" field.</summary>
    public const int AxleFieldNumber = 1;
    private int axle_;
    /// <summary>
    /// indicating axle, counting starts from front of vehicle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Axle {
      get { return axle_; }
      set {
        axle_ = value;
      }
    }

    /// <summary>Field number for the "side" field.</summary>
    public const int SideFieldNumber = 2;
    private global::Fmsitsinterface.Anomalies.Types.Side side_ = global::Fmsitsinterface.Anomalies.Types.Side.UnknownSide;
    /// <summary>
    /// indicating side of axle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.Anomalies.Types.Side Side {
      get { return side_; }
      set {
        side_ = value;
      }
    }

    /// <summary>Field number for the "measurement" field.</summary>
    public const int MeasurementFieldNumber = 3;
    private global::Fmsitsinterface.Anomalies.Types.TireStatus measurement_ = global::Fmsitsinterface.Anomalies.Types.TireStatus.UnknownStatus;
    /// <summary>
    /// indicating state of tire
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.Anomalies.Types.TireStatus Measurement {
      get { return measurement_; }
      set {
        measurement_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Anomalies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Anomalies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Axle != other.Axle) return false;
      if (Side != other.Side) return false;
      if (Measurement != other.Measurement) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Axle != 0) hash ^= Axle.GetHashCode();
      if (Side != global::Fmsitsinterface.Anomalies.Types.Side.UnknownSide) hash ^= Side.GetHashCode();
      if (Measurement != global::Fmsitsinterface.Anomalies.Types.TireStatus.UnknownStatus) hash ^= Measurement.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Axle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Axle);
      }
      if (Side != global::Fmsitsinterface.Anomalies.Types.Side.UnknownSide) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Side);
      }
      if (Measurement != global::Fmsitsinterface.Anomalies.Types.TireStatus.UnknownStatus) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Measurement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Axle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Axle);
      }
      if (Side != global::Fmsitsinterface.Anomalies.Types.Side.UnknownSide) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Side);
      }
      if (Measurement != global::Fmsitsinterface.Anomalies.Types.TireStatus.UnknownStatus) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Measurement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Axle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Axle);
      }
      if (Side != global::Fmsitsinterface.Anomalies.Types.Side.UnknownSide) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Side);
      }
      if (Measurement != global::Fmsitsinterface.Anomalies.Types.TireStatus.UnknownStatus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Measurement);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Anomalies other) {
      if (other == null) {
        return;
      }
      if (other.Axle != 0) {
        Axle = other.Axle;
      }
      if (other.Side != global::Fmsitsinterface.Anomalies.Types.Side.UnknownSide) {
        Side = other.Side;
      }
      if (other.Measurement != global::Fmsitsinterface.Anomalies.Types.TireStatus.UnknownStatus) {
        Measurement = other.Measurement;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Axle = input.ReadInt32();
            break;
          }
          case 16: {
            Side = (global::Fmsitsinterface.Anomalies.Types.Side) input.ReadEnum();
            break;
          }
          case 24: {
            Measurement = (global::Fmsitsinterface.Anomalies.Types.TireStatus) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Axle = input.ReadInt32();
            break;
          }
          case 16: {
            Side = (global::Fmsitsinterface.Anomalies.Types.Side) input.ReadEnum();
            break;
          }
          case 24: {
            Measurement = (global::Fmsitsinterface.Anomalies.Types.TireStatus) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Anomalies message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum Side {
        /// <summary>
        /// Unknown side
        /// </summary>
        [pbr::OriginalName("UNKNOWN_SIDE")] UnknownSide = 0,
        /// <summary>
        /// Left
        /// </summary>
        [pbr::OriginalName("LEFT")] Left = 1,
        /// <summary>
        /// Right
        /// </summary>
        [pbr::OriginalName("RIGHT")] Right = 2,
      }

      public enum TireStatus {
        /// <summary>
        /// Unknown measurement
        /// </summary>
        [pbr::OriginalName("UNKNOWN_STATUS")] UnknownStatus = 0,
        /// <summary>
        /// Flat
        /// </summary>
        [pbr::OriginalName("FLAT")] Flat = 1,
        /// <summary>
        /// Suspect
        /// </summary>
        [pbr::OriginalName("SUSPECT")] Suspect = 2,
      }

    }
    #endregion

  }

  public sealed partial class VehicleWeight : pb::IMessage<VehicleWeight>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VehicleWeight> _parser = new pb::MessageParser<VehicleWeight>(() => new VehicleWeight());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VehicleWeight> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehicleWeight() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehicleWeight(VehicleWeight other) : this() {
      axleCount_ = other.axleCount_;
      weightMeasurements_ = other.weightMeasurements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VehicleWeight Clone() {
      return new VehicleWeight(this);
    }

    /// <summary>Field number for the "axle_count" field.</summary>
    public const int AxleCountFieldNumber = 1;
    private int axleCount_;
    /// <summary>
    /// integer indicating total number of axles of the vehicle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AxleCount {
      get { return axleCount_; }
      set {
        axleCount_ = value;
      }
    }

    /// <summary>Field number for the "weight_measurements" field.</summary>
    public const int WeightMeasurementsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Fmsitsinterface.WeightMeasurements> _repeated_weightMeasurements_codec
        = pb::FieldCodec.ForMessage(18, global::Fmsitsinterface.WeightMeasurements.Parser);
    private readonly pbc::RepeatedField<global::Fmsitsinterface.WeightMeasurements> weightMeasurements_ = new pbc::RepeatedField<global::Fmsitsinterface.WeightMeasurements>();
    /// <summary>
    /// contains the weight measurements of the vehicle per axle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Fmsitsinterface.WeightMeasurements> WeightMeasurements {
      get { return weightMeasurements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VehicleWeight);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VehicleWeight other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AxleCount != other.AxleCount) return false;
      if(!weightMeasurements_.Equals(other.weightMeasurements_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AxleCount != 0) hash ^= AxleCount.GetHashCode();
      hash ^= weightMeasurements_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AxleCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AxleCount);
      }
      weightMeasurements_.WriteTo(output, _repeated_weightMeasurements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AxleCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AxleCount);
      }
      weightMeasurements_.WriteTo(ref output, _repeated_weightMeasurements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AxleCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AxleCount);
      }
      size += weightMeasurements_.CalculateSize(_repeated_weightMeasurements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VehicleWeight other) {
      if (other == null) {
        return;
      }
      if (other.AxleCount != 0) {
        AxleCount = other.AxleCount;
      }
      weightMeasurements_.Add(other.weightMeasurements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AxleCount = input.ReadInt32();
            break;
          }
          case 18: {
            weightMeasurements_.AddEntriesFrom(input, _repeated_weightMeasurements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AxleCount = input.ReadInt32();
            break;
          }
          case 18: {
            weightMeasurements_.AddEntriesFrom(ref input, _repeated_weightMeasurements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class WeightMeasurements : pb::IMessage<WeightMeasurements>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WeightMeasurements> _parser = new pb::MessageParser<WeightMeasurements>(() => new WeightMeasurements());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WeightMeasurements> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeightMeasurements() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeightMeasurements(WeightMeasurements other) : this() {
      axle_ = other.axle_;
      weight_ = other.weight_ != null ? other.weight_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WeightMeasurements Clone() {
      return new WeightMeasurements(this);
    }

    /// <summary>Field number for the "axle" field.</summary>
    public const int AxleFieldNumber = 1;
    private int axle_;
    /// <summary>
    /// indicating axle, counting starts from top of vehicle
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Axle {
      get { return axle_; }
      set {
        axle_ = value;
      }
    }

    /// <summary>Field number for the "weight" field.</summary>
    public const int WeightFieldNumber = 2;
    private global::Fmsitsinterface.MeasurementType weight_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementType Weight {
      get { return weight_; }
      set {
        weight_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WeightMeasurements);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WeightMeasurements other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Axle != other.Axle) return false;
      if (!object.Equals(Weight, other.Weight)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Axle != 0) hash ^= Axle.GetHashCode();
      if (weight_ != null) hash ^= Weight.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Axle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Axle);
      }
      if (weight_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Axle != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Axle);
      }
      if (weight_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Weight);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Axle != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Axle);
      }
      if (weight_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weight);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WeightMeasurements other) {
      if (other == null) {
        return;
      }
      if (other.Axle != 0) {
        Axle = other.Axle;
      }
      if (other.weight_ != null) {
        if (weight_ == null) {
          Weight = new global::Fmsitsinterface.MeasurementType();
        }
        Weight.MergeFrom(other.Weight);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Axle = input.ReadInt32();
            break;
          }
          case 18: {
            if (weight_ == null) {
              Weight = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(Weight);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Axle = input.ReadInt32();
            break;
          }
          case 18: {
            if (weight_ == null) {
              Weight = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(Weight);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DynamicEventMetadata : pb::IMessage<DynamicEventMetadata>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DynamicEventMetadata> _parser = new pb::MessageParser<DynamicEventMetadata>(() => new DynamicEventMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DynamicEventMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DynamicEventMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DynamicEventMetadata(DynamicEventMetadata other) : this() {
      eventSpeed_ = other.eventSpeed_ != null ? other.eventSpeed_.Clone() : null;
      eventHeading_ = other.eventHeading_ != null ? other.eventHeading_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DynamicEventMetadata Clone() {
      return new DynamicEventMetadata(this);
    }

    /// <summary>Field number for the "event_speed" field.</summary>
    public const int EventSpeedFieldNumber = 1;
    private global::Fmsitsinterface.MeasurementType eventSpeed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementType EventSpeed {
      get { return eventSpeed_; }
      set {
        eventSpeed_ = value;
      }
    }

    /// <summary>Field number for the "event_heading" field.</summary>
    public const int EventHeadingFieldNumber = 2;
    private global::Fmsitsinterface.MeasurementType eventHeading_;
    /// <summary>
    /// Heading of dynamic event in degrees
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementType EventHeading {
      get { return eventHeading_; }
      set {
        eventHeading_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DynamicEventMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DynamicEventMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventSpeed, other.EventSpeed)) return false;
      if (!object.Equals(EventHeading, other.EventHeading)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (eventSpeed_ != null) hash ^= EventSpeed.GetHashCode();
      if (eventHeading_ != null) hash ^= EventHeading.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventSpeed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventSpeed);
      }
      if (eventHeading_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventHeading);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventSpeed_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventSpeed);
      }
      if (eventHeading_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventHeading);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (eventSpeed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventSpeed);
      }
      if (eventHeading_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventHeading);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DynamicEventMetadata other) {
      if (other == null) {
        return;
      }
      if (other.eventSpeed_ != null) {
        if (eventSpeed_ == null) {
          EventSpeed = new global::Fmsitsinterface.MeasurementType();
        }
        EventSpeed.MergeFrom(other.EventSpeed);
      }
      if (other.eventHeading_ != null) {
        if (eventHeading_ == null) {
          EventHeading = new global::Fmsitsinterface.MeasurementType();
        }
        EventHeading.MergeFrom(other.EventHeading);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventSpeed_ == null) {
              EventSpeed = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(EventSpeed);
            break;
          }
          case 18: {
            if (eventHeading_ == null) {
              EventHeading = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(EventHeading);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventSpeed_ == null) {
              EventSpeed = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(EventSpeed);
            break;
          }
          case 18: {
            if (eventHeading_ == null) {
              EventHeading = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(EventHeading);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message adapted from Open Trip Model (OTM v5)
  /// License plate information is omitted for privacy reasons
  /// https://otm5.opentripmodel.org/
  /// </summary>
  public sealed partial class LocationUpdateEvent : pb::IMessage<LocationUpdateEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LocationUpdateEvent> _parser = new pb::MessageParser<LocationUpdateEvent>(() => new LocationUpdateEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LocationUpdateEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Fmsitsinterface.FMSITSInterfaceSpecificationReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationUpdateEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationUpdateEvent(LocationUpdateEvent other) : this() {
      id_ = other.id_;
      creationDate_ = other.creationDate_ != null ? other.creationDate_.Clone() : null;
      geoReference_ = other.geoReference_ != null ? other.geoReference_.Clone() : null;
      speed_ = other.speed_ != null ? other.speed_.Clone() : null;
      heading_ = other.heading_ != null ? other.heading_.Clone() : null;
      lifecycle_ = other.lifecycle_;
      deviceDate_ = other.deviceDate_ != null ? other.deviceDate_.Clone() : null;
      gpsQuality_ = other.gpsQuality_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LocationUpdateEvent Clone() {
      return new LocationUpdateEvent(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Uniquely identifies this locationUpdateEvent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creation_date" field.</summary>
    public const int CreationDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp creationDate_;
    /// <summary>
    /// should contain the timestamp of the GPS fix in UTC
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreationDate {
      get { return creationDate_; }
      set {
        creationDate_ = value;
      }
    }

    /// <summary>Field number for the "geo_reference" field.</summary>
    public const int GeoReferenceFieldNumber = 3;
    private global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReference geoReference_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReference GeoReference {
      get { return geoReference_; }
      set {
        geoReference_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 4;
    private global::Fmsitsinterface.MeasurementType speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementType Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "heading" field.</summary>
    public const int HeadingFieldNumber = 5;
    private global::Fmsitsinterface.MeasurementType heading_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.MeasurementType Heading {
      get { return heading_; }
      set {
        heading_ = value;
      }
    }

    /// <summary>Field number for the "lifecycle" field.</summary>
    public const int LifecycleFieldNumber = 6;
    private global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle lifecycle_ = global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle.Unknown;
    /// <summary>
    /// when is the action taking place. Only actual updates are allowed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle Lifecycle {
      get { return lifecycle_; }
      set {
        lifecycle_ = value;
      }
    }

    /// <summary>Field number for the "device_date" field.</summary>
    public const int DeviceDateFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deviceDate_;
    /// <summary>
    /// optional timestamp when the position update was received on the FMS device and can be used when the GPS fix seems to be far of the NTP time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeviceDate {
      get { return deviceDate_; }
      set {
        deviceDate_ = value;
      }
    }

    /// <summary>Field number for the "gps_quality" field.</summary>
    public const int GpsQualityFieldNumber = 8;
    private float gpsQuality_;
    /// <summary>
    /// deviation in meters with 95% probability
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GpsQuality {
      get { return gpsQuality_; }
      set {
        gpsQuality_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LocationUpdateEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LocationUpdateEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(CreationDate, other.CreationDate)) return false;
      if (!object.Equals(GeoReference, other.GeoReference)) return false;
      if (!object.Equals(Speed, other.Speed)) return false;
      if (!object.Equals(Heading, other.Heading)) return false;
      if (Lifecycle != other.Lifecycle) return false;
      if (!object.Equals(DeviceDate, other.DeviceDate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GpsQuality, other.GpsQuality)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (creationDate_ != null) hash ^= CreationDate.GetHashCode();
      if (geoReference_ != null) hash ^= GeoReference.GetHashCode();
      if (speed_ != null) hash ^= Speed.GetHashCode();
      if (heading_ != null) hash ^= Heading.GetHashCode();
      if (Lifecycle != global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle.Unknown) hash ^= Lifecycle.GetHashCode();
      if (deviceDate_ != null) hash ^= DeviceDate.GetHashCode();
      if (GpsQuality != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GpsQuality);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (creationDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreationDate);
      }
      if (geoReference_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GeoReference);
      }
      if (speed_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Speed);
      }
      if (heading_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Heading);
      }
      if (Lifecycle != global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Lifecycle);
      }
      if (deviceDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceDate);
      }
      if (GpsQuality != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(GpsQuality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (creationDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreationDate);
      }
      if (geoReference_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GeoReference);
      }
      if (speed_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Speed);
      }
      if (heading_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Heading);
      }
      if (Lifecycle != global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle.Unknown) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Lifecycle);
      }
      if (deviceDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DeviceDate);
      }
      if (GpsQuality != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(GpsQuality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (creationDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreationDate);
      }
      if (geoReference_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeoReference);
      }
      if (speed_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Speed);
      }
      if (heading_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Heading);
      }
      if (Lifecycle != global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Lifecycle);
      }
      if (deviceDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceDate);
      }
      if (GpsQuality != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LocationUpdateEvent other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.creationDate_ != null) {
        if (creationDate_ == null) {
          CreationDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreationDate.MergeFrom(other.CreationDate);
      }
      if (other.geoReference_ != null) {
        if (geoReference_ == null) {
          GeoReference = new global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReference();
        }
        GeoReference.MergeFrom(other.GeoReference);
      }
      if (other.speed_ != null) {
        if (speed_ == null) {
          Speed = new global::Fmsitsinterface.MeasurementType();
        }
        Speed.MergeFrom(other.Speed);
      }
      if (other.heading_ != null) {
        if (heading_ == null) {
          Heading = new global::Fmsitsinterface.MeasurementType();
        }
        Heading.MergeFrom(other.Heading);
      }
      if (other.Lifecycle != global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle.Unknown) {
        Lifecycle = other.Lifecycle;
      }
      if (other.deviceDate_ != null) {
        if (deviceDate_ == null) {
          DeviceDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeviceDate.MergeFrom(other.DeviceDate);
      }
      if (other.GpsQuality != 0F) {
        GpsQuality = other.GpsQuality;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (creationDate_ == null) {
              CreationDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationDate);
            break;
          }
          case 26: {
            if (geoReference_ == null) {
              GeoReference = new global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReference();
            }
            input.ReadMessage(GeoReference);
            break;
          }
          case 34: {
            if (speed_ == null) {
              Speed = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(Speed);
            break;
          }
          case 42: {
            if (heading_ == null) {
              Heading = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(Heading);
            break;
          }
          case 48: {
            Lifecycle = (global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle) input.ReadEnum();
            break;
          }
          case 58: {
            if (deviceDate_ == null) {
              DeviceDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeviceDate);
            break;
          }
          case 69: {
            GpsQuality = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (creationDate_ == null) {
              CreationDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationDate);
            break;
          }
          case 26: {
            if (geoReference_ == null) {
              GeoReference = new global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReference();
            }
            input.ReadMessage(GeoReference);
            break;
          }
          case 34: {
            if (speed_ == null) {
              Speed = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(Speed);
            break;
          }
          case 42: {
            if (heading_ == null) {
              Heading = new global::Fmsitsinterface.MeasurementType();
            }
            input.ReadMessage(Heading);
            break;
          }
          case 48: {
            Lifecycle = (global::Fmsitsinterface.LocationUpdateEvent.Types.LifeCycle) input.ReadEnum();
            break;
          }
          case 58: {
            if (deviceDate_ == null) {
              DeviceDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeviceDate);
            break;
          }
          case 69: {
            GpsQuality = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the LocationUpdateEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public enum GeoReferenceType {
        [pbr::OriginalName("GEOREFERENCETYPE_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// only lat/lon positions are allowed in this interface, other OTM references are excluded
        /// </summary>
        [pbr::OriginalName("LAT_LON_POINT_GEO_REFERENCE")] LatLonPointGeoReference = 1,
      }

      public enum LifeCycle {
        [pbr::OriginalName("LIFECYCLE_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// in this interface only actual updates are allowed
        /// </summary>
        [pbr::OriginalName("ACTUAL")] Actual = 1,
      }

      public sealed partial class GeoReference : pb::IMessage<GeoReference>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<GeoReference> _parser = new pb::MessageParser<GeoReference>(() => new GeoReference());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<GeoReference> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Fmsitsinterface.LocationUpdateEvent.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GeoReference() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GeoReference(GeoReference other) : this() {
          lat_ = other.lat_;
          lon_ = other.lon_;
          type_ = other.type_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public GeoReference Clone() {
          return new GeoReference(this);
        }

        /// <summary>Field number for the "lat" field.</summary>
        public const int LatFieldNumber = 1;
        private double lat_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Lat {
          get { return lat_; }
          set {
            lat_ = value;
          }
        }

        /// <summary>Field number for the "lon" field.</summary>
        public const int LonFieldNumber = 2;
        private double lon_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public double Lon {
          get { return lon_; }
          set {
            lon_ = value;
          }
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 3;
        private global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType type_ = global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as GeoReference);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(GeoReference other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lat, other.Lat)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Lon, other.Lon)) return false;
          if (Type != other.Type) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (Lat != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lat);
          if (Lon != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Lon);
          if (Type != global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType.Unknown) hash ^= Type.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Lat != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Lat);
          }
          if (Lon != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Lon);
          }
          if (Type != global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType.Unknown) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Lat != 0D) {
            output.WriteRawTag(9);
            output.WriteDouble(Lat);
          }
          if (Lon != 0D) {
            output.WriteRawTag(17);
            output.WriteDouble(Lon);
          }
          if (Type != global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType.Unknown) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Type);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (Lat != 0D) {
            size += 1 + 8;
          }
          if (Lon != 0D) {
            size += 1 + 8;
          }
          if (Type != global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(GeoReference other) {
          if (other == null) {
            return;
          }
          if (other.Lat != 0D) {
            Lat = other.Lat;
          }
          if (other.Lon != 0D) {
            Lon = other.Lon;
          }
          if (other.Type != global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType.Unknown) {
            Type = other.Type;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 9: {
                Lat = input.ReadDouble();
                break;
              }
              case 17: {
                Lon = input.ReadDouble();
                break;
              }
              case 24: {
                Type = (global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 9: {
                Lat = input.ReadDouble();
                break;
              }
              case 17: {
                Lon = input.ReadDouble();
                break;
              }
              case 24: {
                Type = (global::Fmsitsinterface.LocationUpdateEvent.Types.GeoReferenceType) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
