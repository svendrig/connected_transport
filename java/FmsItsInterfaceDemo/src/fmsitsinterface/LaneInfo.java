// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMS_ITS_Interface_Specification.proto

package fmsitsinterface;

/**
 * Protobuf type {@code fmsitsinterface.LaneInfo}
 */
public final class LaneInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:fmsitsinterface.LaneInfo)
    LaneInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use LaneInfo.newBuilder() to construct.
  private LaneInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private LaneInfo() {
    maneuvers_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new LaneInfo();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_LaneInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_LaneInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            fmsitsinterface.LaneInfo.class, fmsitsinterface.LaneInfo.Builder.class);
  }

  public static final int MAX_LANE_ID_FIELD_NUMBER = 1;
  private int maxLaneId_ = 0;
  /**
   * <pre>
   * total number of lanes at event location, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
   * </pre>
   *
   * <code>int32 max_lane_id = 1;</code>
   * @return The maxLaneId.
   */
  @java.lang.Override
  public int getMaxLaneId() {
    return maxLaneId_;
  }

  public static final int LANE_ID_FIELD_NUMBER = 2;
  private int laneId_ = 0;
  /**
   * <pre>
   * indicating the lane at which the event occurs (counting from left to right, starting at 1 till max_lane_id), its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
   * </pre>
   *
   * <code>int32 lane_id = 2;</code>
   * @return The laneId.
   */
  @java.lang.Override
  public int getLaneId() {
    return laneId_;
  }

  public static final int MANEUVERS_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<fmsitsinterface.Maneuver> maneuvers_;
  /**
   * <pre>
   * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
   */
  @java.lang.Override
  public java.util.List<fmsitsinterface.Maneuver> getManeuversList() {
    return maneuvers_;
  }
  /**
   * <pre>
   * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends fmsitsinterface.ManeuverOrBuilder> 
      getManeuversOrBuilderList() {
    return maneuvers_;
  }
  /**
   * <pre>
   * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
   */
  @java.lang.Override
  public int getManeuversCount() {
    return maneuvers_.size();
  }
  /**
   * <pre>
   * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
   */
  @java.lang.Override
  public fmsitsinterface.Maneuver getManeuvers(int index) {
    return maneuvers_.get(index);
  }
  /**
   * <pre>
   * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
   */
  @java.lang.Override
  public fmsitsinterface.ManeuverOrBuilder getManeuversOrBuilder(
      int index) {
    return maneuvers_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (maxLaneId_ != 0) {
      output.writeInt32(1, maxLaneId_);
    }
    if (laneId_ != 0) {
      output.writeInt32(2, laneId_);
    }
    for (int i = 0; i < maneuvers_.size(); i++) {
      output.writeMessage(3, maneuvers_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (maxLaneId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, maxLaneId_);
    }
    if (laneId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, laneId_);
    }
    for (int i = 0; i < maneuvers_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, maneuvers_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof fmsitsinterface.LaneInfo)) {
      return super.equals(obj);
    }
    fmsitsinterface.LaneInfo other = (fmsitsinterface.LaneInfo) obj;

    if (getMaxLaneId()
        != other.getMaxLaneId()) return false;
    if (getLaneId()
        != other.getLaneId()) return false;
    if (!getManeuversList()
        .equals(other.getManeuversList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MAX_LANE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getMaxLaneId();
    hash = (37 * hash) + LANE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getLaneId();
    if (getManeuversCount() > 0) {
      hash = (37 * hash) + MANEUVERS_FIELD_NUMBER;
      hash = (53 * hash) + getManeuversList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static fmsitsinterface.LaneInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.LaneInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.LaneInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.LaneInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.LaneInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.LaneInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.LaneInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.LaneInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static fmsitsinterface.LaneInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static fmsitsinterface.LaneInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static fmsitsinterface.LaneInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.LaneInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(fmsitsinterface.LaneInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code fmsitsinterface.LaneInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fmsitsinterface.LaneInfo)
      fmsitsinterface.LaneInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_LaneInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_LaneInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fmsitsinterface.LaneInfo.class, fmsitsinterface.LaneInfo.Builder.class);
    }

    // Construct using fmsitsinterface.LaneInfo.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      maxLaneId_ = 0;
      laneId_ = 0;
      if (maneuversBuilder_ == null) {
        maneuvers_ = java.util.Collections.emptyList();
      } else {
        maneuvers_ = null;
        maneuversBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_LaneInfo_descriptor;
    }

    @java.lang.Override
    public fmsitsinterface.LaneInfo getDefaultInstanceForType() {
      return fmsitsinterface.LaneInfo.getDefaultInstance();
    }

    @java.lang.Override
    public fmsitsinterface.LaneInfo build() {
      fmsitsinterface.LaneInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public fmsitsinterface.LaneInfo buildPartial() {
      fmsitsinterface.LaneInfo result = new fmsitsinterface.LaneInfo(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(fmsitsinterface.LaneInfo result) {
      if (maneuversBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          maneuvers_ = java.util.Collections.unmodifiableList(maneuvers_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.maneuvers_ = maneuvers_;
      } else {
        result.maneuvers_ = maneuversBuilder_.build();
      }
    }

    private void buildPartial0(fmsitsinterface.LaneInfo result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.maxLaneId_ = maxLaneId_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.laneId_ = laneId_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof fmsitsinterface.LaneInfo) {
        return mergeFrom((fmsitsinterface.LaneInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(fmsitsinterface.LaneInfo other) {
      if (other == fmsitsinterface.LaneInfo.getDefaultInstance()) return this;
      if (other.getMaxLaneId() != 0) {
        setMaxLaneId(other.getMaxLaneId());
      }
      if (other.getLaneId() != 0) {
        setLaneId(other.getLaneId());
      }
      if (maneuversBuilder_ == null) {
        if (!other.maneuvers_.isEmpty()) {
          if (maneuvers_.isEmpty()) {
            maneuvers_ = other.maneuvers_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureManeuversIsMutable();
            maneuvers_.addAll(other.maneuvers_);
          }
          onChanged();
        }
      } else {
        if (!other.maneuvers_.isEmpty()) {
          if (maneuversBuilder_.isEmpty()) {
            maneuversBuilder_.dispose();
            maneuversBuilder_ = null;
            maneuvers_ = other.maneuvers_;
            bitField0_ = (bitField0_ & ~0x00000004);
            maneuversBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getManeuversFieldBuilder() : null;
          } else {
            maneuversBuilder_.addAllMessages(other.maneuvers_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              maxLaneId_ = input.readInt32();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              laneId_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              fmsitsinterface.Maneuver m =
                  input.readMessage(
                      fmsitsinterface.Maneuver.parser(),
                      extensionRegistry);
              if (maneuversBuilder_ == null) {
                ensureManeuversIsMutable();
                maneuvers_.add(m);
              } else {
                maneuversBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int maxLaneId_ ;
    /**
     * <pre>
     * total number of lanes at event location, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>int32 max_lane_id = 1;</code>
     * @return The maxLaneId.
     */
    @java.lang.Override
    public int getMaxLaneId() {
      return maxLaneId_;
    }
    /**
     * <pre>
     * total number of lanes at event location, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>int32 max_lane_id = 1;</code>
     * @param value The maxLaneId to set.
     * @return This builder for chaining.
     */
    public Builder setMaxLaneId(int value) {

      maxLaneId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * total number of lanes at event location, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>int32 max_lane_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxLaneId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      maxLaneId_ = 0;
      onChanged();
      return this;
    }

    private int laneId_ ;
    /**
     * <pre>
     * indicating the lane at which the event occurs (counting from left to right, starting at 1 till max_lane_id), its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>int32 lane_id = 2;</code>
     * @return The laneId.
     */
    @java.lang.Override
    public int getLaneId() {
      return laneId_;
    }
    /**
     * <pre>
     * indicating the lane at which the event occurs (counting from left to right, starting at 1 till max_lane_id), its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>int32 lane_id = 2;</code>
     * @param value The laneId to set.
     * @return This builder for chaining.
     */
    public Builder setLaneId(int value) {

      laneId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indicating the lane at which the event occurs (counting from left to right, starting at 1 till max_lane_id), its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>int32 lane_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearLaneId() {
      bitField0_ = (bitField0_ & ~0x00000002);
      laneId_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<fmsitsinterface.Maneuver> maneuvers_ =
      java.util.Collections.emptyList();
    private void ensureManeuversIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        maneuvers_ = new java.util.ArrayList<fmsitsinterface.Maneuver>(maneuvers_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        fmsitsinterface.Maneuver, fmsitsinterface.Maneuver.Builder, fmsitsinterface.ManeuverOrBuilder> maneuversBuilder_;

    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public java.util.List<fmsitsinterface.Maneuver> getManeuversList() {
      if (maneuversBuilder_ == null) {
        return java.util.Collections.unmodifiableList(maneuvers_);
      } else {
        return maneuversBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public int getManeuversCount() {
      if (maneuversBuilder_ == null) {
        return maneuvers_.size();
      } else {
        return maneuversBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public fmsitsinterface.Maneuver getManeuvers(int index) {
      if (maneuversBuilder_ == null) {
        return maneuvers_.get(index);
      } else {
        return maneuversBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder setManeuvers(
        int index, fmsitsinterface.Maneuver value) {
      if (maneuversBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureManeuversIsMutable();
        maneuvers_.set(index, value);
        onChanged();
      } else {
        maneuversBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder setManeuvers(
        int index, fmsitsinterface.Maneuver.Builder builderForValue) {
      if (maneuversBuilder_ == null) {
        ensureManeuversIsMutable();
        maneuvers_.set(index, builderForValue.build());
        onChanged();
      } else {
        maneuversBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder addManeuvers(fmsitsinterface.Maneuver value) {
      if (maneuversBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureManeuversIsMutable();
        maneuvers_.add(value);
        onChanged();
      } else {
        maneuversBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder addManeuvers(
        int index, fmsitsinterface.Maneuver value) {
      if (maneuversBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureManeuversIsMutable();
        maneuvers_.add(index, value);
        onChanged();
      } else {
        maneuversBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder addManeuvers(
        fmsitsinterface.Maneuver.Builder builderForValue) {
      if (maneuversBuilder_ == null) {
        ensureManeuversIsMutable();
        maneuvers_.add(builderForValue.build());
        onChanged();
      } else {
        maneuversBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder addManeuvers(
        int index, fmsitsinterface.Maneuver.Builder builderForValue) {
      if (maneuversBuilder_ == null) {
        ensureManeuversIsMutable();
        maneuvers_.add(index, builderForValue.build());
        onChanged();
      } else {
        maneuversBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder addAllManeuvers(
        java.lang.Iterable<? extends fmsitsinterface.Maneuver> values) {
      if (maneuversBuilder_ == null) {
        ensureManeuversIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, maneuvers_);
        onChanged();
      } else {
        maneuversBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder clearManeuvers() {
      if (maneuversBuilder_ == null) {
        maneuvers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        maneuversBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public Builder removeManeuvers(int index) {
      if (maneuversBuilder_ == null) {
        ensureManeuversIsMutable();
        maneuvers_.remove(index);
        onChanged();
      } else {
        maneuversBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public fmsitsinterface.Maneuver.Builder getManeuversBuilder(
        int index) {
      return getManeuversFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public fmsitsinterface.ManeuverOrBuilder getManeuversOrBuilder(
        int index) {
      if (maneuversBuilder_ == null) {
        return maneuvers_.get(index);  } else {
        return maneuversBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public java.util.List<? extends fmsitsinterface.ManeuverOrBuilder> 
         getManeuversOrBuilderList() {
      if (maneuversBuilder_ != null) {
        return maneuversBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(maneuvers_);
      }
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public fmsitsinterface.Maneuver.Builder addManeuversBuilder() {
      return getManeuversFieldBuilder().addBuilder(
          fmsitsinterface.Maneuver.getDefaultInstance());
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public fmsitsinterface.Maneuver.Builder addManeuversBuilder(
        int index) {
      return getManeuversFieldBuilder().addBuilder(
          index, fmsitsinterface.Maneuver.getDefaultInstance());
    }
    /**
     * <pre>
     * The different maneuvers for which this traffic light gives info, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Maneuver maneuvers = 3;</code>
     */
    public java.util.List<fmsitsinterface.Maneuver.Builder> 
         getManeuversBuilderList() {
      return getManeuversFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        fmsitsinterface.Maneuver, fmsitsinterface.Maneuver.Builder, fmsitsinterface.ManeuverOrBuilder> 
        getManeuversFieldBuilder() {
      if (maneuversBuilder_ == null) {
        maneuversBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            fmsitsinterface.Maneuver, fmsitsinterface.Maneuver.Builder, fmsitsinterface.ManeuverOrBuilder>(
                maneuvers_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        maneuvers_ = null;
      }
      return maneuversBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:fmsitsinterface.LaneInfo)
  }

  // @@protoc_insertion_point(class_scope:fmsitsinterface.LaneInfo)
  private static final fmsitsinterface.LaneInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new fmsitsinterface.LaneInfo();
  }

  public static fmsitsinterface.LaneInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LaneInfo>
      PARSER = new com.google.protobuf.AbstractParser<LaneInfo>() {
    @java.lang.Override
    public LaneInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<LaneInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LaneInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public fmsitsinterface.LaneInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

