// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMS_ITS_Interface_Specification.proto

package fmsitsinterface;

public interface ManeuverOrBuilder extends
    // @@protoc_insertion_point(interface_extends:fmsitsinterface.Maneuver)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * the list contains integers indicating the possible directions from the traffic light
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver.Direction direction = 1;</code>
   * @return A list containing the direction.
   */
  java.util.List<fmsitsinterface.Maneuver.Direction> getDirectionList();
  /**
   * <pre>
   * the list contains integers indicating the possible directions from the traffic light
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver.Direction direction = 1;</code>
   * @return The count of direction.
   */
  int getDirectionCount();
  /**
   * <pre>
   * the list contains integers indicating the possible directions from the traffic light
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver.Direction direction = 1;</code>
   * @param index The index of the element to return.
   * @return The direction at the given index.
   */
  fmsitsinterface.Maneuver.Direction getDirection(int index);
  /**
   * <pre>
   * the list contains integers indicating the possible directions from the traffic light
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver.Direction direction = 1;</code>
   * @return A list containing the enum numeric values on the wire for direction.
   */
  java.util.List<java.lang.Integer>
  getDirectionValueList();
  /**
   * <pre>
   * the list contains integers indicating the possible directions from the traffic light
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Maneuver.Direction direction = 1;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of direction at the given index.
   */
  int getDirectionValue(int index);

  /**
   * <pre>
   * boolean value indicating whether the road user should always give priority to intersecting traffic (cfr. orange flashing light)
   * </pre>
   *
   * <code>bool always_yield = 2;</code>
   * @return The alwaysYield.
   */
  boolean getAlwaysYield();
}
