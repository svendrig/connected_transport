// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMS_ITS_Interface_Specification.proto

package fmsitsinterface;

/**
 * Protobuf type {@code fmsitsinterface.RoadConfiguration}
 */
public final class RoadConfiguration extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:fmsitsinterface.RoadConfiguration)
    RoadConfigurationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RoadConfiguration.newBuilder() to construct.
  private RoadConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RoadConfiguration() {
    roadConfigStatus_ = 0;
    roadConfigLocation_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new RoadConfiguration();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_RoadConfiguration_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_RoadConfiguration_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            fmsitsinterface.RoadConfiguration.class, fmsitsinterface.RoadConfiguration.Builder.class);
  }

  /**
   * Protobuf enum {@code fmsitsinterface.RoadConfiguration.RoadConfigStatus}
   */
  public enum RoadConfigStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown Status
     * </pre>
     *
     * <code>UNKNOWN_ROAD_CONFIG_STATUS = 0;</code>
     */
    UNKNOWN_ROAD_CONFIG_STATUS(0, 0),
    /**
     * <pre>
     * Open: 'falling' green arrow
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    OPEN(1, 1),
    /**
     * <pre>
     * Closed for all traffic: red cross 
     * </pre>
     *
     * <code>CLOSED = 2;</code>
     */
    CLOSED(2, 2),
    /**
     * <pre>
     * verdrijfpijl naar rechts
     * </pre>
     *
     * <code>MERGE_RIGHT = 3;</code>
     */
    MERGE_RIGHT(4, 3),
    /**
     * <pre>
     * verdrijfpijl naar links
     * </pre>
     *
     * <code>MERGE_LEFT = 4;</code>
     */
    MERGE_LEFT(5, 4),
    /**
     * <pre>
     * verkeersbord F08
     * </pre>
     *
     * <code>END_OF_RESTRICTIONS = 5;</code>
     */
    END_OF_RESTRICTIONS(6, 5),
    /**
     * <pre>
     * You cannot use this lane for your type of vehicle
     * </pre>
     *
     * <code>CLOSED_FOR_YOU = 6;</code>
     */
    CLOSED_FOR_YOU(7, 6),
    /**
     * <pre>
     * temporary change of the maximum speed (matrixborden)
     * </pre>
     *
     * <code>CHANGED_MAX_SPEED = 7;</code>
     */
    CHANGED_MAX_SPEED(8, 7),
    /**
     * <pre>
     * Variable message sign is blank / turned off
     * </pre>
     *
     * <code>BLANK = 8;</code>
     */
    BLANK(9, 8),
    UNRECOGNIZED(-1, -1),
    ;

    /**
     * <pre>
     * Closed for all traffic
     * </pre>
     *
     * <code>CLOSED_FOR_ALL_TRAFFIC = 2;</code>
     */
    public static final RoadConfigStatus CLOSED_FOR_ALL_TRAFFIC = CLOSED;
    /**
     * <pre>
     * Unknown Status
     * </pre>
     *
     * <code>UNKNOWN_ROAD_CONFIG_STATUS = 0;</code>
     */
    public static final int UNKNOWN_ROAD_CONFIG_STATUS_VALUE = 0;
    /**
     * <pre>
     * Open: 'falling' green arrow
     * </pre>
     *
     * <code>OPEN = 1;</code>
     */
    public static final int OPEN_VALUE = 1;
    /**
     * <pre>
     * Closed for all traffic: red cross 
     * </pre>
     *
     * <code>CLOSED = 2;</code>
     */
    public static final int CLOSED_VALUE = 2;
    /**
     * <pre>
     * Closed for all traffic
     * </pre>
     *
     * <code>CLOSED_FOR_ALL_TRAFFIC = 2;</code>
     */
    public static final int CLOSED_FOR_ALL_TRAFFIC_VALUE = 2;
    /**
     * <pre>
     * verdrijfpijl naar rechts
     * </pre>
     *
     * <code>MERGE_RIGHT = 3;</code>
     */
    public static final int MERGE_RIGHT_VALUE = 3;
    /**
     * <pre>
     * verdrijfpijl naar links
     * </pre>
     *
     * <code>MERGE_LEFT = 4;</code>
     */
    public static final int MERGE_LEFT_VALUE = 4;
    /**
     * <pre>
     * verkeersbord F08
     * </pre>
     *
     * <code>END_OF_RESTRICTIONS = 5;</code>
     */
    public static final int END_OF_RESTRICTIONS_VALUE = 5;
    /**
     * <pre>
     * You cannot use this lane for your type of vehicle
     * </pre>
     *
     * <code>CLOSED_FOR_YOU = 6;</code>
     */
    public static final int CLOSED_FOR_YOU_VALUE = 6;
    /**
     * <pre>
     * temporary change of the maximum speed (matrixborden)
     * </pre>
     *
     * <code>CHANGED_MAX_SPEED = 7;</code>
     */
    public static final int CHANGED_MAX_SPEED_VALUE = 7;
    /**
     * <pre>
     * Variable message sign is blank / turned off
     * </pre>
     *
     * <code>BLANK = 8;</code>
     */
    public static final int BLANK_VALUE = 8;


    public final int getNumber() {
      if (index == -1) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RoadConfigStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoadConfigStatus forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ROAD_CONFIG_STATUS;
        case 1: return OPEN;
        case 2: return CLOSED;
        case 3: return MERGE_RIGHT;
        case 4: return MERGE_LEFT;
        case 5: return END_OF_RESTRICTIONS;
        case 6: return CLOSED_FOR_YOU;
        case 7: return CHANGED_MAX_SPEED;
        case 8: return BLANK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoadConfigStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoadConfigStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoadConfigStatus>() {
            public RoadConfigStatus findValueByNumber(int number) {
              return RoadConfigStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (index == -1) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return fmsitsinterface.RoadConfiguration.getDescriptor().getEnumTypes().get(0);
    }

    private static final RoadConfigStatus[] VALUES = getStaticValuesArray();
    private static RoadConfigStatus[] getStaticValuesArray() {
      return new RoadConfigStatus[] {
      UNKNOWN_ROAD_CONFIG_STATUS, OPEN, CLOSED, CLOSED_FOR_ALL_TRAFFIC, MERGE_RIGHT, MERGE_LEFT, END_OF_RESTRICTIONS, CLOSED_FOR_YOU, CHANGED_MAX_SPEED, BLANK, 
      };
    }
    public static RoadConfigStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private RoadConfigStatus(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fmsitsinterface.RoadConfiguration.RoadConfigStatus)
  }

  /**
   * Protobuf enum {@code fmsitsinterface.RoadConfiguration.RoadConfigLocation}
   */
  public enum RoadConfigLocation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UNKNOWN_LOCATION = 0;</code>
     */
    UNKNOWN_LOCATION(0),
    /**
     * <pre>
     * object located downstream relative to the vehicle
     * </pre>
     *
     * <code>LOCATION_DOWNSTREAM = 1;</code>
     */
    LOCATION_DOWNSTREAM(1),
    /**
     * <pre>
     * object located upstream relative to the vehicle
     * </pre>
     *
     * <code>LOCATION_UPSTREAM = 2;</code>
     */
    LOCATION_UPSTREAM(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>UNKNOWN_LOCATION = 0;</code>
     */
    public static final int UNKNOWN_LOCATION_VALUE = 0;
    /**
     * <pre>
     * object located downstream relative to the vehicle
     * </pre>
     *
     * <code>LOCATION_DOWNSTREAM = 1;</code>
     */
    public static final int LOCATION_DOWNSTREAM_VALUE = 1;
    /**
     * <pre>
     * object located upstream relative to the vehicle
     * </pre>
     *
     * <code>LOCATION_UPSTREAM = 2;</code>
     */
    public static final int LOCATION_UPSTREAM_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static RoadConfigLocation valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RoadConfigLocation forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_LOCATION;
        case 1: return LOCATION_DOWNSTREAM;
        case 2: return LOCATION_UPSTREAM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RoadConfigLocation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RoadConfigLocation> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RoadConfigLocation>() {
            public RoadConfigLocation findValueByNumber(int number) {
              return RoadConfigLocation.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return fmsitsinterface.RoadConfiguration.getDescriptor().getEnumTypes().get(1);
    }

    private static final RoadConfigLocation[] VALUES = values();

    public static RoadConfigLocation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RoadConfigLocation(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fmsitsinterface.RoadConfiguration.RoadConfigLocation)
  }

  public static final int ROAD_CONFIG_STATUS_FIELD_NUMBER = 1;
  private int roadConfigStatus_ = 0;
  /**
   * <pre>
   * Status indicates state of lane defined in container laneInfo
   * </pre>
   *
   * <code>.fmsitsinterface.RoadConfiguration.RoadConfigStatus road_config_status = 1;</code>
   * @return The enum numeric value on the wire for roadConfigStatus.
   */
  @java.lang.Override public int getRoadConfigStatusValue() {
    return roadConfigStatus_;
  }
  /**
   * <pre>
   * Status indicates state of lane defined in container laneInfo
   * </pre>
   *
   * <code>.fmsitsinterface.RoadConfiguration.RoadConfigStatus road_config_status = 1;</code>
   * @return The roadConfigStatus.
   */
  @java.lang.Override public fmsitsinterface.RoadConfiguration.RoadConfigStatus getRoadConfigStatus() {
    fmsitsinterface.RoadConfiguration.RoadConfigStatus result = fmsitsinterface.RoadConfiguration.RoadConfigStatus.forNumber(roadConfigStatus_);
    return result == null ? fmsitsinterface.RoadConfiguration.RoadConfigStatus.UNRECOGNIZED : result;
  }

  public static final int MAX_SPEED_FIELD_NUMBER = 2;
  private fmsitsinterface.MeasurementType maxSpeed_;
  /**
   * <pre>
   * optional field in case the status is CHANGED_MAX_SPEED
   * </pre>
   *
   * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
   * @return Whether the maxSpeed field is set.
   */
  @java.lang.Override
  public boolean hasMaxSpeed() {
    return maxSpeed_ != null;
  }
  /**
   * <pre>
   * optional field in case the status is CHANGED_MAX_SPEED
   * </pre>
   *
   * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
   * @return The maxSpeed.
   */
  @java.lang.Override
  public fmsitsinterface.MeasurementType getMaxSpeed() {
    return maxSpeed_ == null ? fmsitsinterface.MeasurementType.getDefaultInstance() : maxSpeed_;
  }
  /**
   * <pre>
   * optional field in case the status is CHANGED_MAX_SPEED
   * </pre>
   *
   * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
   */
  @java.lang.Override
  public fmsitsinterface.MeasurementTypeOrBuilder getMaxSpeedOrBuilder() {
    return maxSpeed_ == null ? fmsitsinterface.MeasurementType.getDefaultInstance() : maxSpeed_;
  }

  public static final int ROAD_CONFIG_LOCATION_FIELD_NUMBER = 3;
  private int roadConfigLocation_ = 0;
  /**
   * <code>.fmsitsinterface.RoadConfiguration.RoadConfigLocation road_config_location = 3;</code>
   * @return The enum numeric value on the wire for roadConfigLocation.
   */
  @java.lang.Override public int getRoadConfigLocationValue() {
    return roadConfigLocation_;
  }
  /**
   * <code>.fmsitsinterface.RoadConfiguration.RoadConfigLocation road_config_location = 3;</code>
   * @return The roadConfigLocation.
   */
  @java.lang.Override public fmsitsinterface.RoadConfiguration.RoadConfigLocation getRoadConfigLocation() {
    fmsitsinterface.RoadConfiguration.RoadConfigLocation result = fmsitsinterface.RoadConfiguration.RoadConfigLocation.forNumber(roadConfigLocation_);
    return result == null ? fmsitsinterface.RoadConfiguration.RoadConfigLocation.UNRECOGNIZED : result;
  }

  public static final int FLASHING_FIELD_NUMBER = 4;
  private boolean flashing_ = false;
  /**
   * <pre>
   * are flashing lights present
   * </pre>
   *
   * <code>bool flashing = 4;</code>
   * @return The flashing.
   */
  @java.lang.Override
  public boolean getFlashing() {
    return flashing_;
  }

  public static final int RED_BORDER_FIELD_NUMBER = 5;
  private boolean redBorder_ = false;
  /**
   * <pre>
   * is a red border present
   * </pre>
   *
   * <code>bool red_border = 5;</code>
   * @return The redBorder.
   */
  @java.lang.Override
  public boolean getRedBorder() {
    return redBorder_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (roadConfigStatus_ != fmsitsinterface.RoadConfiguration.RoadConfigStatus.UNKNOWN_ROAD_CONFIG_STATUS.getNumber()) {
      output.writeEnum(1, roadConfigStatus_);
    }
    if (maxSpeed_ != null) {
      output.writeMessage(2, getMaxSpeed());
    }
    if (roadConfigLocation_ != fmsitsinterface.RoadConfiguration.RoadConfigLocation.UNKNOWN_LOCATION.getNumber()) {
      output.writeEnum(3, roadConfigLocation_);
    }
    if (flashing_ != false) {
      output.writeBool(4, flashing_);
    }
    if (redBorder_ != false) {
      output.writeBool(5, redBorder_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (roadConfigStatus_ != fmsitsinterface.RoadConfiguration.RoadConfigStatus.UNKNOWN_ROAD_CONFIG_STATUS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, roadConfigStatus_);
    }
    if (maxSpeed_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getMaxSpeed());
    }
    if (roadConfigLocation_ != fmsitsinterface.RoadConfiguration.RoadConfigLocation.UNKNOWN_LOCATION.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, roadConfigLocation_);
    }
    if (flashing_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, flashing_);
    }
    if (redBorder_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, redBorder_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof fmsitsinterface.RoadConfiguration)) {
      return super.equals(obj);
    }
    fmsitsinterface.RoadConfiguration other = (fmsitsinterface.RoadConfiguration) obj;

    if (roadConfigStatus_ != other.roadConfigStatus_) return false;
    if (hasMaxSpeed() != other.hasMaxSpeed()) return false;
    if (hasMaxSpeed()) {
      if (!getMaxSpeed()
          .equals(other.getMaxSpeed())) return false;
    }
    if (roadConfigLocation_ != other.roadConfigLocation_) return false;
    if (getFlashing()
        != other.getFlashing()) return false;
    if (getRedBorder()
        != other.getRedBorder()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ROAD_CONFIG_STATUS_FIELD_NUMBER;
    hash = (53 * hash) + roadConfigStatus_;
    if (hasMaxSpeed()) {
      hash = (37 * hash) + MAX_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + getMaxSpeed().hashCode();
    }
    hash = (37 * hash) + ROAD_CONFIG_LOCATION_FIELD_NUMBER;
    hash = (53 * hash) + roadConfigLocation_;
    hash = (37 * hash) + FLASHING_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFlashing());
    hash = (37 * hash) + RED_BORDER_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRedBorder());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static fmsitsinterface.RoadConfiguration parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static fmsitsinterface.RoadConfiguration parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static fmsitsinterface.RoadConfiguration parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.RoadConfiguration parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(fmsitsinterface.RoadConfiguration prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code fmsitsinterface.RoadConfiguration}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fmsitsinterface.RoadConfiguration)
      fmsitsinterface.RoadConfigurationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_RoadConfiguration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_RoadConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fmsitsinterface.RoadConfiguration.class, fmsitsinterface.RoadConfiguration.Builder.class);
    }

    // Construct using fmsitsinterface.RoadConfiguration.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      roadConfigStatus_ = 0;
      maxSpeed_ = null;
      if (maxSpeedBuilder_ != null) {
        maxSpeedBuilder_.dispose();
        maxSpeedBuilder_ = null;
      }
      roadConfigLocation_ = 0;
      flashing_ = false;
      redBorder_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_RoadConfiguration_descriptor;
    }

    @java.lang.Override
    public fmsitsinterface.RoadConfiguration getDefaultInstanceForType() {
      return fmsitsinterface.RoadConfiguration.getDefaultInstance();
    }

    @java.lang.Override
    public fmsitsinterface.RoadConfiguration build() {
      fmsitsinterface.RoadConfiguration result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public fmsitsinterface.RoadConfiguration buildPartial() {
      fmsitsinterface.RoadConfiguration result = new fmsitsinterface.RoadConfiguration(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(fmsitsinterface.RoadConfiguration result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.roadConfigStatus_ = roadConfigStatus_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.maxSpeed_ = maxSpeedBuilder_ == null
            ? maxSpeed_
            : maxSpeedBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.roadConfigLocation_ = roadConfigLocation_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.flashing_ = flashing_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.redBorder_ = redBorder_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof fmsitsinterface.RoadConfiguration) {
        return mergeFrom((fmsitsinterface.RoadConfiguration)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(fmsitsinterface.RoadConfiguration other) {
      if (other == fmsitsinterface.RoadConfiguration.getDefaultInstance()) return this;
      if (other.roadConfigStatus_ != 0) {
        setRoadConfigStatusValue(other.getRoadConfigStatusValue());
      }
      if (other.hasMaxSpeed()) {
        mergeMaxSpeed(other.getMaxSpeed());
      }
      if (other.roadConfigLocation_ != 0) {
        setRoadConfigLocationValue(other.getRoadConfigLocationValue());
      }
      if (other.getFlashing() != false) {
        setFlashing(other.getFlashing());
      }
      if (other.getRedBorder() != false) {
        setRedBorder(other.getRedBorder());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              roadConfigStatus_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getMaxSpeedFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              roadConfigLocation_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              flashing_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              redBorder_ = input.readBool();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int roadConfigStatus_ = 0;
    /**
     * <pre>
     * Status indicates state of lane defined in container laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigStatus road_config_status = 1;</code>
     * @return The enum numeric value on the wire for roadConfigStatus.
     */
    @java.lang.Override public int getRoadConfigStatusValue() {
      return roadConfigStatus_;
    }
    /**
     * <pre>
     * Status indicates state of lane defined in container laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigStatus road_config_status = 1;</code>
     * @param value The enum numeric value on the wire for roadConfigStatus to set.
     * @return This builder for chaining.
     */
    public Builder setRoadConfigStatusValue(int value) {
      roadConfigStatus_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Status indicates state of lane defined in container laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigStatus road_config_status = 1;</code>
     * @return The roadConfigStatus.
     */
    @java.lang.Override
    public fmsitsinterface.RoadConfiguration.RoadConfigStatus getRoadConfigStatus() {
      fmsitsinterface.RoadConfiguration.RoadConfigStatus result = fmsitsinterface.RoadConfiguration.RoadConfigStatus.forNumber(roadConfigStatus_);
      return result == null ? fmsitsinterface.RoadConfiguration.RoadConfigStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Status indicates state of lane defined in container laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigStatus road_config_status = 1;</code>
     * @param value The roadConfigStatus to set.
     * @return This builder for chaining.
     */
    public Builder setRoadConfigStatus(fmsitsinterface.RoadConfiguration.RoadConfigStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      roadConfigStatus_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Status indicates state of lane defined in container laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigStatus road_config_status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearRoadConfigStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      roadConfigStatus_ = 0;
      onChanged();
      return this;
    }

    private fmsitsinterface.MeasurementType maxSpeed_;
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.MeasurementType, fmsitsinterface.MeasurementType.Builder, fmsitsinterface.MeasurementTypeOrBuilder> maxSpeedBuilder_;
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     * @return Whether the maxSpeed field is set.
     */
    public boolean hasMaxSpeed() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     * @return The maxSpeed.
     */
    public fmsitsinterface.MeasurementType getMaxSpeed() {
      if (maxSpeedBuilder_ == null) {
        return maxSpeed_ == null ? fmsitsinterface.MeasurementType.getDefaultInstance() : maxSpeed_;
      } else {
        return maxSpeedBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     */
    public Builder setMaxSpeed(fmsitsinterface.MeasurementType value) {
      if (maxSpeedBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        maxSpeed_ = value;
      } else {
        maxSpeedBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     */
    public Builder setMaxSpeed(
        fmsitsinterface.MeasurementType.Builder builderForValue) {
      if (maxSpeedBuilder_ == null) {
        maxSpeed_ = builderForValue.build();
      } else {
        maxSpeedBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     */
    public Builder mergeMaxSpeed(fmsitsinterface.MeasurementType value) {
      if (maxSpeedBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          maxSpeed_ != null &&
          maxSpeed_ != fmsitsinterface.MeasurementType.getDefaultInstance()) {
          getMaxSpeedBuilder().mergeFrom(value);
        } else {
          maxSpeed_ = value;
        }
      } else {
        maxSpeedBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     */
    public Builder clearMaxSpeed() {
      bitField0_ = (bitField0_ & ~0x00000002);
      maxSpeed_ = null;
      if (maxSpeedBuilder_ != null) {
        maxSpeedBuilder_.dispose();
        maxSpeedBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     */
    public fmsitsinterface.MeasurementType.Builder getMaxSpeedBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getMaxSpeedFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     */
    public fmsitsinterface.MeasurementTypeOrBuilder getMaxSpeedOrBuilder() {
      if (maxSpeedBuilder_ != null) {
        return maxSpeedBuilder_.getMessageOrBuilder();
      } else {
        return maxSpeed_ == null ?
            fmsitsinterface.MeasurementType.getDefaultInstance() : maxSpeed_;
      }
    }
    /**
     * <pre>
     * optional field in case the status is CHANGED_MAX_SPEED
     * </pre>
     *
     * <code>.fmsitsinterface.MeasurementType max_speed = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.MeasurementType, fmsitsinterface.MeasurementType.Builder, fmsitsinterface.MeasurementTypeOrBuilder> 
        getMaxSpeedFieldBuilder() {
      if (maxSpeedBuilder_ == null) {
        maxSpeedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            fmsitsinterface.MeasurementType, fmsitsinterface.MeasurementType.Builder, fmsitsinterface.MeasurementTypeOrBuilder>(
                getMaxSpeed(),
                getParentForChildren(),
                isClean());
        maxSpeed_ = null;
      }
      return maxSpeedBuilder_;
    }

    private int roadConfigLocation_ = 0;
    /**
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigLocation road_config_location = 3;</code>
     * @return The enum numeric value on the wire for roadConfigLocation.
     */
    @java.lang.Override public int getRoadConfigLocationValue() {
      return roadConfigLocation_;
    }
    /**
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigLocation road_config_location = 3;</code>
     * @param value The enum numeric value on the wire for roadConfigLocation to set.
     * @return This builder for chaining.
     */
    public Builder setRoadConfigLocationValue(int value) {
      roadConfigLocation_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigLocation road_config_location = 3;</code>
     * @return The roadConfigLocation.
     */
    @java.lang.Override
    public fmsitsinterface.RoadConfiguration.RoadConfigLocation getRoadConfigLocation() {
      fmsitsinterface.RoadConfiguration.RoadConfigLocation result = fmsitsinterface.RoadConfiguration.RoadConfigLocation.forNumber(roadConfigLocation_);
      return result == null ? fmsitsinterface.RoadConfiguration.RoadConfigLocation.UNRECOGNIZED : result;
    }
    /**
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigLocation road_config_location = 3;</code>
     * @param value The roadConfigLocation to set.
     * @return This builder for chaining.
     */
    public Builder setRoadConfigLocation(fmsitsinterface.RoadConfiguration.RoadConfigLocation value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      roadConfigLocation_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.fmsitsinterface.RoadConfiguration.RoadConfigLocation road_config_location = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearRoadConfigLocation() {
      bitField0_ = (bitField0_ & ~0x00000004);
      roadConfigLocation_ = 0;
      onChanged();
      return this;
    }

    private boolean flashing_ ;
    /**
     * <pre>
     * are flashing lights present
     * </pre>
     *
     * <code>bool flashing = 4;</code>
     * @return The flashing.
     */
    @java.lang.Override
    public boolean getFlashing() {
      return flashing_;
    }
    /**
     * <pre>
     * are flashing lights present
     * </pre>
     *
     * <code>bool flashing = 4;</code>
     * @param value The flashing to set.
     * @return This builder for chaining.
     */
    public Builder setFlashing(boolean value) {

      flashing_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * are flashing lights present
     * </pre>
     *
     * <code>bool flashing = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFlashing() {
      bitField0_ = (bitField0_ & ~0x00000008);
      flashing_ = false;
      onChanged();
      return this;
    }

    private boolean redBorder_ ;
    /**
     * <pre>
     * is a red border present
     * </pre>
     *
     * <code>bool red_border = 5;</code>
     * @return The redBorder.
     */
    @java.lang.Override
    public boolean getRedBorder() {
      return redBorder_;
    }
    /**
     * <pre>
     * is a red border present
     * </pre>
     *
     * <code>bool red_border = 5;</code>
     * @param value The redBorder to set.
     * @return This builder for chaining.
     */
    public Builder setRedBorder(boolean value) {

      redBorder_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * is a red border present
     * </pre>
     *
     * <code>bool red_border = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearRedBorder() {
      bitField0_ = (bitField0_ & ~0x00000010);
      redBorder_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:fmsitsinterface.RoadConfiguration)
  }

  // @@protoc_insertion_point(class_scope:fmsitsinterface.RoadConfiguration)
  private static final fmsitsinterface.RoadConfiguration DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new fmsitsinterface.RoadConfiguration();
  }

  public static fmsitsinterface.RoadConfiguration getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RoadConfiguration>
      PARSER = new com.google.protobuf.AbstractParser<RoadConfiguration>() {
    @java.lang.Override
    public RoadConfiguration parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<RoadConfiguration> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RoadConfiguration> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public fmsitsinterface.RoadConfiguration getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

