// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMS_ITS_Interface_Specification.proto

package fmsitsinterface;

/**
 * Protobuf type {@code fmsitsinterface.StaticEventMetadata}
 */
public final class StaticEventMetadata extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:fmsitsinterface.StaticEventMetadata)
    StaticEventMetadataOrBuilder {
private static final long serialVersionUID = 0L;
  // Use StaticEventMetadata.newBuilder() to construct.
  private StaticEventMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private StaticEventMetadata() {
    weatherConditions_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new StaticEventMetadata();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_StaticEventMetadata_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_StaticEventMetadata_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            fmsitsinterface.StaticEventMetadata.class, fmsitsinterface.StaticEventMetadata.Builder.class);
  }

  /**
   * Protobuf enum {@code fmsitsinterface.StaticEventMetadata.WeatherConditions}
   */
  public enum WeatherConditions
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown weather condition
     * </pre>
     *
     * <code>UNKNOWN_WEATHER_CONDITION = 0;</code>
     */
    UNKNOWN_WEATHER_CONDITION(0),
    /**
     * <pre>
     * Heavy rain
     * </pre>
     *
     * <code>HEAVY_RAIN = 1;</code>
     */
    HEAVY_RAIN(1),
    /**
     * <pre>
     * Slippery Road (ice, oil, ...)
     * </pre>
     *
     * <code>SLIPPERY_ROAD = 2;</code>
     */
    SLIPPERY_ROAD(2),
    /**
     * <pre>
     * Fog
     * </pre>
     *
     * <code>FOG = 3;</code>
     */
    FOG(3),
    /**
     * <pre>
     * Heavy Wind
     * </pre>
     *
     * <code>HEAVY_WIND = 4;</code>
     */
    HEAVY_WIND(4),
    /**
     * <pre>
     * Heavy Snowfall
     * </pre>
     *
     * <code>HEAVY_SNOWFALL = 5;</code>
     */
    HEAVY_SNOWFALL(5),
    /**
     * <pre>
     * Hail
     * </pre>
     *
     * <code>HAIL = 6;</code>
     */
    HAIL(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown weather condition
     * </pre>
     *
     * <code>UNKNOWN_WEATHER_CONDITION = 0;</code>
     */
    public static final int UNKNOWN_WEATHER_CONDITION_VALUE = 0;
    /**
     * <pre>
     * Heavy rain
     * </pre>
     *
     * <code>HEAVY_RAIN = 1;</code>
     */
    public static final int HEAVY_RAIN_VALUE = 1;
    /**
     * <pre>
     * Slippery Road (ice, oil, ...)
     * </pre>
     *
     * <code>SLIPPERY_ROAD = 2;</code>
     */
    public static final int SLIPPERY_ROAD_VALUE = 2;
    /**
     * <pre>
     * Fog
     * </pre>
     *
     * <code>FOG = 3;</code>
     */
    public static final int FOG_VALUE = 3;
    /**
     * <pre>
     * Heavy Wind
     * </pre>
     *
     * <code>HEAVY_WIND = 4;</code>
     */
    public static final int HEAVY_WIND_VALUE = 4;
    /**
     * <pre>
     * Heavy Snowfall
     * </pre>
     *
     * <code>HEAVY_SNOWFALL = 5;</code>
     */
    public static final int HEAVY_SNOWFALL_VALUE = 5;
    /**
     * <pre>
     * Hail
     * </pre>
     *
     * <code>HAIL = 6;</code>
     */
    public static final int HAIL_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static WeatherConditions valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static WeatherConditions forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_WEATHER_CONDITION;
        case 1: return HEAVY_RAIN;
        case 2: return SLIPPERY_ROAD;
        case 3: return FOG;
        case 4: return HEAVY_WIND;
        case 5: return HEAVY_SNOWFALL;
        case 6: return HAIL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<WeatherConditions>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        WeatherConditions> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WeatherConditions>() {
            public WeatherConditions findValueByNumber(int number) {
              return WeatherConditions.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return fmsitsinterface.StaticEventMetadata.getDescriptor().getEnumTypes().get(0);
    }

    private static final WeatherConditions[] VALUES = values();

    public static WeatherConditions valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private WeatherConditions(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fmsitsinterface.StaticEventMetadata.WeatherConditions)
  }

  public static final int WEATHER_CONDITIONS_FIELD_NUMBER = 1;
  private int weatherConditions_ = 0;
  /**
   * <pre>
   * indicating weather events, its_event_code WEATHER_CONDITIONS
   * </pre>
   *
   * <code>.fmsitsinterface.StaticEventMetadata.WeatherConditions weather_conditions = 1;</code>
   * @return The enum numeric value on the wire for weatherConditions.
   */
  @java.lang.Override public int getWeatherConditionsValue() {
    return weatherConditions_;
  }
  /**
   * <pre>
   * indicating weather events, its_event_code WEATHER_CONDITIONS
   * </pre>
   *
   * <code>.fmsitsinterface.StaticEventMetadata.WeatherConditions weather_conditions = 1;</code>
   * @return The weatherConditions.
   */
  @java.lang.Override public fmsitsinterface.StaticEventMetadata.WeatherConditions getWeatherConditions() {
    fmsitsinterface.StaticEventMetadata.WeatherConditions result = fmsitsinterface.StaticEventMetadata.WeatherConditions.forNumber(weatherConditions_);
    return result == null ? fmsitsinterface.StaticEventMetadata.WeatherConditions.UNRECOGNIZED : result;
  }

  public static final int ROAD_CONFIGURATION_FIELD_NUMBER = 2;
  private fmsitsinterface.RoadConfiguration roadConfiguration_;
  /**
   * <pre>
   * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
   * </pre>
   *
   * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
   * @return Whether the roadConfiguration field is set.
   */
  @java.lang.Override
  public boolean hasRoadConfiguration() {
    return roadConfiguration_ != null;
  }
  /**
   * <pre>
   * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
   * </pre>
   *
   * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
   * @return The roadConfiguration.
   */
  @java.lang.Override
  public fmsitsinterface.RoadConfiguration getRoadConfiguration() {
    return roadConfiguration_ == null ? fmsitsinterface.RoadConfiguration.getDefaultInstance() : roadConfiguration_;
  }
  /**
   * <pre>
   * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
   * </pre>
   *
   * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
   */
  @java.lang.Override
  public fmsitsinterface.RoadConfigurationOrBuilder getRoadConfigurationOrBuilder() {
    return roadConfiguration_ == null ? fmsitsinterface.RoadConfiguration.getDefaultInstance() : roadConfiguration_;
  }

  public static final int SPEED_INFO_FIELD_NUMBER = 3;
  private fmsitsinterface.SpeedInfo speedInfo_;
  /**
   * <pre>
   * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
   * </pre>
   *
   * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
   * @return Whether the speedInfo field is set.
   */
  @java.lang.Override
  public boolean hasSpeedInfo() {
    return speedInfo_ != null;
  }
  /**
   * <pre>
   * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
   * </pre>
   *
   * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
   * @return The speedInfo.
   */
  @java.lang.Override
  public fmsitsinterface.SpeedInfo getSpeedInfo() {
    return speedInfo_ == null ? fmsitsinterface.SpeedInfo.getDefaultInstance() : speedInfo_;
  }
  /**
   * <pre>
   * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
   * </pre>
   *
   * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
   */
  @java.lang.Override
  public fmsitsinterface.SpeedInfoOrBuilder getSpeedInfoOrBuilder() {
    return speedInfo_ == null ? fmsitsinterface.SpeedInfo.getDefaultInstance() : speedInfo_;
  }

  public static final int IVRI_CONTAINER_FIELD_NUMBER = 4;
  private fmsitsinterface.IvriContainer ivriContainer_;
  /**
   * <pre>
   * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
   * </pre>
   *
   * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
   * @return Whether the ivriContainer field is set.
   */
  @java.lang.Override
  public boolean hasIvriContainer() {
    return ivriContainer_ != null;
  }
  /**
   * <pre>
   * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
   * </pre>
   *
   * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
   * @return The ivriContainer.
   */
  @java.lang.Override
  public fmsitsinterface.IvriContainer getIvriContainer() {
    return ivriContainer_ == null ? fmsitsinterface.IvriContainer.getDefaultInstance() : ivriContainer_;
  }
  /**
   * <pre>
   * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
   * </pre>
   *
   * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
   */
  @java.lang.Override
  public fmsitsinterface.IvriContainerOrBuilder getIvriContainerOrBuilder() {
    return ivriContainer_ == null ? fmsitsinterface.IvriContainer.getDefaultInstance() : ivriContainer_;
  }

  public static final int LANE_INFO_FIELD_NUMBER = 5;
  private fmsitsinterface.LaneInfo laneInfo_;
  /**
   * <pre>
   * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
   * </pre>
   *
   * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
   * @return Whether the laneInfo field is set.
   */
  @java.lang.Override
  public boolean hasLaneInfo() {
    return laneInfo_ != null;
  }
  /**
   * <pre>
   * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
   * </pre>
   *
   * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
   * @return The laneInfo.
   */
  @java.lang.Override
  public fmsitsinterface.LaneInfo getLaneInfo() {
    return laneInfo_ == null ? fmsitsinterface.LaneInfo.getDefaultInstance() : laneInfo_;
  }
  /**
   * <pre>
   * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
   * </pre>
   *
   * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
   */
  @java.lang.Override
  public fmsitsinterface.LaneInfoOrBuilder getLaneInfoOrBuilder() {
    return laneInfo_ == null ? fmsitsinterface.LaneInfo.getDefaultInstance() : laneInfo_;
  }

  public static final int SENSOR_INFO_FIELD_NUMBER = 6;
  private fmsitsinterface.SensorInfo sensorInfo_;
  /**
   * <pre>
   * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
   * </pre>
   *
   * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
   * @return Whether the sensorInfo field is set.
   */
  @java.lang.Override
  public boolean hasSensorInfo() {
    return sensorInfo_ != null;
  }
  /**
   * <pre>
   * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
   * </pre>
   *
   * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
   * @return The sensorInfo.
   */
  @java.lang.Override
  public fmsitsinterface.SensorInfo getSensorInfo() {
    return sensorInfo_ == null ? fmsitsinterface.SensorInfo.getDefaultInstance() : sensorInfo_;
  }
  /**
   * <pre>
   * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
   * </pre>
   *
   * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
   */
  @java.lang.Override
  public fmsitsinterface.SensorInfoOrBuilder getSensorInfoOrBuilder() {
    return sensorInfo_ == null ? fmsitsinterface.SensorInfo.getDefaultInstance() : sensorInfo_;
  }

  public static final int OVERTAKING_INFO_FIELD_NUMBER = 7;
  private fmsitsinterface.OvertakingInfo overtakingInfo_;
  /**
   * <pre>
   * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
   * </pre>
   *
   * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
   * @return Whether the overtakingInfo field is set.
   */
  @java.lang.Override
  public boolean hasOvertakingInfo() {
    return overtakingInfo_ != null;
  }
  /**
   * <pre>
   * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
   * </pre>
   *
   * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
   * @return The overtakingInfo.
   */
  @java.lang.Override
  public fmsitsinterface.OvertakingInfo getOvertakingInfo() {
    return overtakingInfo_ == null ? fmsitsinterface.OvertakingInfo.getDefaultInstance() : overtakingInfo_;
  }
  /**
   * <pre>
   * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
   * </pre>
   *
   * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
   */
  @java.lang.Override
  public fmsitsinterface.OvertakingInfoOrBuilder getOvertakingInfoOrBuilder() {
    return overtakingInfo_ == null ? fmsitsinterface.OvertakingInfo.getDefaultInstance() : overtakingInfo_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (weatherConditions_ != fmsitsinterface.StaticEventMetadata.WeatherConditions.UNKNOWN_WEATHER_CONDITION.getNumber()) {
      output.writeEnum(1, weatherConditions_);
    }
    if (roadConfiguration_ != null) {
      output.writeMessage(2, getRoadConfiguration());
    }
    if (speedInfo_ != null) {
      output.writeMessage(3, getSpeedInfo());
    }
    if (ivriContainer_ != null) {
      output.writeMessage(4, getIvriContainer());
    }
    if (laneInfo_ != null) {
      output.writeMessage(5, getLaneInfo());
    }
    if (sensorInfo_ != null) {
      output.writeMessage(6, getSensorInfo());
    }
    if (overtakingInfo_ != null) {
      output.writeMessage(7, getOvertakingInfo());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (weatherConditions_ != fmsitsinterface.StaticEventMetadata.WeatherConditions.UNKNOWN_WEATHER_CONDITION.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, weatherConditions_);
    }
    if (roadConfiguration_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getRoadConfiguration());
    }
    if (speedInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getSpeedInfo());
    }
    if (ivriContainer_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getIvriContainer());
    }
    if (laneInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getLaneInfo());
    }
    if (sensorInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getSensorInfo());
    }
    if (overtakingInfo_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getOvertakingInfo());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof fmsitsinterface.StaticEventMetadata)) {
      return super.equals(obj);
    }
    fmsitsinterface.StaticEventMetadata other = (fmsitsinterface.StaticEventMetadata) obj;

    if (weatherConditions_ != other.weatherConditions_) return false;
    if (hasRoadConfiguration() != other.hasRoadConfiguration()) return false;
    if (hasRoadConfiguration()) {
      if (!getRoadConfiguration()
          .equals(other.getRoadConfiguration())) return false;
    }
    if (hasSpeedInfo() != other.hasSpeedInfo()) return false;
    if (hasSpeedInfo()) {
      if (!getSpeedInfo()
          .equals(other.getSpeedInfo())) return false;
    }
    if (hasIvriContainer() != other.hasIvriContainer()) return false;
    if (hasIvriContainer()) {
      if (!getIvriContainer()
          .equals(other.getIvriContainer())) return false;
    }
    if (hasLaneInfo() != other.hasLaneInfo()) return false;
    if (hasLaneInfo()) {
      if (!getLaneInfo()
          .equals(other.getLaneInfo())) return false;
    }
    if (hasSensorInfo() != other.hasSensorInfo()) return false;
    if (hasSensorInfo()) {
      if (!getSensorInfo()
          .equals(other.getSensorInfo())) return false;
    }
    if (hasOvertakingInfo() != other.hasOvertakingInfo()) return false;
    if (hasOvertakingInfo()) {
      if (!getOvertakingInfo()
          .equals(other.getOvertakingInfo())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + WEATHER_CONDITIONS_FIELD_NUMBER;
    hash = (53 * hash) + weatherConditions_;
    if (hasRoadConfiguration()) {
      hash = (37 * hash) + ROAD_CONFIGURATION_FIELD_NUMBER;
      hash = (53 * hash) + getRoadConfiguration().hashCode();
    }
    if (hasSpeedInfo()) {
      hash = (37 * hash) + SPEED_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getSpeedInfo().hashCode();
    }
    if (hasIvriContainer()) {
      hash = (37 * hash) + IVRI_CONTAINER_FIELD_NUMBER;
      hash = (53 * hash) + getIvriContainer().hashCode();
    }
    if (hasLaneInfo()) {
      hash = (37 * hash) + LANE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getLaneInfo().hashCode();
    }
    if (hasSensorInfo()) {
      hash = (37 * hash) + SENSOR_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getSensorInfo().hashCode();
    }
    if (hasOvertakingInfo()) {
      hash = (37 * hash) + OVERTAKING_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getOvertakingInfo().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static fmsitsinterface.StaticEventMetadata parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static fmsitsinterface.StaticEventMetadata parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static fmsitsinterface.StaticEventMetadata parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.StaticEventMetadata parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(fmsitsinterface.StaticEventMetadata prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code fmsitsinterface.StaticEventMetadata}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fmsitsinterface.StaticEventMetadata)
      fmsitsinterface.StaticEventMetadataOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_StaticEventMetadata_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_StaticEventMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fmsitsinterface.StaticEventMetadata.class, fmsitsinterface.StaticEventMetadata.Builder.class);
    }

    // Construct using fmsitsinterface.StaticEventMetadata.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      weatherConditions_ = 0;
      roadConfiguration_ = null;
      if (roadConfigurationBuilder_ != null) {
        roadConfigurationBuilder_.dispose();
        roadConfigurationBuilder_ = null;
      }
      speedInfo_ = null;
      if (speedInfoBuilder_ != null) {
        speedInfoBuilder_.dispose();
        speedInfoBuilder_ = null;
      }
      ivriContainer_ = null;
      if (ivriContainerBuilder_ != null) {
        ivriContainerBuilder_.dispose();
        ivriContainerBuilder_ = null;
      }
      laneInfo_ = null;
      if (laneInfoBuilder_ != null) {
        laneInfoBuilder_.dispose();
        laneInfoBuilder_ = null;
      }
      sensorInfo_ = null;
      if (sensorInfoBuilder_ != null) {
        sensorInfoBuilder_.dispose();
        sensorInfoBuilder_ = null;
      }
      overtakingInfo_ = null;
      if (overtakingInfoBuilder_ != null) {
        overtakingInfoBuilder_.dispose();
        overtakingInfoBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_StaticEventMetadata_descriptor;
    }

    @java.lang.Override
    public fmsitsinterface.StaticEventMetadata getDefaultInstanceForType() {
      return fmsitsinterface.StaticEventMetadata.getDefaultInstance();
    }

    @java.lang.Override
    public fmsitsinterface.StaticEventMetadata build() {
      fmsitsinterface.StaticEventMetadata result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public fmsitsinterface.StaticEventMetadata buildPartial() {
      fmsitsinterface.StaticEventMetadata result = new fmsitsinterface.StaticEventMetadata(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(fmsitsinterface.StaticEventMetadata result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.weatherConditions_ = weatherConditions_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.roadConfiguration_ = roadConfigurationBuilder_ == null
            ? roadConfiguration_
            : roadConfigurationBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.speedInfo_ = speedInfoBuilder_ == null
            ? speedInfo_
            : speedInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.ivriContainer_ = ivriContainerBuilder_ == null
            ? ivriContainer_
            : ivriContainerBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.laneInfo_ = laneInfoBuilder_ == null
            ? laneInfo_
            : laneInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.sensorInfo_ = sensorInfoBuilder_ == null
            ? sensorInfo_
            : sensorInfoBuilder_.build();
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.overtakingInfo_ = overtakingInfoBuilder_ == null
            ? overtakingInfo_
            : overtakingInfoBuilder_.build();
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof fmsitsinterface.StaticEventMetadata) {
        return mergeFrom((fmsitsinterface.StaticEventMetadata)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(fmsitsinterface.StaticEventMetadata other) {
      if (other == fmsitsinterface.StaticEventMetadata.getDefaultInstance()) return this;
      if (other.weatherConditions_ != 0) {
        setWeatherConditionsValue(other.getWeatherConditionsValue());
      }
      if (other.hasRoadConfiguration()) {
        mergeRoadConfiguration(other.getRoadConfiguration());
      }
      if (other.hasSpeedInfo()) {
        mergeSpeedInfo(other.getSpeedInfo());
      }
      if (other.hasIvriContainer()) {
        mergeIvriContainer(other.getIvriContainer());
      }
      if (other.hasLaneInfo()) {
        mergeLaneInfo(other.getLaneInfo());
      }
      if (other.hasSensorInfo()) {
        mergeSensorInfo(other.getSensorInfo());
      }
      if (other.hasOvertakingInfo()) {
        mergeOvertakingInfo(other.getOvertakingInfo());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              weatherConditions_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 18: {
              input.readMessage(
                  getRoadConfigurationFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getSpeedInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 34: {
              input.readMessage(
                  getIvriContainerFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              input.readMessage(
                  getLaneInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              input.readMessage(
                  getSensorInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            case 58: {
              input.readMessage(
                  getOvertakingInfoFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int weatherConditions_ = 0;
    /**
     * <pre>
     * indicating weather events, its_event_code WEATHER_CONDITIONS
     * </pre>
     *
     * <code>.fmsitsinterface.StaticEventMetadata.WeatherConditions weather_conditions = 1;</code>
     * @return The enum numeric value on the wire for weatherConditions.
     */
    @java.lang.Override public int getWeatherConditionsValue() {
      return weatherConditions_;
    }
    /**
     * <pre>
     * indicating weather events, its_event_code WEATHER_CONDITIONS
     * </pre>
     *
     * <code>.fmsitsinterface.StaticEventMetadata.WeatherConditions weather_conditions = 1;</code>
     * @param value The enum numeric value on the wire for weatherConditions to set.
     * @return This builder for chaining.
     */
    public Builder setWeatherConditionsValue(int value) {
      weatherConditions_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indicating weather events, its_event_code WEATHER_CONDITIONS
     * </pre>
     *
     * <code>.fmsitsinterface.StaticEventMetadata.WeatherConditions weather_conditions = 1;</code>
     * @return The weatherConditions.
     */
    @java.lang.Override
    public fmsitsinterface.StaticEventMetadata.WeatherConditions getWeatherConditions() {
      fmsitsinterface.StaticEventMetadata.WeatherConditions result = fmsitsinterface.StaticEventMetadata.WeatherConditions.forNumber(weatherConditions_);
      return result == null ? fmsitsinterface.StaticEventMetadata.WeatherConditions.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * indicating weather events, its_event_code WEATHER_CONDITIONS
     * </pre>
     *
     * <code>.fmsitsinterface.StaticEventMetadata.WeatherConditions weather_conditions = 1;</code>
     * @param value The weatherConditions to set.
     * @return This builder for chaining.
     */
    public Builder setWeatherConditions(fmsitsinterface.StaticEventMetadata.WeatherConditions value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      weatherConditions_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indicating weather events, its_event_code WEATHER_CONDITIONS
     * </pre>
     *
     * <code>.fmsitsinterface.StaticEventMetadata.WeatherConditions weather_conditions = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearWeatherConditions() {
      bitField0_ = (bitField0_ & ~0x00000001);
      weatherConditions_ = 0;
      onChanged();
      return this;
    }

    private fmsitsinterface.RoadConfiguration roadConfiguration_;
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.RoadConfiguration, fmsitsinterface.RoadConfiguration.Builder, fmsitsinterface.RoadConfigurationOrBuilder> roadConfigurationBuilder_;
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     * @return Whether the roadConfiguration field is set.
     */
    public boolean hasRoadConfiguration() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     * @return The roadConfiguration.
     */
    public fmsitsinterface.RoadConfiguration getRoadConfiguration() {
      if (roadConfigurationBuilder_ == null) {
        return roadConfiguration_ == null ? fmsitsinterface.RoadConfiguration.getDefaultInstance() : roadConfiguration_;
      } else {
        return roadConfigurationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     */
    public Builder setRoadConfiguration(fmsitsinterface.RoadConfiguration value) {
      if (roadConfigurationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        roadConfiguration_ = value;
      } else {
        roadConfigurationBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     */
    public Builder setRoadConfiguration(
        fmsitsinterface.RoadConfiguration.Builder builderForValue) {
      if (roadConfigurationBuilder_ == null) {
        roadConfiguration_ = builderForValue.build();
      } else {
        roadConfigurationBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     */
    public Builder mergeRoadConfiguration(fmsitsinterface.RoadConfiguration value) {
      if (roadConfigurationBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          roadConfiguration_ != null &&
          roadConfiguration_ != fmsitsinterface.RoadConfiguration.getDefaultInstance()) {
          getRoadConfigurationBuilder().mergeFrom(value);
        } else {
          roadConfiguration_ = value;
        }
      } else {
        roadConfigurationBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     */
    public Builder clearRoadConfiguration() {
      bitField0_ = (bitField0_ & ~0x00000002);
      roadConfiguration_ = null;
      if (roadConfigurationBuilder_ != null) {
        roadConfigurationBuilder_.dispose();
        roadConfigurationBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     */
    public fmsitsinterface.RoadConfiguration.Builder getRoadConfigurationBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getRoadConfigurationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     */
    public fmsitsinterface.RoadConfigurationOrBuilder getRoadConfigurationOrBuilder() {
      if (roadConfigurationBuilder_ != null) {
        return roadConfigurationBuilder_.getMessageOrBuilder();
      } else {
        return roadConfiguration_ == null ?
            fmsitsinterface.RoadConfiguration.getDefaultInstance() : roadConfiguration_;
      }
    }
    /**
     * <pre>
     * object indicating status of road lanes, its_event_code LANE_CONFIGURATION
     * </pre>
     *
     * <code>.fmsitsinterface.RoadConfiguration road_configuration = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.RoadConfiguration, fmsitsinterface.RoadConfiguration.Builder, fmsitsinterface.RoadConfigurationOrBuilder> 
        getRoadConfigurationFieldBuilder() {
      if (roadConfigurationBuilder_ == null) {
        roadConfigurationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            fmsitsinterface.RoadConfiguration, fmsitsinterface.RoadConfiguration.Builder, fmsitsinterface.RoadConfigurationOrBuilder>(
                getRoadConfiguration(),
                getParentForChildren(),
                isClean());
        roadConfiguration_ = null;
      }
      return roadConfigurationBuilder_;
    }

    private fmsitsinterface.SpeedInfo speedInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.SpeedInfo, fmsitsinterface.SpeedInfo.Builder, fmsitsinterface.SpeedInfoOrBuilder> speedInfoBuilder_;
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     * @return Whether the speedInfo field is set.
     */
    public boolean hasSpeedInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     * @return The speedInfo.
     */
    public fmsitsinterface.SpeedInfo getSpeedInfo() {
      if (speedInfoBuilder_ == null) {
        return speedInfo_ == null ? fmsitsinterface.SpeedInfo.getDefaultInstance() : speedInfo_;
      } else {
        return speedInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     */
    public Builder setSpeedInfo(fmsitsinterface.SpeedInfo value) {
      if (speedInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        speedInfo_ = value;
      } else {
        speedInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     */
    public Builder setSpeedInfo(
        fmsitsinterface.SpeedInfo.Builder builderForValue) {
      if (speedInfoBuilder_ == null) {
        speedInfo_ = builderForValue.build();
      } else {
        speedInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     */
    public Builder mergeSpeedInfo(fmsitsinterface.SpeedInfo value) {
      if (speedInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          speedInfo_ != null &&
          speedInfo_ != fmsitsinterface.SpeedInfo.getDefaultInstance()) {
          getSpeedInfoBuilder().mergeFrom(value);
        } else {
          speedInfo_ = value;
        }
      } else {
        speedInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     */
    public Builder clearSpeedInfo() {
      bitField0_ = (bitField0_ & ~0x00000004);
      speedInfo_ = null;
      if (speedInfoBuilder_ != null) {
        speedInfoBuilder_.dispose();
        speedInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     */
    public fmsitsinterface.SpeedInfo.Builder getSpeedInfoBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getSpeedInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     */
    public fmsitsinterface.SpeedInfoOrBuilder getSpeedInfoOrBuilder() {
      if (speedInfoBuilder_ != null) {
        return speedInfoBuilder_.getMessageOrBuilder();
      } else {
        return speedInfo_ == null ?
            fmsitsinterface.SpeedInfo.getDefaultInstance() : speedInfo_;
      }
    }
    /**
     * <pre>
     * object indicating maximum and optimal speed, its_event_code MAXIMUM_SPEED or ADVISORY_SPEED_LIMIT
     * </pre>
     *
     * <code>.fmsitsinterface.SpeedInfo speed_info = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.SpeedInfo, fmsitsinterface.SpeedInfo.Builder, fmsitsinterface.SpeedInfoOrBuilder> 
        getSpeedInfoFieldBuilder() {
      if (speedInfoBuilder_ == null) {
        speedInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            fmsitsinterface.SpeedInfo, fmsitsinterface.SpeedInfo.Builder, fmsitsinterface.SpeedInfoOrBuilder>(
                getSpeedInfo(),
                getParentForChildren(),
                isClean());
        speedInfo_ = null;
      }
      return speedInfoBuilder_;
    }

    private fmsitsinterface.IvriContainer ivriContainer_;
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.IvriContainer, fmsitsinterface.IvriContainer.Builder, fmsitsinterface.IvriContainerOrBuilder> ivriContainerBuilder_;
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     * @return Whether the ivriContainer field is set.
     */
    public boolean hasIvriContainer() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     * @return The ivriContainer.
     */
    public fmsitsinterface.IvriContainer getIvriContainer() {
      if (ivriContainerBuilder_ == null) {
        return ivriContainer_ == null ? fmsitsinterface.IvriContainer.getDefaultInstance() : ivriContainer_;
      } else {
        return ivriContainerBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     */
    public Builder setIvriContainer(fmsitsinterface.IvriContainer value) {
      if (ivriContainerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ivriContainer_ = value;
      } else {
        ivriContainerBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     */
    public Builder setIvriContainer(
        fmsitsinterface.IvriContainer.Builder builderForValue) {
      if (ivriContainerBuilder_ == null) {
        ivriContainer_ = builderForValue.build();
      } else {
        ivriContainerBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     */
    public Builder mergeIvriContainer(fmsitsinterface.IvriContainer value) {
      if (ivriContainerBuilder_ == null) {
        if (((bitField0_ & 0x00000008) != 0) &&
          ivriContainer_ != null &&
          ivriContainer_ != fmsitsinterface.IvriContainer.getDefaultInstance()) {
          getIvriContainerBuilder().mergeFrom(value);
        } else {
          ivriContainer_ = value;
        }
      } else {
        ivriContainerBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     */
    public Builder clearIvriContainer() {
      bitField0_ = (bitField0_ & ~0x00000008);
      ivriContainer_ = null;
      if (ivriContainerBuilder_ != null) {
        ivriContainerBuilder_.dispose();
        ivriContainerBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     */
    public fmsitsinterface.IvriContainer.Builder getIvriContainerBuilder() {
      bitField0_ |= 0x00000008;
      onChanged();
      return getIvriContainerFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     */
    public fmsitsinterface.IvriContainerOrBuilder getIvriContainerOrBuilder() {
      if (ivriContainerBuilder_ != null) {
        return ivriContainerBuilder_.getMessageOrBuilder();
      } else {
        return ivriContainer_ == null ?
            fmsitsinterface.IvriContainer.getDefaultInstance() : ivriContainer_;
      }
    }
    /**
     * <pre>
     * object as placeholder for various traffic light usecases, its_event_code TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING,  ADVISORY_SPEED, RAIL_CROSSING_STATUS
     * </pre>
     *
     * <code>.fmsitsinterface.IvriContainer ivri_container = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.IvriContainer, fmsitsinterface.IvriContainer.Builder, fmsitsinterface.IvriContainerOrBuilder> 
        getIvriContainerFieldBuilder() {
      if (ivriContainerBuilder_ == null) {
        ivriContainerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            fmsitsinterface.IvriContainer, fmsitsinterface.IvriContainer.Builder, fmsitsinterface.IvriContainerOrBuilder>(
                getIvriContainer(),
                getParentForChildren(),
                isClean());
        ivriContainer_ = null;
      }
      return ivriContainerBuilder_;
    }

    private fmsitsinterface.LaneInfo laneInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.LaneInfo, fmsitsinterface.LaneInfo.Builder, fmsitsinterface.LaneInfoOrBuilder> laneInfoBuilder_;
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     * @return Whether the laneInfo field is set.
     */
    public boolean hasLaneInfo() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     * @return The laneInfo.
     */
    public fmsitsinterface.LaneInfo getLaneInfo() {
      if (laneInfoBuilder_ == null) {
        return laneInfo_ == null ? fmsitsinterface.LaneInfo.getDefaultInstance() : laneInfo_;
      } else {
        return laneInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     */
    public Builder setLaneInfo(fmsitsinterface.LaneInfo value) {
      if (laneInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        laneInfo_ = value;
      } else {
        laneInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     */
    public Builder setLaneInfo(
        fmsitsinterface.LaneInfo.Builder builderForValue) {
      if (laneInfoBuilder_ == null) {
        laneInfo_ = builderForValue.build();
      } else {
        laneInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     */
    public Builder mergeLaneInfo(fmsitsinterface.LaneInfo value) {
      if (laneInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0) &&
          laneInfo_ != null &&
          laneInfo_ != fmsitsinterface.LaneInfo.getDefaultInstance()) {
          getLaneInfoBuilder().mergeFrom(value);
        } else {
          laneInfo_ = value;
        }
      } else {
        laneInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     */
    public Builder clearLaneInfo() {
      bitField0_ = (bitField0_ & ~0x00000010);
      laneInfo_ = null;
      if (laneInfoBuilder_ != null) {
        laneInfoBuilder_.dispose();
        laneInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     */
    public fmsitsinterface.LaneInfo.Builder getLaneInfoBuilder() {
      bitField0_ |= 0x00000010;
      onChanged();
      return getLaneInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     */
    public fmsitsinterface.LaneInfoOrBuilder getLaneInfoOrBuilder() {
      if (laneInfoBuilder_ != null) {
        return laneInfoBuilder_.getMessageOrBuilder();
      } else {
        return laneInfo_ == null ?
            fmsitsinterface.LaneInfo.getDefaultInstance() : laneInfo_;
      }
    }
    /**
     * <pre>
     * object indicating the lane for which the event is applicable, its_event_code LANE_CONFIGURATION, TRAFFIC_LIGHT_STATUS, TRAFFIC_LIGHT_TIMING
     * </pre>
     *
     * <code>.fmsitsinterface.LaneInfo lane_info = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.LaneInfo, fmsitsinterface.LaneInfo.Builder, fmsitsinterface.LaneInfoOrBuilder> 
        getLaneInfoFieldBuilder() {
      if (laneInfoBuilder_ == null) {
        laneInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            fmsitsinterface.LaneInfo, fmsitsinterface.LaneInfo.Builder, fmsitsinterface.LaneInfoOrBuilder>(
                getLaneInfo(),
                getParentForChildren(),
                isClean());
        laneInfo_ = null;
      }
      return laneInfoBuilder_;
    }

    private fmsitsinterface.SensorInfo sensorInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.SensorInfo, fmsitsinterface.SensorInfo.Builder, fmsitsinterface.SensorInfoOrBuilder> sensorInfoBuilder_;
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     * @return Whether the sensorInfo field is set.
     */
    public boolean hasSensorInfo() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     * @return The sensorInfo.
     */
    public fmsitsinterface.SensorInfo getSensorInfo() {
      if (sensorInfoBuilder_ == null) {
        return sensorInfo_ == null ? fmsitsinterface.SensorInfo.getDefaultInstance() : sensorInfo_;
      } else {
        return sensorInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     */
    public Builder setSensorInfo(fmsitsinterface.SensorInfo value) {
      if (sensorInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        sensorInfo_ = value;
      } else {
        sensorInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     */
    public Builder setSensorInfo(
        fmsitsinterface.SensorInfo.Builder builderForValue) {
      if (sensorInfoBuilder_ == null) {
        sensorInfo_ = builderForValue.build();
      } else {
        sensorInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     */
    public Builder mergeSensorInfo(fmsitsinterface.SensorInfo value) {
      if (sensorInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000020) != 0) &&
          sensorInfo_ != null &&
          sensorInfo_ != fmsitsinterface.SensorInfo.getDefaultInstance()) {
          getSensorInfoBuilder().mergeFrom(value);
        } else {
          sensorInfo_ = value;
        }
      } else {
        sensorInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     */
    public Builder clearSensorInfo() {
      bitField0_ = (bitField0_ & ~0x00000020);
      sensorInfo_ = null;
      if (sensorInfoBuilder_ != null) {
        sensorInfoBuilder_.dispose();
        sensorInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     */
    public fmsitsinterface.SensorInfo.Builder getSensorInfoBuilder() {
      bitField0_ |= 0x00000020;
      onChanged();
      return getSensorInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     */
    public fmsitsinterface.SensorInfoOrBuilder getSensorInfoOrBuilder() {
      if (sensorInfoBuilder_ != null) {
        return sensorInfoBuilder_.getMessageOrBuilder();
      } else {
        return sensorInfo_ == null ?
            fmsitsinterface.SensorInfo.getDefaultInstance() : sensorInfo_;
      }
    }
    /**
     * <pre>
     * object as placeholder for usecases from category 5, its_event_code TIRE_PRESSURE_GAUGE, ALTIMETER, WEIGHT, PARKING_OCCUPATION, PARKING_RESERVATION
     * </pre>
     *
     * <code>.fmsitsinterface.SensorInfo sensor_info = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.SensorInfo, fmsitsinterface.SensorInfo.Builder, fmsitsinterface.SensorInfoOrBuilder> 
        getSensorInfoFieldBuilder() {
      if (sensorInfoBuilder_ == null) {
        sensorInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            fmsitsinterface.SensorInfo, fmsitsinterface.SensorInfo.Builder, fmsitsinterface.SensorInfoOrBuilder>(
                getSensorInfo(),
                getParentForChildren(),
                isClean());
        sensorInfo_ = null;
      }
      return sensorInfoBuilder_;
    }

    private fmsitsinterface.OvertakingInfo overtakingInfo_;
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.OvertakingInfo, fmsitsinterface.OvertakingInfo.Builder, fmsitsinterface.OvertakingInfoOrBuilder> overtakingInfoBuilder_;
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     * @return Whether the overtakingInfo field is set.
     */
    public boolean hasOvertakingInfo() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     * @return The overtakingInfo.
     */
    public fmsitsinterface.OvertakingInfo getOvertakingInfo() {
      if (overtakingInfoBuilder_ == null) {
        return overtakingInfo_ == null ? fmsitsinterface.OvertakingInfo.getDefaultInstance() : overtakingInfo_;
      } else {
        return overtakingInfoBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     */
    public Builder setOvertakingInfo(fmsitsinterface.OvertakingInfo value) {
      if (overtakingInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        overtakingInfo_ = value;
      } else {
        overtakingInfoBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     */
    public Builder setOvertakingInfo(
        fmsitsinterface.OvertakingInfo.Builder builderForValue) {
      if (overtakingInfoBuilder_ == null) {
        overtakingInfo_ = builderForValue.build();
      } else {
        overtakingInfoBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     */
    public Builder mergeOvertakingInfo(fmsitsinterface.OvertakingInfo value) {
      if (overtakingInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          overtakingInfo_ != null &&
          overtakingInfo_ != fmsitsinterface.OvertakingInfo.getDefaultInstance()) {
          getOvertakingInfoBuilder().mergeFrom(value);
        } else {
          overtakingInfo_ = value;
        }
      } else {
        overtakingInfoBuilder_.mergeFrom(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     */
    public Builder clearOvertakingInfo() {
      bitField0_ = (bitField0_ & ~0x00000040);
      overtakingInfo_ = null;
      if (overtakingInfoBuilder_ != null) {
        overtakingInfoBuilder_.dispose();
        overtakingInfoBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     */
    public fmsitsinterface.OvertakingInfo.Builder getOvertakingInfoBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getOvertakingInfoFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     */
    public fmsitsinterface.OvertakingInfoOrBuilder getOvertakingInfoOrBuilder() {
      if (overtakingInfoBuilder_ != null) {
        return overtakingInfoBuilder_.getMessageOrBuilder();
      } else {
        return overtakingInfo_ == null ?
            fmsitsinterface.OvertakingInfo.getDefaultInstance() : overtakingInfo_;
      }
    }
    /**
     * <pre>
     * object with details for an overtaking ban, its_event_code OVERTAKING_BAN
     * </pre>
     *
     * <code>.fmsitsinterface.OvertakingInfo overtaking_info = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        fmsitsinterface.OvertakingInfo, fmsitsinterface.OvertakingInfo.Builder, fmsitsinterface.OvertakingInfoOrBuilder> 
        getOvertakingInfoFieldBuilder() {
      if (overtakingInfoBuilder_ == null) {
        overtakingInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            fmsitsinterface.OvertakingInfo, fmsitsinterface.OvertakingInfo.Builder, fmsitsinterface.OvertakingInfoOrBuilder>(
                getOvertakingInfo(),
                getParentForChildren(),
                isClean());
        overtakingInfo_ = null;
      }
      return overtakingInfoBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:fmsitsinterface.StaticEventMetadata)
  }

  // @@protoc_insertion_point(class_scope:fmsitsinterface.StaticEventMetadata)
  private static final fmsitsinterface.StaticEventMetadata DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new fmsitsinterface.StaticEventMetadata();
  }

  public static fmsitsinterface.StaticEventMetadata getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<StaticEventMetadata>
      PARSER = new com.google.protobuf.AbstractParser<StaticEventMetadata>() {
    @java.lang.Override
    public StaticEventMetadata parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<StaticEventMetadata> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<StaticEventMetadata> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public fmsitsinterface.StaticEventMetadata getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

