// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMS_ITS_Interface_Specification.proto

package fmsitsinterface;

/**
 * Protobuf type {@code fmsitsinterface.TirePressure}
 */
public final class TirePressure extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:fmsitsinterface.TirePressure)
    TirePressureOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TirePressure.newBuilder() to construct.
  private TirePressure(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TirePressure() {
    status_ = 0;
    anomalies_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TirePressure();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TirePressure_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TirePressure_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            fmsitsinterface.TirePressure.class, fmsitsinterface.TirePressure.Builder.class);
  }

  /**
   * Protobuf enum {@code fmsitsinterface.TirePressure.VehicleTirePressureStatus}
   */
  public enum VehicleTirePressureStatus
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown status
     * </pre>
     *
     * <code>UNKNOWN_STATUS = 0;</code>
     */
    UNKNOWN_STATUS(0),
    /**
     * <pre>
     * OK: all tires seem to be OK
     * </pre>
     *
     * <code>OK = 1;</code>
     */
    OK(1),
    /**
     * <pre>
     * Not OK: at least one tire is suspect and none seem to be flat
     * </pre>
     *
     * <code>NOK_SUSPECT = 2;</code>
     */
    NOK_SUSPECT(2),
    /**
     * <pre>
     * Not OK: at least one tire seems to be flat
     * </pre>
     *
     * <code>NOK_FLAT = 3;</code>
     */
    NOK_FLAT(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown status
     * </pre>
     *
     * <code>UNKNOWN_STATUS = 0;</code>
     */
    public static final int UNKNOWN_STATUS_VALUE = 0;
    /**
     * <pre>
     * OK: all tires seem to be OK
     * </pre>
     *
     * <code>OK = 1;</code>
     */
    public static final int OK_VALUE = 1;
    /**
     * <pre>
     * Not OK: at least one tire is suspect and none seem to be flat
     * </pre>
     *
     * <code>NOK_SUSPECT = 2;</code>
     */
    public static final int NOK_SUSPECT_VALUE = 2;
    /**
     * <pre>
     * Not OK: at least one tire seems to be flat
     * </pre>
     *
     * <code>NOK_FLAT = 3;</code>
     */
    public static final int NOK_FLAT_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static VehicleTirePressureStatus valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VehicleTirePressureStatus forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_STATUS;
        case 1: return OK;
        case 2: return NOK_SUSPECT;
        case 3: return NOK_FLAT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VehicleTirePressureStatus>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VehicleTirePressureStatus> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VehicleTirePressureStatus>() {
            public VehicleTirePressureStatus findValueByNumber(int number) {
              return VehicleTirePressureStatus.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return fmsitsinterface.TirePressure.getDescriptor().getEnumTypes().get(0);
    }

    private static final VehicleTirePressureStatus[] VALUES = values();

    public static VehicleTirePressureStatus valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VehicleTirePressureStatus(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fmsitsinterface.TirePressure.VehicleTirePressureStatus)
  }

  public static final int STATUS_FIELD_NUMBER = 1;
  private int status_ = 0;
  /**
   * <pre>
   * indicating overall status of tire pressure of the vehicle.
   * </pre>
   *
   * <code>.fmsitsinterface.TirePressure.VehicleTirePressureStatus status = 1;</code>
   * @return The enum numeric value on the wire for status.
   */
  @java.lang.Override public int getStatusValue() {
    return status_;
  }
  /**
   * <pre>
   * indicating overall status of tire pressure of the vehicle.
   * </pre>
   *
   * <code>.fmsitsinterface.TirePressure.VehicleTirePressureStatus status = 1;</code>
   * @return The status.
   */
  @java.lang.Override public fmsitsinterface.TirePressure.VehicleTirePressureStatus getStatus() {
    fmsitsinterface.TirePressure.VehicleTirePressureStatus result = fmsitsinterface.TirePressure.VehicleTirePressureStatus.forNumber(status_);
    return result == null ? fmsitsinterface.TirePressure.VehicleTirePressureStatus.UNRECOGNIZED : result;
  }

  public static final int AXLE_COUNT_FIELD_NUMBER = 2;
  private int axleCount_ = 0;
  /**
   * <pre>
   * integer indicating total number of axles of the vehicle
   * </pre>
   *
   * <code>int32 axle_count = 2;</code>
   * @return The axleCount.
   */
  @java.lang.Override
  public int getAxleCount() {
    return axleCount_;
  }

  public static final int ANOMALIES_FIELD_NUMBER = 3;
  @SuppressWarnings("serial")
  private java.util.List<fmsitsinterface.Anomalies> anomalies_;
  /**
   * <pre>
   * object containing detailed information on pressure of every tire that is not OK
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
   */
  @java.lang.Override
  public java.util.List<fmsitsinterface.Anomalies> getAnomaliesList() {
    return anomalies_;
  }
  /**
   * <pre>
   * object containing detailed information on pressure of every tire that is not OK
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
   */
  @java.lang.Override
  public java.util.List<? extends fmsitsinterface.AnomaliesOrBuilder> 
      getAnomaliesOrBuilderList() {
    return anomalies_;
  }
  /**
   * <pre>
   * object containing detailed information on pressure of every tire that is not OK
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
   */
  @java.lang.Override
  public int getAnomaliesCount() {
    return anomalies_.size();
  }
  /**
   * <pre>
   * object containing detailed information on pressure of every tire that is not OK
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
   */
  @java.lang.Override
  public fmsitsinterface.Anomalies getAnomalies(int index) {
    return anomalies_.get(index);
  }
  /**
   * <pre>
   * object containing detailed information on pressure of every tire that is not OK
   * </pre>
   *
   * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
   */
  @java.lang.Override
  public fmsitsinterface.AnomaliesOrBuilder getAnomaliesOrBuilder(
      int index) {
    return anomalies_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (status_ != fmsitsinterface.TirePressure.VehicleTirePressureStatus.UNKNOWN_STATUS.getNumber()) {
      output.writeEnum(1, status_);
    }
    if (axleCount_ != 0) {
      output.writeInt32(2, axleCount_);
    }
    for (int i = 0; i < anomalies_.size(); i++) {
      output.writeMessage(3, anomalies_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (status_ != fmsitsinterface.TirePressure.VehicleTirePressureStatus.UNKNOWN_STATUS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, status_);
    }
    if (axleCount_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, axleCount_);
    }
    for (int i = 0; i < anomalies_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, anomalies_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof fmsitsinterface.TirePressure)) {
      return super.equals(obj);
    }
    fmsitsinterface.TirePressure other = (fmsitsinterface.TirePressure) obj;

    if (status_ != other.status_) return false;
    if (getAxleCount()
        != other.getAxleCount()) return false;
    if (!getAnomaliesList()
        .equals(other.getAnomaliesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + STATUS_FIELD_NUMBER;
    hash = (53 * hash) + status_;
    hash = (37 * hash) + AXLE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + getAxleCount();
    if (getAnomaliesCount() > 0) {
      hash = (37 * hash) + ANOMALIES_FIELD_NUMBER;
      hash = (53 * hash) + getAnomaliesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static fmsitsinterface.TirePressure parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.TirePressure parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.TirePressure parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.TirePressure parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.TirePressure parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.TirePressure parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.TirePressure parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.TirePressure parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static fmsitsinterface.TirePressure parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static fmsitsinterface.TirePressure parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static fmsitsinterface.TirePressure parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.TirePressure parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(fmsitsinterface.TirePressure prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code fmsitsinterface.TirePressure}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fmsitsinterface.TirePressure)
      fmsitsinterface.TirePressureOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TirePressure_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TirePressure_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fmsitsinterface.TirePressure.class, fmsitsinterface.TirePressure.Builder.class);
    }

    // Construct using fmsitsinterface.TirePressure.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      status_ = 0;
      axleCount_ = 0;
      if (anomaliesBuilder_ == null) {
        anomalies_ = java.util.Collections.emptyList();
      } else {
        anomalies_ = null;
        anomaliesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TirePressure_descriptor;
    }

    @java.lang.Override
    public fmsitsinterface.TirePressure getDefaultInstanceForType() {
      return fmsitsinterface.TirePressure.getDefaultInstance();
    }

    @java.lang.Override
    public fmsitsinterface.TirePressure build() {
      fmsitsinterface.TirePressure result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public fmsitsinterface.TirePressure buildPartial() {
      fmsitsinterface.TirePressure result = new fmsitsinterface.TirePressure(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(fmsitsinterface.TirePressure result) {
      if (anomaliesBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0)) {
          anomalies_ = java.util.Collections.unmodifiableList(anomalies_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.anomalies_ = anomalies_;
      } else {
        result.anomalies_ = anomaliesBuilder_.build();
      }
    }

    private void buildPartial0(fmsitsinterface.TirePressure result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.status_ = status_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.axleCount_ = axleCount_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof fmsitsinterface.TirePressure) {
        return mergeFrom((fmsitsinterface.TirePressure)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(fmsitsinterface.TirePressure other) {
      if (other == fmsitsinterface.TirePressure.getDefaultInstance()) return this;
      if (other.status_ != 0) {
        setStatusValue(other.getStatusValue());
      }
      if (other.getAxleCount() != 0) {
        setAxleCount(other.getAxleCount());
      }
      if (anomaliesBuilder_ == null) {
        if (!other.anomalies_.isEmpty()) {
          if (anomalies_.isEmpty()) {
            anomalies_ = other.anomalies_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAnomaliesIsMutable();
            anomalies_.addAll(other.anomalies_);
          }
          onChanged();
        }
      } else {
        if (!other.anomalies_.isEmpty()) {
          if (anomaliesBuilder_.isEmpty()) {
            anomaliesBuilder_.dispose();
            anomaliesBuilder_ = null;
            anomalies_ = other.anomalies_;
            bitField0_ = (bitField0_ & ~0x00000004);
            anomaliesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAnomaliesFieldBuilder() : null;
          } else {
            anomaliesBuilder_.addAllMessages(other.anomalies_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              status_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              axleCount_ = input.readInt32();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 26: {
              fmsitsinterface.Anomalies m =
                  input.readMessage(
                      fmsitsinterface.Anomalies.parser(),
                      extensionRegistry);
              if (anomaliesBuilder_ == null) {
                ensureAnomaliesIsMutable();
                anomalies_.add(m);
              } else {
                anomaliesBuilder_.addMessage(m);
              }
              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int status_ = 0;
    /**
     * <pre>
     * indicating overall status of tire pressure of the vehicle.
     * </pre>
     *
     * <code>.fmsitsinterface.TirePressure.VehicleTirePressureStatus status = 1;</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * indicating overall status of tire pressure of the vehicle.
     * </pre>
     *
     * <code>.fmsitsinterface.TirePressure.VehicleTirePressureStatus status = 1;</code>
     * @param value The enum numeric value on the wire for status to set.
     * @return This builder for chaining.
     */
    public Builder setStatusValue(int value) {
      status_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indicating overall status of tire pressure of the vehicle.
     * </pre>
     *
     * <code>.fmsitsinterface.TirePressure.VehicleTirePressureStatus status = 1;</code>
     * @return The status.
     */
    @java.lang.Override
    public fmsitsinterface.TirePressure.VehicleTirePressureStatus getStatus() {
      fmsitsinterface.TirePressure.VehicleTirePressureStatus result = fmsitsinterface.TirePressure.VehicleTirePressureStatus.forNumber(status_);
      return result == null ? fmsitsinterface.TirePressure.VehicleTirePressureStatus.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * indicating overall status of tire pressure of the vehicle.
     * </pre>
     *
     * <code>.fmsitsinterface.TirePressure.VehicleTirePressureStatus status = 1;</code>
     * @param value The status to set.
     * @return This builder for chaining.
     */
    public Builder setStatus(fmsitsinterface.TirePressure.VehicleTirePressureStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      status_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * indicating overall status of tire pressure of the vehicle.
     * </pre>
     *
     * <code>.fmsitsinterface.TirePressure.VehicleTirePressureStatus status = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearStatus() {
      bitField0_ = (bitField0_ & ~0x00000001);
      status_ = 0;
      onChanged();
      return this;
    }

    private int axleCount_ ;
    /**
     * <pre>
     * integer indicating total number of axles of the vehicle
     * </pre>
     *
     * <code>int32 axle_count = 2;</code>
     * @return The axleCount.
     */
    @java.lang.Override
    public int getAxleCount() {
      return axleCount_;
    }
    /**
     * <pre>
     * integer indicating total number of axles of the vehicle
     * </pre>
     *
     * <code>int32 axle_count = 2;</code>
     * @param value The axleCount to set.
     * @return This builder for chaining.
     */
    public Builder setAxleCount(int value) {

      axleCount_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * integer indicating total number of axles of the vehicle
     * </pre>
     *
     * <code>int32 axle_count = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearAxleCount() {
      bitField0_ = (bitField0_ & ~0x00000002);
      axleCount_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<fmsitsinterface.Anomalies> anomalies_ =
      java.util.Collections.emptyList();
    private void ensureAnomaliesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        anomalies_ = new java.util.ArrayList<fmsitsinterface.Anomalies>(anomalies_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        fmsitsinterface.Anomalies, fmsitsinterface.Anomalies.Builder, fmsitsinterface.AnomaliesOrBuilder> anomaliesBuilder_;

    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public java.util.List<fmsitsinterface.Anomalies> getAnomaliesList() {
      if (anomaliesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(anomalies_);
      } else {
        return anomaliesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public int getAnomaliesCount() {
      if (anomaliesBuilder_ == null) {
        return anomalies_.size();
      } else {
        return anomaliesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public fmsitsinterface.Anomalies getAnomalies(int index) {
      if (anomaliesBuilder_ == null) {
        return anomalies_.get(index);
      } else {
        return anomaliesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder setAnomalies(
        int index, fmsitsinterface.Anomalies value) {
      if (anomaliesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnomaliesIsMutable();
        anomalies_.set(index, value);
        onChanged();
      } else {
        anomaliesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder setAnomalies(
        int index, fmsitsinterface.Anomalies.Builder builderForValue) {
      if (anomaliesBuilder_ == null) {
        ensureAnomaliesIsMutable();
        anomalies_.set(index, builderForValue.build());
        onChanged();
      } else {
        anomaliesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder addAnomalies(fmsitsinterface.Anomalies value) {
      if (anomaliesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnomaliesIsMutable();
        anomalies_.add(value);
        onChanged();
      } else {
        anomaliesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder addAnomalies(
        int index, fmsitsinterface.Anomalies value) {
      if (anomaliesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAnomaliesIsMutable();
        anomalies_.add(index, value);
        onChanged();
      } else {
        anomaliesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder addAnomalies(
        fmsitsinterface.Anomalies.Builder builderForValue) {
      if (anomaliesBuilder_ == null) {
        ensureAnomaliesIsMutable();
        anomalies_.add(builderForValue.build());
        onChanged();
      } else {
        anomaliesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder addAnomalies(
        int index, fmsitsinterface.Anomalies.Builder builderForValue) {
      if (anomaliesBuilder_ == null) {
        ensureAnomaliesIsMutable();
        anomalies_.add(index, builderForValue.build());
        onChanged();
      } else {
        anomaliesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder addAllAnomalies(
        java.lang.Iterable<? extends fmsitsinterface.Anomalies> values) {
      if (anomaliesBuilder_ == null) {
        ensureAnomaliesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, anomalies_);
        onChanged();
      } else {
        anomaliesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder clearAnomalies() {
      if (anomaliesBuilder_ == null) {
        anomalies_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        anomaliesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public Builder removeAnomalies(int index) {
      if (anomaliesBuilder_ == null) {
        ensureAnomaliesIsMutable();
        anomalies_.remove(index);
        onChanged();
      } else {
        anomaliesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public fmsitsinterface.Anomalies.Builder getAnomaliesBuilder(
        int index) {
      return getAnomaliesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public fmsitsinterface.AnomaliesOrBuilder getAnomaliesOrBuilder(
        int index) {
      if (anomaliesBuilder_ == null) {
        return anomalies_.get(index);  } else {
        return anomaliesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public java.util.List<? extends fmsitsinterface.AnomaliesOrBuilder> 
         getAnomaliesOrBuilderList() {
      if (anomaliesBuilder_ != null) {
        return anomaliesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(anomalies_);
      }
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public fmsitsinterface.Anomalies.Builder addAnomaliesBuilder() {
      return getAnomaliesFieldBuilder().addBuilder(
          fmsitsinterface.Anomalies.getDefaultInstance());
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public fmsitsinterface.Anomalies.Builder addAnomaliesBuilder(
        int index) {
      return getAnomaliesFieldBuilder().addBuilder(
          index, fmsitsinterface.Anomalies.getDefaultInstance());
    }
    /**
     * <pre>
     * object containing detailed information on pressure of every tire that is not OK
     * </pre>
     *
     * <code>repeated .fmsitsinterface.Anomalies anomalies = 3;</code>
     */
    public java.util.List<fmsitsinterface.Anomalies.Builder> 
         getAnomaliesBuilderList() {
      return getAnomaliesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        fmsitsinterface.Anomalies, fmsitsinterface.Anomalies.Builder, fmsitsinterface.AnomaliesOrBuilder> 
        getAnomaliesFieldBuilder() {
      if (anomaliesBuilder_ == null) {
        anomaliesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            fmsitsinterface.Anomalies, fmsitsinterface.Anomalies.Builder, fmsitsinterface.AnomaliesOrBuilder>(
                anomalies_,
                ((bitField0_ & 0x00000004) != 0),
                getParentForChildren(),
                isClean());
        anomalies_ = null;
      }
      return anomaliesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:fmsitsinterface.TirePressure)
  }

  // @@protoc_insertion_point(class_scope:fmsitsinterface.TirePressure)
  private static final fmsitsinterface.TirePressure DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new fmsitsinterface.TirePressure();
  }

  public static fmsitsinterface.TirePressure getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TirePressure>
      PARSER = new com.google.protobuf.AbstractParser<TirePressure>() {
    @java.lang.Override
    public TirePressure parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TirePressure> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TirePressure> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public fmsitsinterface.TirePressure getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

