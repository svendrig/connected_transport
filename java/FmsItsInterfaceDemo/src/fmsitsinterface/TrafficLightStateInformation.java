// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMS_ITS_Interface_Specification.proto

package fmsitsinterface;

/**
 * Protobuf type {@code fmsitsinterface.TrafficLightStateInformation}
 */
public final class TrafficLightStateInformation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:fmsitsinterface.TrafficLightStateInformation)
    TrafficLightStateInformationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TrafficLightStateInformation.newBuilder() to construct.
  private TrafficLightStateInformation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TrafficLightStateInformation() {
    currentState_ = 0;
    arrow_ = 0;
    movement_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new TrafficLightStateInformation();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TrafficLightStateInformation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TrafficLightStateInformation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            fmsitsinterface.TrafficLightStateInformation.class, fmsitsinterface.TrafficLightStateInformation.Builder.class);
  }

  /**
   * Protobuf enum {@code fmsitsinterface.TrafficLightStateInformation.CurrentState}
   */
  public enum CurrentState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown traffic light state
     * </pre>
     *
     * <code>UNKNOWN_TRAFFIC_LIGHT_STATE = 0;</code>
     */
    UNKNOWN_TRAFFIC_LIGHT_STATE(0),
    /**
     * <pre>
     * Red
     * </pre>
     *
     * <code>RED = 1;</code>
     */
    RED(1),
    /**
     * <pre>
     * Amber
     * </pre>
     *
     * <code>AMBER = 2;</code>
     */
    AMBER(2),
    /**
     * <pre>
     * Green
     * </pre>
     *
     * <code>GREEN = 3;</code>
     */
    GREEN(3),
    /**
     * <pre>
     * Orange Flashing
     * </pre>
     *
     * <code>ORANGE_FLASHING = 4;</code>
     */
    ORANGE_FLASHING(4),
    /**
     * <pre>
     * Dark
     * </pre>
     *
     * <code>DARK = 5;</code>
     */
    DARK(5),
    /**
     * <pre>
     * Lane without traffic light
     * </pre>
     *
     * <code>NO_LIGHT = 6;</code>
     */
    NO_LIGHT(6),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown traffic light state
     * </pre>
     *
     * <code>UNKNOWN_TRAFFIC_LIGHT_STATE = 0;</code>
     */
    public static final int UNKNOWN_TRAFFIC_LIGHT_STATE_VALUE = 0;
    /**
     * <pre>
     * Red
     * </pre>
     *
     * <code>RED = 1;</code>
     */
    public static final int RED_VALUE = 1;
    /**
     * <pre>
     * Amber
     * </pre>
     *
     * <code>AMBER = 2;</code>
     */
    public static final int AMBER_VALUE = 2;
    /**
     * <pre>
     * Green
     * </pre>
     *
     * <code>GREEN = 3;</code>
     */
    public static final int GREEN_VALUE = 3;
    /**
     * <pre>
     * Orange Flashing
     * </pre>
     *
     * <code>ORANGE_FLASHING = 4;</code>
     */
    public static final int ORANGE_FLASHING_VALUE = 4;
    /**
     * <pre>
     * Dark
     * </pre>
     *
     * <code>DARK = 5;</code>
     */
    public static final int DARK_VALUE = 5;
    /**
     * <pre>
     * Lane without traffic light
     * </pre>
     *
     * <code>NO_LIGHT = 6;</code>
     */
    public static final int NO_LIGHT_VALUE = 6;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CurrentState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static CurrentState forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_TRAFFIC_LIGHT_STATE;
        case 1: return RED;
        case 2: return AMBER;
        case 3: return GREEN;
        case 4: return ORANGE_FLASHING;
        case 5: return DARK;
        case 6: return NO_LIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CurrentState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CurrentState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CurrentState>() {
            public CurrentState findValueByNumber(int number) {
              return CurrentState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return fmsitsinterface.TrafficLightStateInformation.getDescriptor().getEnumTypes().get(0);
    }

    private static final CurrentState[] VALUES = values();

    public static CurrentState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CurrentState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fmsitsinterface.TrafficLightStateInformation.CurrentState)
  }

  /**
   * Protobuf enum {@code fmsitsinterface.TrafficLightStateInformation.Arrow}
   */
  public enum Arrow
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown arrow
     * </pre>
     *
     * <code>UNKNOWN_ARROW = 0;</code>
     */
    UNKNOWN_ARROW(0),
    /**
     * <pre>
     * No arrow
     * </pre>
     *
     * <code>ARROW_NONE = 1;</code>
     */
    ARROW_NONE(1),
    /**
     * <pre>
     * Left arrow
     * </pre>
     *
     * <code>ARROW_LEFT = 2;</code>
     */
    ARROW_LEFT(2),
    /**
     * <pre>
     * Right arrow
     * </pre>
     *
     * <code>ARROW_RIGHT = 3;</code>
     */
    ARROW_RIGHT(3),
    /**
     * <pre>
     * Straight arrow
     * </pre>
     *
     * <code>ARROW_STRAIGHT = 4;</code>
     */
    ARROW_STRAIGHT(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown arrow
     * </pre>
     *
     * <code>UNKNOWN_ARROW = 0;</code>
     */
    public static final int UNKNOWN_ARROW_VALUE = 0;
    /**
     * <pre>
     * No arrow
     * </pre>
     *
     * <code>ARROW_NONE = 1;</code>
     */
    public static final int ARROW_NONE_VALUE = 1;
    /**
     * <pre>
     * Left arrow
     * </pre>
     *
     * <code>ARROW_LEFT = 2;</code>
     */
    public static final int ARROW_LEFT_VALUE = 2;
    /**
     * <pre>
     * Right arrow
     * </pre>
     *
     * <code>ARROW_RIGHT = 3;</code>
     */
    public static final int ARROW_RIGHT_VALUE = 3;
    /**
     * <pre>
     * Straight arrow
     * </pre>
     *
     * <code>ARROW_STRAIGHT = 4;</code>
     */
    public static final int ARROW_STRAIGHT_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Arrow valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Arrow forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_ARROW;
        case 1: return ARROW_NONE;
        case 2: return ARROW_LEFT;
        case 3: return ARROW_RIGHT;
        case 4: return ARROW_STRAIGHT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Arrow>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Arrow> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Arrow>() {
            public Arrow findValueByNumber(int number) {
              return Arrow.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return fmsitsinterface.TrafficLightStateInformation.getDescriptor().getEnumTypes().get(1);
    }

    private static final Arrow[] VALUES = values();

    public static Arrow valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Arrow(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fmsitsinterface.TrafficLightStateInformation.Arrow)
  }

  /**
   * Protobuf enum {@code fmsitsinterface.TrafficLightStateInformation.Movement}
   */
  public enum Movement
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown movement
     * </pre>
     *
     * <code>UNKNOWN_MOVEMENT = 0;</code>
     */
    UNKNOWN_MOVEMENT(0),
    /**
     * <pre>
     * Protected
     * </pre>
     *
     * <code>PROTECTED = 1;</code>
     */
    PROTECTED(1),
    /**
     * <pre>
     * Permissive
     * </pre>
     *
     * <code>PERMISSIVE = 2;</code>
     */
    PERMISSIVE(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown movement
     * </pre>
     *
     * <code>UNKNOWN_MOVEMENT = 0;</code>
     */
    public static final int UNKNOWN_MOVEMENT_VALUE = 0;
    /**
     * <pre>
     * Protected
     * </pre>
     *
     * <code>PROTECTED = 1;</code>
     */
    public static final int PROTECTED_VALUE = 1;
    /**
     * <pre>
     * Permissive
     * </pre>
     *
     * <code>PERMISSIVE = 2;</code>
     */
    public static final int PERMISSIVE_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Movement valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static Movement forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN_MOVEMENT;
        case 1: return PROTECTED;
        case 2: return PERMISSIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Movement>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Movement> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Movement>() {
            public Movement findValueByNumber(int number) {
              return Movement.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return fmsitsinterface.TrafficLightStateInformation.getDescriptor().getEnumTypes().get(2);
    }

    private static final Movement[] VALUES = values();

    public static Movement valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Movement(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:fmsitsinterface.TrafficLightStateInformation.Movement)
  }

  public static final int CURRENT_STATE_FIELD_NUMBER = 1;
  private int currentState_ = 0;
  /**
   * <pre>
   * current state of traffic light at lane specified in laneInfo
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
   * @return The enum numeric value on the wire for currentState.
   */
  @java.lang.Override public int getCurrentStateValue() {
    return currentState_;
  }
  /**
   * <pre>
   * current state of traffic light at lane specified in laneInfo
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
   * @return The currentState.
   */
  @java.lang.Override public fmsitsinterface.TrafficLightStateInformation.CurrentState getCurrentState() {
    fmsitsinterface.TrafficLightStateInformation.CurrentState result = fmsitsinterface.TrafficLightStateInformation.CurrentState.forNumber(currentState_);
    return result == null ? fmsitsinterface.TrafficLightStateInformation.CurrentState.UNRECOGNIZED : result;
  }

  public static final int ARROW_FIELD_NUMBER = 2;
  private int arrow_ = 0;
  /**
   * <pre>
   * Direction of the light
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
   * @return The enum numeric value on the wire for arrow.
   */
  @java.lang.Override public int getArrowValue() {
    return arrow_;
  }
  /**
   * <pre>
   * Direction of the light
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
   * @return The arrow.
   */
  @java.lang.Override public fmsitsinterface.TrafficLightStateInformation.Arrow getArrow() {
    fmsitsinterface.TrafficLightStateInformation.Arrow result = fmsitsinterface.TrafficLightStateInformation.Arrow.forNumber(arrow_);
    return result == null ? fmsitsinterface.TrafficLightStateInformation.Arrow.UNRECOGNIZED : result;
  }

  public static final int MOVEMENT_FIELD_NUMBER = 3;
  private int movement_ = 0;
  /**
   * <pre>
   * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
   * @return The enum numeric value on the wire for movement.
   */
  @java.lang.Override public int getMovementValue() {
    return movement_;
  }
  /**
   * <pre>
   * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
   * @return The movement.
   */
  @java.lang.Override public fmsitsinterface.TrafficLightStateInformation.Movement getMovement() {
    fmsitsinterface.TrafficLightStateInformation.Movement result = fmsitsinterface.TrafficLightStateInformation.Movement.forNumber(movement_);
    return result == null ? fmsitsinterface.TrafficLightStateInformation.Movement.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (currentState_ != fmsitsinterface.TrafficLightStateInformation.CurrentState.UNKNOWN_TRAFFIC_LIGHT_STATE.getNumber()) {
      output.writeEnum(1, currentState_);
    }
    if (arrow_ != fmsitsinterface.TrafficLightStateInformation.Arrow.UNKNOWN_ARROW.getNumber()) {
      output.writeEnum(2, arrow_);
    }
    if (movement_ != fmsitsinterface.TrafficLightStateInformation.Movement.UNKNOWN_MOVEMENT.getNumber()) {
      output.writeEnum(3, movement_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (currentState_ != fmsitsinterface.TrafficLightStateInformation.CurrentState.UNKNOWN_TRAFFIC_LIGHT_STATE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, currentState_);
    }
    if (arrow_ != fmsitsinterface.TrafficLightStateInformation.Arrow.UNKNOWN_ARROW.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, arrow_);
    }
    if (movement_ != fmsitsinterface.TrafficLightStateInformation.Movement.UNKNOWN_MOVEMENT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, movement_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof fmsitsinterface.TrafficLightStateInformation)) {
      return super.equals(obj);
    }
    fmsitsinterface.TrafficLightStateInformation other = (fmsitsinterface.TrafficLightStateInformation) obj;

    if (currentState_ != other.currentState_) return false;
    if (arrow_ != other.arrow_) return false;
    if (movement_ != other.movement_) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + CURRENT_STATE_FIELD_NUMBER;
    hash = (53 * hash) + currentState_;
    hash = (37 * hash) + ARROW_FIELD_NUMBER;
    hash = (53 * hash) + arrow_;
    hash = (37 * hash) + MOVEMENT_FIELD_NUMBER;
    hash = (53 * hash) + movement_;
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static fmsitsinterface.TrafficLightStateInformation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static fmsitsinterface.TrafficLightStateInformation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static fmsitsinterface.TrafficLightStateInformation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static fmsitsinterface.TrafficLightStateInformation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(fmsitsinterface.TrafficLightStateInformation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code fmsitsinterface.TrafficLightStateInformation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:fmsitsinterface.TrafficLightStateInformation)
      fmsitsinterface.TrafficLightStateInformationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TrafficLightStateInformation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TrafficLightStateInformation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              fmsitsinterface.TrafficLightStateInformation.class, fmsitsinterface.TrafficLightStateInformation.Builder.class);
    }

    // Construct using fmsitsinterface.TrafficLightStateInformation.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      currentState_ = 0;
      arrow_ = 0;
      movement_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return fmsitsinterface.FMSITSInterfaceSpecification.internal_static_fmsitsinterface_TrafficLightStateInformation_descriptor;
    }

    @java.lang.Override
    public fmsitsinterface.TrafficLightStateInformation getDefaultInstanceForType() {
      return fmsitsinterface.TrafficLightStateInformation.getDefaultInstance();
    }

    @java.lang.Override
    public fmsitsinterface.TrafficLightStateInformation build() {
      fmsitsinterface.TrafficLightStateInformation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public fmsitsinterface.TrafficLightStateInformation buildPartial() {
      fmsitsinterface.TrafficLightStateInformation result = new fmsitsinterface.TrafficLightStateInformation(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(fmsitsinterface.TrafficLightStateInformation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.currentState_ = currentState_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.arrow_ = arrow_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.movement_ = movement_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof fmsitsinterface.TrafficLightStateInformation) {
        return mergeFrom((fmsitsinterface.TrafficLightStateInformation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(fmsitsinterface.TrafficLightStateInformation other) {
      if (other == fmsitsinterface.TrafficLightStateInformation.getDefaultInstance()) return this;
      if (other.currentState_ != 0) {
        setCurrentStateValue(other.getCurrentStateValue());
      }
      if (other.arrow_ != 0) {
        setArrowValue(other.getArrowValue());
      }
      if (other.movement_ != 0) {
        setMovementValue(other.getMovementValue());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              currentState_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 16: {
              arrow_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              movement_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int currentState_ = 0;
    /**
     * <pre>
     * current state of traffic light at lane specified in laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
     * @return The enum numeric value on the wire for currentState.
     */
    @java.lang.Override public int getCurrentStateValue() {
      return currentState_;
    }
    /**
     * <pre>
     * current state of traffic light at lane specified in laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
     * @param value The enum numeric value on the wire for currentState to set.
     * @return This builder for chaining.
     */
    public Builder setCurrentStateValue(int value) {
      currentState_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * current state of traffic light at lane specified in laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
     * @return The currentState.
     */
    @java.lang.Override
    public fmsitsinterface.TrafficLightStateInformation.CurrentState getCurrentState() {
      fmsitsinterface.TrafficLightStateInformation.CurrentState result = fmsitsinterface.TrafficLightStateInformation.CurrentState.forNumber(currentState_);
      return result == null ? fmsitsinterface.TrafficLightStateInformation.CurrentState.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * current state of traffic light at lane specified in laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
     * @param value The currentState to set.
     * @return This builder for chaining.
     */
    public Builder setCurrentState(fmsitsinterface.TrafficLightStateInformation.CurrentState value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      currentState_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * current state of traffic light at lane specified in laneInfo
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearCurrentState() {
      bitField0_ = (bitField0_ & ~0x00000001);
      currentState_ = 0;
      onChanged();
      return this;
    }

    private int arrow_ = 0;
    /**
     * <pre>
     * Direction of the light
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
     * @return The enum numeric value on the wire for arrow.
     */
    @java.lang.Override public int getArrowValue() {
      return arrow_;
    }
    /**
     * <pre>
     * Direction of the light
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
     * @param value The enum numeric value on the wire for arrow to set.
     * @return This builder for chaining.
     */
    public Builder setArrowValue(int value) {
      arrow_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Direction of the light
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
     * @return The arrow.
     */
    @java.lang.Override
    public fmsitsinterface.TrafficLightStateInformation.Arrow getArrow() {
      fmsitsinterface.TrafficLightStateInformation.Arrow result = fmsitsinterface.TrafficLightStateInformation.Arrow.forNumber(arrow_);
      return result == null ? fmsitsinterface.TrafficLightStateInformation.Arrow.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Direction of the light
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
     * @param value The arrow to set.
     * @return This builder for chaining.
     */
    public Builder setArrow(fmsitsinterface.TrafficLightStateInformation.Arrow value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      arrow_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Direction of the light
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearArrow() {
      bitField0_ = (bitField0_ & ~0x00000002);
      arrow_ = 0;
      onChanged();
      return this;
    }

    private int movement_ = 0;
    /**
     * <pre>
     * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
     * @return The enum numeric value on the wire for movement.
     */
    @java.lang.Override public int getMovementValue() {
      return movement_;
    }
    /**
     * <pre>
     * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
     * @param value The enum numeric value on the wire for movement to set.
     * @return This builder for chaining.
     */
    public Builder setMovementValue(int value) {
      movement_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
     * @return The movement.
     */
    @java.lang.Override
    public fmsitsinterface.TrafficLightStateInformation.Movement getMovement() {
      fmsitsinterface.TrafficLightStateInformation.Movement result = fmsitsinterface.TrafficLightStateInformation.Movement.forNumber(movement_);
      return result == null ? fmsitsinterface.TrafficLightStateInformation.Movement.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
     * @param value The movement to set.
     * @return This builder for chaining.
     */
    public Builder setMovement(fmsitsinterface.TrafficLightStateInformation.Movement value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      movement_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
     * </pre>
     *
     * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMovement() {
      bitField0_ = (bitField0_ & ~0x00000004);
      movement_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:fmsitsinterface.TrafficLightStateInformation)
  }

  // @@protoc_insertion_point(class_scope:fmsitsinterface.TrafficLightStateInformation)
  private static final fmsitsinterface.TrafficLightStateInformation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new fmsitsinterface.TrafficLightStateInformation();
  }

  public static fmsitsinterface.TrafficLightStateInformation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TrafficLightStateInformation>
      PARSER = new com.google.protobuf.AbstractParser<TrafficLightStateInformation>() {
    @java.lang.Override
    public TrafficLightStateInformation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<TrafficLightStateInformation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TrafficLightStateInformation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public fmsitsinterface.TrafficLightStateInformation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

