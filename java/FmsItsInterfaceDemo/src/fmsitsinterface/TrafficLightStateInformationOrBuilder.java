// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FMS_ITS_Interface_Specification.proto

package fmsitsinterface;

public interface TrafficLightStateInformationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:fmsitsinterface.TrafficLightStateInformation)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * current state of traffic light at lane specified in laneInfo
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
   * @return The enum numeric value on the wire for currentState.
   */
  int getCurrentStateValue();
  /**
   * <pre>
   * current state of traffic light at lane specified in laneInfo
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.CurrentState current_state = 1;</code>
   * @return The currentState.
   */
  fmsitsinterface.TrafficLightStateInformation.CurrentState getCurrentState();

  /**
   * <pre>
   * Direction of the light
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
   * @return The enum numeric value on the wire for arrow.
   */
  int getArrowValue();
  /**
   * <pre>
   * Direction of the light
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.Arrow arrow = 2;</code>
   * @return The arrow.
   */
  fmsitsinterface.TrafficLightStateInformation.Arrow getArrow();

  /**
   * <pre>
   * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
   * @return The enum numeric value on the wire for movement.
   */
  int getMovementValue();
  /**
   * <pre>
   * Indicating whether an arrow is needed or a simple round dot. Protected = obligation to show arrow; Permissive = round dot
   * </pre>
   *
   * <code>.fmsitsinterface.TrafficLightStateInformation.Movement movement = 3;</code>
   * @return The movement.
   */
  fmsitsinterface.TrafficLightStateInformation.Movement getMovement();
}
